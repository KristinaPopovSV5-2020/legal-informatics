( defrule rule2-deductive-gen219 ( declare ( salience ( calc-salience is_speeding_on_town_road_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen34 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ) ( object ( name ?gen35 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ) ( test ( <= ?Speed 50 ) ) ( object ( name ?gen37 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ) ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ) ( not ( object ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv1 ?Defendant ) ) ) ( make-instance ?oid of is_speeding_on_town_road_lv1 ( defendant ?Defendant ) ) )
( defrule rule4-deductive-gen221 ( declare ( salience ( calc-salience is_speeding_on_town_road_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen72 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv1 ?Defendant ) ) ) ( make-instance ?oid of is_speeding_on_town_road_lv1 ( defendant ?Defendant ) ) )
( defrule rule6-deductive-gen223 ( declare ( salience ( calc-salience is_speeding_on_town_road_lv2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen100 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv2 ?Defendant ) ) ) ( make-instance ?oid of is_speeding_on_town_road_lv2 ( defendant ?Defendant ) ) )
( defrule rule7-deductive-gen224 ( declare ( salience ( calc-salience is_speeding_on_town_road_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen109 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv1 ?Defendant ) ) ) ( make-instance ?oid of is_speeding_on_town_road_lv1 ( defendant ?Defendant ) ) )
( defrule pen4-deductive-gen229 ( declare ( salience ( calc-salience to_pay_min ) ) ) ( run-deductive-rules ) ( object ( name ?gen164 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_min ) ( value 20000 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_min 20000 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_min 20000 ) ) ) ( make-instance ?oid of to_pay_min ( value 20000 ) ) )
( defrule pen5-deductive-gen230 ( declare ( salience ( calc-salience to_pay_max ) ) ) ( run-deductive-rules ) ( object ( name ?gen173 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_max ) ( value 40000 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_max 40000 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_max 40000 ) ) ) ( make-instance ?oid of to_pay_max ( value 40000 ) ) )
( defrule pen7-deductive-gen232 ( declare ( salience ( calc-salience max_imprisonment ) ) ) ( run-deductive-rules ) ( object ( name ?gen191 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment ) ( value 60 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment 60 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment 60 ) ) ) ( make-instance ?oid of max_imprisonment ( value 60 ) ) )
( defrule pen8-deductive-gen233 ( declare ( salience ( calc-salience to_pay_min ) ) ) ( run-deductive-rules ) ( object ( name ?gen200 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_min ) ( value 40000 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_min 40000 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_min 40000 ) ) ) ( make-instance ?oid of to_pay_min ( value 40000 ) ) )
( defrule pen9-deductive-gen234 ( declare ( salience ( calc-salience to_pay_max ) ) ) ( run-deductive-rules ) ( object ( name ?gen209 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_max ) ( value 60000 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_max 60000 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_max 60000 ) ) ) ( make-instance ?oid of to_pay_max ( value 60000 ) ) )
( defrule pen9-defeasibly-dot-gen235 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen210 ) ( is-a to_pay_max ) ( value 60000 ) ( positive 1 ) ( positive-derivator pen9 $? ) ) ( test ( eq ( class ?gen210 ) to_pay_max ) ) ( not ( and ( object ( name ?gen217 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen216 & : ( >= ?gen216 1 ) ) ) ( object ( name ?gen210 ) ( is-a to_pay_max ) ( negative ~ 2 ) ( positive-overruled $?gen212 & : ( not ( member$ pen9 $?gen212 ) ) ) ) ) )  ( not ( object ( name ?gen210 ) ( is-a to_pay_max ) ( positive 0 ) ) ) ( test ( instance-existp ?gen210 ) ) => ( message-modify-instance ?gen210 ( positive 0 ) ) )
( defrule pen9-defeasibly-gen237 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen217 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen216 & : ( >= ?gen216 1 ) ) ) ( object ( name ?gen210 ) ( is-a to_pay_max ) ( value 60000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen212 & : ( not ( member$ pen9 $?gen212 ) ) ) ) ( test ( eq ( class ?gen210 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen210 ) ( is-a to_pay_max ) ( positive 1 ) ( positive-derivator pen9 ?gen217 ) ) ) ( test ( instance-existp ?gen210 ) ) => ( message-modify-instance ?gen210 ( positive 1 ) ( positive-derivator pen9 ?gen217 ) ) )
( defrule pen9-overruled-dot-gen239 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen210 ) ( is-a to_pay_max ) ( value 60000 ) ( negative-support $?gen213 ) ( negative-overruled $?gen214 & : ( subseq-pos ( create$ pen9-overruled $?gen213 $$$ $?gen214 ) ) ) ) ( test ( eq ( class ?gen210 ) to_pay_max ) ) ( not ( and ( object ( name ?gen217 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen216 & : ( >= ?gen216 1 ) ) ) ( object ( name ?gen210 ) ( is-a to_pay_max ) ( positive-defeated $?gen212 & : ( not ( member$ pen9 $?gen212 ) ) ) ) ) ) ( test ( neq $?gen213 (create$) ) ) ( not ( object ( name ?gen210 ) ( is-a to_pay_max ) ( negative-overruled $?gen215 & : ( eq $?gen215 ( delete-member$ $?gen214 ( create$ pen9-overruled $?gen213 ) ) ) ) ) ) ( test ( instance-existp ?gen210 ) ) => ( bind $?gen215 ( delete-member$ $?gen214 ( create$ pen9-overruled $?gen213 ) ) ) ( message-modify-instance ?gen210 ( negative-overruled $?gen215 ) ) )
( defrule pen9-overruled-gen241 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen217 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen216 & : ( >= ?gen216 1 ) ) ) ( object ( name ?gen210 ) ( is-a to_pay_max ) ( value 60000 ) ( negative-support $?gen213 ) ( negative-overruled $?gen214 & : ( not ( subseq-pos ( create$ pen9-overruled $?gen213 $$$ $?gen214 ) ) ) ) ( positive-defeated $?gen212 & : ( not ( member$ pen9 $?gen212 ) ) ) ) ( test ( eq ( class ?gen210 ) to_pay_max ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen213 (create$) ) ) ) ( not ( object ( name ?gen210 ) ( is-a to_pay_max ) ( negative-overruled $?gen215 & : ( eq $?gen215 ( create$ pen9-overruled $?gen213 $?gen214 ) ) ) ) ) ( test ( instance-existp ?gen210 ) ) => ( bind $?gen215 ( create$ pen9-overruled $?gen213 $?gen214 ) ) ( message-modify-instance ?gen210 ( negative-overruled $?gen215 ) ) )
( defrule pen9-support-gen243 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen209 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ) ( object ( name ?gen210 ) ( is-a to_pay_max ) ( value 60000 ) ( positive-support $?gen212 & : ( not ( subseq-pos ( create$ pen9 ?gen209 $$$ $?gen212 ) ) ) ) ) ( test ( eq ( class ?gen210 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen210 ) ( is-a to_pay_max ) ( positive-support $?gen215 & : ( eq $?gen215 ( create$ pen9 ?gen209 $?gen212 ) ) ) ) ) ( test ( instance-existp ?gen210 ) ) => ( bind $?gen215 ( create$ pen9 ?gen209 $?gen212 ) ) ( message-modify-instance ?gen210 ( positive-support $?gen215 ) ) )
( defrule pen8-defeasibly-dot-gen245 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen201 ) ( is-a to_pay_min ) ( value 40000 ) ( positive 1 ) ( positive-derivator pen8 $? ) ) ( test ( eq ( class ?gen201 ) to_pay_min ) ) ( not ( and ( object ( name ?gen208 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen207 & : ( >= ?gen207 1 ) ) ) ( object ( name ?gen201 ) ( is-a to_pay_min ) ( negative ~ 2 ) ( positive-overruled $?gen203 & : ( not ( member$ pen8 $?gen203 ) ) ) ) ) )  ( not ( object ( name ?gen201 ) ( is-a to_pay_min ) ( positive 0 ) ) ) ( test ( instance-existp ?gen201 ) ) => ( message-modify-instance ?gen201 ( positive 0 ) ) )
( defrule pen8-defeasibly-gen247 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen208 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen207 & : ( >= ?gen207 1 ) ) ) ( object ( name ?gen201 ) ( is-a to_pay_min ) ( value 40000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen203 & : ( not ( member$ pen8 $?gen203 ) ) ) ) ( test ( eq ( class ?gen201 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen201 ) ( is-a to_pay_min ) ( positive 1 ) ( positive-derivator pen8 ?gen208 ) ) ) ( test ( instance-existp ?gen201 ) ) => ( message-modify-instance ?gen201 ( positive 1 ) ( positive-derivator pen8 ?gen208 ) ) )
( defrule pen8-overruled-dot-gen249 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen201 ) ( is-a to_pay_min ) ( value 40000 ) ( negative-support $?gen204 ) ( negative-overruled $?gen205 & : ( subseq-pos ( create$ pen8-overruled $?gen204 $$$ $?gen205 ) ) ) ) ( test ( eq ( class ?gen201 ) to_pay_min ) ) ( not ( and ( object ( name ?gen208 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen207 & : ( >= ?gen207 1 ) ) ) ( object ( name ?gen201 ) ( is-a to_pay_min ) ( positive-defeated $?gen203 & : ( not ( member$ pen8 $?gen203 ) ) ) ) ) ) ( test ( neq $?gen204 (create$) ) ) ( not ( object ( name ?gen201 ) ( is-a to_pay_min ) ( negative-overruled $?gen206 & : ( eq $?gen206 ( delete-member$ $?gen205 ( create$ pen8-overruled $?gen204 ) ) ) ) ) ) ( test ( instance-existp ?gen201 ) ) => ( bind $?gen206 ( delete-member$ $?gen205 ( create$ pen8-overruled $?gen204 ) ) ) ( message-modify-instance ?gen201 ( negative-overruled $?gen206 ) ) )
( defrule pen8-overruled-gen251 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen208 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen207 & : ( >= ?gen207 1 ) ) ) ( object ( name ?gen201 ) ( is-a to_pay_min ) ( value 40000 ) ( negative-support $?gen204 ) ( negative-overruled $?gen205 & : ( not ( subseq-pos ( create$ pen8-overruled $?gen204 $$$ $?gen205 ) ) ) ) ( positive-defeated $?gen203 & : ( not ( member$ pen8 $?gen203 ) ) ) ) ( test ( eq ( class ?gen201 ) to_pay_min ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen204 (create$) ) ) ) ( not ( object ( name ?gen201 ) ( is-a to_pay_min ) ( negative-overruled $?gen206 & : ( eq $?gen206 ( create$ pen8-overruled $?gen204 $?gen205 ) ) ) ) ) ( test ( instance-existp ?gen201 ) ) => ( bind $?gen206 ( create$ pen8-overruled $?gen204 $?gen205 ) ) ( message-modify-instance ?gen201 ( negative-overruled $?gen206 ) ) )
( defrule pen8-support-gen253 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen200 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ) ( object ( name ?gen201 ) ( is-a to_pay_min ) ( value 40000 ) ( positive-support $?gen203 & : ( not ( subseq-pos ( create$ pen8 ?gen200 $$$ $?gen203 ) ) ) ) ) ( test ( eq ( class ?gen201 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen201 ) ( is-a to_pay_min ) ( positive-support $?gen206 & : ( eq $?gen206 ( create$ pen8 ?gen200 $?gen203 ) ) ) ) ) ( test ( instance-existp ?gen201 ) ) => ( bind $?gen206 ( create$ pen8 ?gen200 $?gen203 ) ) ( message-modify-instance ?gen201 ( positive-support $?gen206 ) ) )
( defrule pen7-defeasibly-dot-gen255 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( value 60 ) ( positive 1 ) ( positive-derivator pen7 $? ) ) ( test ( eq ( class ?gen192 ) max_imprisonment ) ) ( not ( and ( object ( name ?gen199 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen198 & : ( >= ?gen198 1 ) ) ) ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( negative ~ 2 ) ( positive-overruled $?gen194 & : ( not ( member$ pen7 $?gen194 ) ) ) ) ) )  ( not ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( positive 0 ) ) ) ( test ( instance-existp ?gen192 ) ) => ( message-modify-instance ?gen192 ( positive 0 ) ) )
( defrule pen7-defeasibly-gen257 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen199 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen198 & : ( >= ?gen198 1 ) ) ) ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( value 60 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen194 & : ( not ( member$ pen7 $?gen194 ) ) ) ) ( test ( eq ( class ?gen192 ) max_imprisonment ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( positive 1 ) ( positive-derivator pen7 ?gen199 ) ) ) ( test ( instance-existp ?gen192 ) ) => ( message-modify-instance ?gen192 ( positive 1 ) ( positive-derivator pen7 ?gen199 ) ) )
( defrule pen7-overruled-dot-gen259 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( value 60 ) ( negative-support $?gen195 ) ( negative-overruled $?gen196 & : ( subseq-pos ( create$ pen7-overruled $?gen195 $$$ $?gen196 ) ) ) ) ( test ( eq ( class ?gen192 ) max_imprisonment ) ) ( not ( and ( object ( name ?gen199 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen198 & : ( >= ?gen198 1 ) ) ) ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( positive-defeated $?gen194 & : ( not ( member$ pen7 $?gen194 ) ) ) ) ) ) ( test ( neq $?gen195 (create$) ) ) ( not ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( negative-overruled $?gen197 & : ( eq $?gen197 ( delete-member$ $?gen196 ( create$ pen7-overruled $?gen195 ) ) ) ) ) ) ( test ( instance-existp ?gen192 ) ) => ( bind $?gen197 ( delete-member$ $?gen196 ( create$ pen7-overruled $?gen195 ) ) ) ( message-modify-instance ?gen192 ( negative-overruled $?gen197 ) ) )
( defrule pen7-overruled-gen261 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen199 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive ?gen198 & : ( >= ?gen198 1 ) ) ) ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( value 60 ) ( negative-support $?gen195 ) ( negative-overruled $?gen196 & : ( not ( subseq-pos ( create$ pen7-overruled $?gen195 $$$ $?gen196 ) ) ) ) ( positive-defeated $?gen194 & : ( not ( member$ pen7 $?gen194 ) ) ) ) ( test ( eq ( class ?gen192 ) max_imprisonment ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen195 (create$) ) ) ) ( not ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( negative-overruled $?gen197 & : ( eq $?gen197 ( create$ pen7-overruled $?gen195 $?gen196 ) ) ) ) ) ( test ( instance-existp ?gen192 ) ) => ( bind $?gen197 ( create$ pen7-overruled $?gen195 $?gen196 ) ) ( message-modify-instance ?gen192 ( negative-overruled $?gen197 ) ) )
( defrule pen7-support-gen263 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen191 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ) ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( value 60 ) ( positive-support $?gen194 & : ( not ( subseq-pos ( create$ pen7 ?gen191 $$$ $?gen194 ) ) ) ) ) ( test ( eq ( class ?gen192 ) max_imprisonment ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen192 ) ( is-a max_imprisonment ) ( positive-support $?gen197 & : ( eq $?gen197 ( create$ pen7 ?gen191 $?gen194 ) ) ) ) ) ( test ( instance-existp ?gen192 ) ) => ( bind $?gen197 ( create$ pen7 ?gen191 $?gen194 ) ) ( message-modify-instance ?gen192 ( positive-support $?gen197 ) ) )
( defrule pen6-defeasibly-dot-gen265 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( value 30 ) ( positive 1 ) ( positive-derivator pen6 $? ) ) ( test ( eq ( class ?gen183 ) max_imprisonment ) ) ( not ( and ( object ( name ?gen190 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen189 & : ( >= ?gen189 1 ) ) ) ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( negative ~ 2 ) ( positive-overruled $?gen185 & : ( not ( member$ pen6 $?gen185 ) ) ) ) ) )  ( not ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( positive 0 ) ) ) ( test ( instance-existp ?gen183 ) ) => ( message-modify-instance ?gen183 ( positive 0 ) ) )
( defrule pen6-defeasibly-gen267 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen190 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen189 & : ( >= ?gen189 1 ) ) ) ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( value 30 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen185 & : ( not ( member$ pen6 $?gen185 ) ) ) ) ( test ( eq ( class ?gen183 ) max_imprisonment ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( positive 1 ) ( positive-derivator pen6 ?gen190 ) ) ) ( test ( instance-existp ?gen183 ) ) => ( message-modify-instance ?gen183 ( positive 1 ) ( positive-derivator pen6 ?gen190 ) ) )
( defrule pen6-overruled-dot-gen269 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( value 30 ) ( negative-support $?gen186 ) ( negative-overruled $?gen187 & : ( subseq-pos ( create$ pen6-overruled $?gen186 $$$ $?gen187 ) ) ) ) ( test ( eq ( class ?gen183 ) max_imprisonment ) ) ( not ( and ( object ( name ?gen190 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen189 & : ( >= ?gen189 1 ) ) ) ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( positive-defeated $?gen185 & : ( not ( member$ pen6 $?gen185 ) ) ) ) ) ) ( test ( neq $?gen186 (create$) ) ) ( not ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( negative-overruled $?gen188 & : ( eq $?gen188 ( delete-member$ $?gen187 ( create$ pen6-overruled $?gen186 ) ) ) ) ) ) ( test ( instance-existp ?gen183 ) ) => ( bind $?gen188 ( delete-member$ $?gen187 ( create$ pen6-overruled $?gen186 ) ) ) ( message-modify-instance ?gen183 ( negative-overruled $?gen188 ) ) )
( defrule pen6-overruled-gen271 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen190 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen189 & : ( >= ?gen189 1 ) ) ) ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( value 30 ) ( negative-support $?gen186 ) ( negative-overruled $?gen187 & : ( not ( subseq-pos ( create$ pen6-overruled $?gen186 $$$ $?gen187 ) ) ) ) ( positive-defeated $?gen185 & : ( not ( member$ pen6 $?gen185 ) ) ) ) ( test ( eq ( class ?gen183 ) max_imprisonment ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen186 (create$) ) ) ) ( not ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( negative-overruled $?gen188 & : ( eq $?gen188 ( create$ pen6-overruled $?gen186 $?gen187 ) ) ) ) ) ( test ( instance-existp ?gen183 ) ) => ( bind $?gen188 ( create$ pen6-overruled $?gen186 $?gen187 ) ) ( message-modify-instance ?gen183 ( negative-overruled $?gen188 ) ) )
( defrule pen6-support-gen273 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen182 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( value 30 ) ( positive-support $?gen185 & : ( not ( subseq-pos ( create$ pen6 ?gen182 $$$ $?gen185 ) ) ) ) ) ( test ( eq ( class ?gen183 ) max_imprisonment ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen183 ) ( is-a max_imprisonment ) ( positive-support $?gen188 & : ( eq $?gen188 ( create$ pen6 ?gen182 $?gen185 ) ) ) ) ) ( test ( instance-existp ?gen183 ) ) => ( bind $?gen188 ( create$ pen6 ?gen182 $?gen185 ) ) ( message-modify-instance ?gen183 ( positive-support $?gen188 ) ) )
( defrule pen5-defeasibly-dot-gen275 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen174 ) ( is-a to_pay_max ) ( value 40000 ) ( positive 1 ) ( positive-derivator pen5 $? ) ) ( test ( eq ( class ?gen174 ) to_pay_max ) ) ( not ( and ( object ( name ?gen181 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen180 & : ( >= ?gen180 1 ) ) ) ( object ( name ?gen174 ) ( is-a to_pay_max ) ( negative ~ 2 ) ( positive-overruled $?gen176 & : ( not ( member$ pen5 $?gen176 ) ) ) ) ) )  ( not ( object ( name ?gen174 ) ( is-a to_pay_max ) ( positive 0 ) ) ) ( test ( instance-existp ?gen174 ) ) => ( message-modify-instance ?gen174 ( positive 0 ) ) )
( defrule pen5-defeasibly-gen277 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen181 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen180 & : ( >= ?gen180 1 ) ) ) ( object ( name ?gen174 ) ( is-a to_pay_max ) ( value 40000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen176 & : ( not ( member$ pen5 $?gen176 ) ) ) ) ( test ( eq ( class ?gen174 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen174 ) ( is-a to_pay_max ) ( positive 1 ) ( positive-derivator pen5 ?gen181 ) ) ) ( test ( instance-existp ?gen174 ) ) => ( message-modify-instance ?gen174 ( positive 1 ) ( positive-derivator pen5 ?gen181 ) ) )
( defrule pen5-overruled-dot-gen279 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen174 ) ( is-a to_pay_max ) ( value 40000 ) ( negative-support $?gen177 ) ( negative-overruled $?gen178 & : ( subseq-pos ( create$ pen5-overruled $?gen177 $$$ $?gen178 ) ) ) ) ( test ( eq ( class ?gen174 ) to_pay_max ) ) ( not ( and ( object ( name ?gen181 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen180 & : ( >= ?gen180 1 ) ) ) ( object ( name ?gen174 ) ( is-a to_pay_max ) ( positive-defeated $?gen176 & : ( not ( member$ pen5 $?gen176 ) ) ) ) ) ) ( test ( neq $?gen177 (create$) ) ) ( not ( object ( name ?gen174 ) ( is-a to_pay_max ) ( negative-overruled $?gen179 & : ( eq $?gen179 ( delete-member$ $?gen178 ( create$ pen5-overruled $?gen177 ) ) ) ) ) ) ( test ( instance-existp ?gen174 ) ) => ( bind $?gen179 ( delete-member$ $?gen178 ( create$ pen5-overruled $?gen177 ) ) ) ( message-modify-instance ?gen174 ( negative-overruled $?gen179 ) ) )
( defrule pen5-overruled-gen281 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen181 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen180 & : ( >= ?gen180 1 ) ) ) ( object ( name ?gen174 ) ( is-a to_pay_max ) ( value 40000 ) ( negative-support $?gen177 ) ( negative-overruled $?gen178 & : ( not ( subseq-pos ( create$ pen5-overruled $?gen177 $$$ $?gen178 ) ) ) ) ( positive-defeated $?gen176 & : ( not ( member$ pen5 $?gen176 ) ) ) ) ( test ( eq ( class ?gen174 ) to_pay_max ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen177 (create$) ) ) ) ( not ( object ( name ?gen174 ) ( is-a to_pay_max ) ( negative-overruled $?gen179 & : ( eq $?gen179 ( create$ pen5-overruled $?gen177 $?gen178 ) ) ) ) ) ( test ( instance-existp ?gen174 ) ) => ( bind $?gen179 ( create$ pen5-overruled $?gen177 $?gen178 ) ) ( message-modify-instance ?gen174 ( negative-overruled $?gen179 ) ) )
( defrule pen5-support-gen283 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen173 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ( object ( name ?gen174 ) ( is-a to_pay_max ) ( value 40000 ) ( positive-support $?gen176 & : ( not ( subseq-pos ( create$ pen5 ?gen173 $$$ $?gen176 ) ) ) ) ) ( test ( eq ( class ?gen174 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen174 ) ( is-a to_pay_max ) ( positive-support $?gen179 & : ( eq $?gen179 ( create$ pen5 ?gen173 $?gen176 ) ) ) ) ) ( test ( instance-existp ?gen174 ) ) => ( bind $?gen179 ( create$ pen5 ?gen173 $?gen176 ) ) ( message-modify-instance ?gen174 ( positive-support $?gen179 ) ) )
( defrule pen4-defeasibly-dot-gen285 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen165 ) ( is-a to_pay_min ) ( value 20000 ) ( positive 1 ) ( positive-derivator pen4 $? ) ) ( test ( eq ( class ?gen165 ) to_pay_min ) ) ( not ( and ( object ( name ?gen172 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen171 & : ( >= ?gen171 1 ) ) ) ( object ( name ?gen165 ) ( is-a to_pay_min ) ( negative ~ 2 ) ( positive-overruled $?gen167 & : ( not ( member$ pen4 $?gen167 ) ) ) ) ) )  ( not ( object ( name ?gen165 ) ( is-a to_pay_min ) ( positive 0 ) ) ) ( test ( instance-existp ?gen165 ) ) => ( message-modify-instance ?gen165 ( positive 0 ) ) )
( defrule pen4-defeasibly-gen287 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen172 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen171 & : ( >= ?gen171 1 ) ) ) ( object ( name ?gen165 ) ( is-a to_pay_min ) ( value 20000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen167 & : ( not ( member$ pen4 $?gen167 ) ) ) ) ( test ( eq ( class ?gen165 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen165 ) ( is-a to_pay_min ) ( positive 1 ) ( positive-derivator pen4 ?gen172 ) ) ) ( test ( instance-existp ?gen165 ) ) => ( message-modify-instance ?gen165 ( positive 1 ) ( positive-derivator pen4 ?gen172 ) ) )
( defrule pen4-overruled-dot-gen289 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen165 ) ( is-a to_pay_min ) ( value 20000 ) ( negative-support $?gen168 ) ( negative-overruled $?gen169 & : ( subseq-pos ( create$ pen4-overruled $?gen168 $$$ $?gen169 ) ) ) ) ( test ( eq ( class ?gen165 ) to_pay_min ) ) ( not ( and ( object ( name ?gen172 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen171 & : ( >= ?gen171 1 ) ) ) ( object ( name ?gen165 ) ( is-a to_pay_min ) ( positive-defeated $?gen167 & : ( not ( member$ pen4 $?gen167 ) ) ) ) ) ) ( test ( neq $?gen168 (create$) ) ) ( not ( object ( name ?gen165 ) ( is-a to_pay_min ) ( negative-overruled $?gen170 & : ( eq $?gen170 ( delete-member$ $?gen169 ( create$ pen4-overruled $?gen168 ) ) ) ) ) ) ( test ( instance-existp ?gen165 ) ) => ( bind $?gen170 ( delete-member$ $?gen169 ( create$ pen4-overruled $?gen168 ) ) ) ( message-modify-instance ?gen165 ( negative-overruled $?gen170 ) ) )
( defrule pen4-overruled-gen291 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen172 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen171 & : ( >= ?gen171 1 ) ) ) ( object ( name ?gen165 ) ( is-a to_pay_min ) ( value 20000 ) ( negative-support $?gen168 ) ( negative-overruled $?gen169 & : ( not ( subseq-pos ( create$ pen4-overruled $?gen168 $$$ $?gen169 ) ) ) ) ( positive-defeated $?gen167 & : ( not ( member$ pen4 $?gen167 ) ) ) ) ( test ( eq ( class ?gen165 ) to_pay_min ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen168 (create$) ) ) ) ( not ( object ( name ?gen165 ) ( is-a to_pay_min ) ( negative-overruled $?gen170 & : ( eq $?gen170 ( create$ pen4-overruled $?gen168 $?gen169 ) ) ) ) ) ( test ( instance-existp ?gen165 ) ) => ( bind $?gen170 ( create$ pen4-overruled $?gen168 $?gen169 ) ) ( message-modify-instance ?gen165 ( negative-overruled $?gen170 ) ) )
( defrule pen4-support-gen293 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen164 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ( object ( name ?gen165 ) ( is-a to_pay_min ) ( value 20000 ) ( positive-support $?gen167 & : ( not ( subseq-pos ( create$ pen4 ?gen164 $$$ $?gen167 ) ) ) ) ) ( test ( eq ( class ?gen165 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen165 ) ( is-a to_pay_min ) ( positive-support $?gen170 & : ( eq $?gen170 ( create$ pen4 ?gen164 $?gen167 ) ) ) ) ) ( test ( instance-existp ?gen165 ) ) => ( bind $?gen170 ( create$ pen4 ?gen164 $?gen167 ) ) ( message-modify-instance ?gen165 ( positive-support $?gen170 ) ) )
( defrule pen3-defeasibly-dot-gen295 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen156 ) ( is-a to_pay_max ) ( value 20000 ) ( positive 1 ) ( positive-derivator pen3 $? ) ) ( test ( eq ( class ?gen156 ) to_pay_max ) ) ( not ( and ( object ( name ?gen163 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen162 & : ( >= ?gen162 1 ) ) ) ( object ( name ?gen156 ) ( is-a to_pay_max ) ( negative ~ 2 ) ( positive-overruled $?gen158 & : ( not ( member$ pen3 $?gen158 ) ) ) ) ) )  ( not ( object ( name ?gen156 ) ( is-a to_pay_max ) ( positive 0 ) ) ) ( test ( instance-existp ?gen156 ) ) => ( message-modify-instance ?gen156 ( positive 0 ) ) )
( defrule pen3-defeasibly-gen297 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen163 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen162 & : ( >= ?gen162 1 ) ) ) ( object ( name ?gen156 ) ( is-a to_pay_max ) ( value 20000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen158 & : ( not ( member$ pen3 $?gen158 ) ) ) ) ( test ( eq ( class ?gen156 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen156 ) ( is-a to_pay_max ) ( positive 1 ) ( positive-derivator pen3 ?gen163 ) ) ) ( test ( instance-existp ?gen156 ) ) => ( message-modify-instance ?gen156 ( positive 1 ) ( positive-derivator pen3 ?gen163 ) ) )
( defrule pen3-overruled-dot-gen299 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen156 ) ( is-a to_pay_max ) ( value 20000 ) ( negative-support $?gen159 ) ( negative-overruled $?gen160 & : ( subseq-pos ( create$ pen3-overruled $?gen159 $$$ $?gen160 ) ) ) ) ( test ( eq ( class ?gen156 ) to_pay_max ) ) ( not ( and ( object ( name ?gen163 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen162 & : ( >= ?gen162 1 ) ) ) ( object ( name ?gen156 ) ( is-a to_pay_max ) ( positive-defeated $?gen158 & : ( not ( member$ pen3 $?gen158 ) ) ) ) ) ) ( test ( neq $?gen159 (create$) ) ) ( not ( object ( name ?gen156 ) ( is-a to_pay_max ) ( negative-overruled $?gen161 & : ( eq $?gen161 ( delete-member$ $?gen160 ( create$ pen3-overruled $?gen159 ) ) ) ) ) ) ( test ( instance-existp ?gen156 ) ) => ( bind $?gen161 ( delete-member$ $?gen160 ( create$ pen3-overruled $?gen159 ) ) ) ( message-modify-instance ?gen156 ( negative-overruled $?gen161 ) ) )
( defrule pen3-overruled-gen301 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen163 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen162 & : ( >= ?gen162 1 ) ) ) ( object ( name ?gen156 ) ( is-a to_pay_max ) ( value 20000 ) ( negative-support $?gen159 ) ( negative-overruled $?gen160 & : ( not ( subseq-pos ( create$ pen3-overruled $?gen159 $$$ $?gen160 ) ) ) ) ( positive-defeated $?gen158 & : ( not ( member$ pen3 $?gen158 ) ) ) ) ( test ( eq ( class ?gen156 ) to_pay_max ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen159 (create$) ) ) ) ( not ( object ( name ?gen156 ) ( is-a to_pay_max ) ( negative-overruled $?gen161 & : ( eq $?gen161 ( create$ pen3-overruled $?gen159 $?gen160 ) ) ) ) ) ( test ( instance-existp ?gen156 ) ) => ( bind $?gen161 ( create$ pen3-overruled $?gen159 $?gen160 ) ) ( message-modify-instance ?gen156 ( negative-overruled $?gen161 ) ) )
( defrule pen3-support-gen303 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen155 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ) ( object ( name ?gen156 ) ( is-a to_pay_max ) ( value 20000 ) ( positive-support $?gen158 & : ( not ( subseq-pos ( create$ pen3 ?gen155 $$$ $?gen158 ) ) ) ) ) ( test ( eq ( class ?gen156 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen156 ) ( is-a to_pay_max ) ( positive-support $?gen161 & : ( eq $?gen161 ( create$ pen3 ?gen155 $?gen158 ) ) ) ) ) ( test ( instance-existp ?gen156 ) ) => ( bind $?gen161 ( create$ pen3 ?gen155 $?gen158 ) ) ( message-modify-instance ?gen156 ( positive-support $?gen161 ) ) )
( defrule pen2-defeasibly-dot-gen305 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen147 ) ( is-a to_pay_min ) ( value 10000 ) ( positive 1 ) ( positive-derivator pen2 $? ) ) ( test ( eq ( class ?gen147 ) to_pay_min ) ) ( not ( and ( object ( name ?gen154 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen153 & : ( >= ?gen153 1 ) ) ) ( object ( name ?gen147 ) ( is-a to_pay_min ) ( negative ~ 2 ) ( positive-overruled $?gen149 & : ( not ( member$ pen2 $?gen149 ) ) ) ) ) )  ( not ( object ( name ?gen147 ) ( is-a to_pay_min ) ( positive 0 ) ) ) ( test ( instance-existp ?gen147 ) ) => ( message-modify-instance ?gen147 ( positive 0 ) ) )
( defrule pen2-defeasibly-gen307 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen154 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen153 & : ( >= ?gen153 1 ) ) ) ( object ( name ?gen147 ) ( is-a to_pay_min ) ( value 10000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen149 & : ( not ( member$ pen2 $?gen149 ) ) ) ) ( test ( eq ( class ?gen147 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen147 ) ( is-a to_pay_min ) ( positive 1 ) ( positive-derivator pen2 ?gen154 ) ) ) ( test ( instance-existp ?gen147 ) ) => ( message-modify-instance ?gen147 ( positive 1 ) ( positive-derivator pen2 ?gen154 ) ) )
( defrule pen2-overruled-dot-gen309 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen147 ) ( is-a to_pay_min ) ( value 10000 ) ( negative-support $?gen150 ) ( negative-overruled $?gen151 & : ( subseq-pos ( create$ pen2-overruled $?gen150 $$$ $?gen151 ) ) ) ) ( test ( eq ( class ?gen147 ) to_pay_min ) ) ( not ( and ( object ( name ?gen154 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen153 & : ( >= ?gen153 1 ) ) ) ( object ( name ?gen147 ) ( is-a to_pay_min ) ( positive-defeated $?gen149 & : ( not ( member$ pen2 $?gen149 ) ) ) ) ) ) ( test ( neq $?gen150 (create$) ) ) ( not ( object ( name ?gen147 ) ( is-a to_pay_min ) ( negative-overruled $?gen152 & : ( eq $?gen152 ( delete-member$ $?gen151 ( create$ pen2-overruled $?gen150 ) ) ) ) ) ) ( test ( instance-existp ?gen147 ) ) => ( bind $?gen152 ( delete-member$ $?gen151 ( create$ pen2-overruled $?gen150 ) ) ) ( message-modify-instance ?gen147 ( negative-overruled $?gen152 ) ) )
( defrule pen2-overruled-gen311 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen154 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen153 & : ( >= ?gen153 1 ) ) ) ( object ( name ?gen147 ) ( is-a to_pay_min ) ( value 10000 ) ( negative-support $?gen150 ) ( negative-overruled $?gen151 & : ( not ( subseq-pos ( create$ pen2-overruled $?gen150 $$$ $?gen151 ) ) ) ) ( positive-defeated $?gen149 & : ( not ( member$ pen2 $?gen149 ) ) ) ) ( test ( eq ( class ?gen147 ) to_pay_min ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen150 (create$) ) ) ) ( not ( object ( name ?gen147 ) ( is-a to_pay_min ) ( negative-overruled $?gen152 & : ( eq $?gen152 ( create$ pen2-overruled $?gen150 $?gen151 ) ) ) ) ) ( test ( instance-existp ?gen147 ) ) => ( bind $?gen152 ( create$ pen2-overruled $?gen150 $?gen151 ) ) ( message-modify-instance ?gen147 ( negative-overruled $?gen152 ) ) )
( defrule pen2-support-gen313 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen146 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ) ( object ( name ?gen147 ) ( is-a to_pay_min ) ( value 10000 ) ( positive-support $?gen149 & : ( not ( subseq-pos ( create$ pen2 ?gen146 $$$ $?gen149 ) ) ) ) ) ( test ( eq ( class ?gen147 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen147 ) ( is-a to_pay_min ) ( positive-support $?gen152 & : ( eq $?gen152 ( create$ pen2 ?gen146 $?gen149 ) ) ) ) ) ( test ( instance-existp ?gen147 ) ) => ( bind $?gen152 ( create$ pen2 ?gen146 $?gen149 ) ) ( message-modify-instance ?gen147 ( positive-support $?gen152 ) ) )
( defrule pen1-defeasibly-dot-gen315 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen138 ) ( is-a to_pay ) ( value 10000 ) ( positive 1 ) ( positive-derivator pen1 $? ) ) ( test ( eq ( class ?gen138 ) to_pay ) ) ( not ( and ( object ( name ?gen145 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive ?gen144 & : ( >= ?gen144 1 ) ) ) ( object ( name ?gen138 ) ( is-a to_pay ) ( negative ~ 2 ) ( positive-overruled $?gen140 & : ( not ( member$ pen1 $?gen140 ) ) ) ) ) )  ( not ( object ( name ?gen138 ) ( is-a to_pay ) ( positive 0 ) ) ) ( test ( instance-existp ?gen138 ) ) => ( message-modify-instance ?gen138 ( positive 0 ) ) )
( defrule pen1-defeasibly-gen317 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen145 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive ?gen144 & : ( >= ?gen144 1 ) ) ) ( object ( name ?gen138 ) ( is-a to_pay ) ( value 10000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen140 & : ( not ( member$ pen1 $?gen140 ) ) ) ) ( test ( eq ( class ?gen138 ) to_pay ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen138 ) ( is-a to_pay ) ( positive 1 ) ( positive-derivator pen1 ?gen145 ) ) ) ( test ( instance-existp ?gen138 ) ) => ( message-modify-instance ?gen138 ( positive 1 ) ( positive-derivator pen1 ?gen145 ) ) )
( defrule pen1-overruled-dot-gen319 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen138 ) ( is-a to_pay ) ( value 10000 ) ( negative-support $?gen141 ) ( negative-overruled $?gen142 & : ( subseq-pos ( create$ pen1-overruled $?gen141 $$$ $?gen142 ) ) ) ) ( test ( eq ( class ?gen138 ) to_pay ) ) ( not ( and ( object ( name ?gen145 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive ?gen144 & : ( >= ?gen144 1 ) ) ) ( object ( name ?gen138 ) ( is-a to_pay ) ( positive-defeated $?gen140 & : ( not ( member$ pen1 $?gen140 ) ) ) ) ) ) ( test ( neq $?gen141 (create$) ) ) ( not ( object ( name ?gen138 ) ( is-a to_pay ) ( negative-overruled $?gen143 & : ( eq $?gen143 ( delete-member$ $?gen142 ( create$ pen1-overruled $?gen141 ) ) ) ) ) ) ( test ( instance-existp ?gen138 ) ) => ( bind $?gen143 ( delete-member$ $?gen142 ( create$ pen1-overruled $?gen141 ) ) ) ( message-modify-instance ?gen138 ( negative-overruled $?gen143 ) ) )
( defrule pen1-overruled-gen321 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen145 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive ?gen144 & : ( >= ?gen144 1 ) ) ) ( object ( name ?gen138 ) ( is-a to_pay ) ( value 10000 ) ( negative-support $?gen141 ) ( negative-overruled $?gen142 & : ( not ( subseq-pos ( create$ pen1-overruled $?gen141 $$$ $?gen142 ) ) ) ) ( positive-defeated $?gen140 & : ( not ( member$ pen1 $?gen140 ) ) ) ) ( test ( eq ( class ?gen138 ) to_pay ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen141 (create$) ) ) ) ( not ( object ( name ?gen138 ) ( is-a to_pay ) ( negative-overruled $?gen143 & : ( eq $?gen143 ( create$ pen1-overruled $?gen141 $?gen142 ) ) ) ) ) ( test ( instance-existp ?gen138 ) ) => ( bind $?gen143 ( create$ pen1-overruled $?gen141 $?gen142 ) ) ( message-modify-instance ?gen138 ( negative-overruled $?gen143 ) ) )
( defrule pen1-support-gen323 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen137 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ) ( object ( name ?gen138 ) ( is-a to_pay ) ( value 10000 ) ( positive-support $?gen140 & : ( not ( subseq-pos ( create$ pen1 ?gen137 $$$ $?gen140 ) ) ) ) ) ( test ( eq ( class ?gen138 ) to_pay ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen138 ) ( is-a to_pay ) ( positive-support $?gen143 & : ( eq $?gen143 ( create$ pen1 ?gen137 $?gen140 ) ) ) ) ) ( test ( instance-existp ?gen138 ) ) => ( bind $?gen143 ( create$ pen1 ?gen137 $?gen140 ) ) ( message-modify-instance ?gen138 ( positive-support $?gen143 ) ) )
( defrule rule8-defeasibly-dot-gen325 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule8 $? ) ) ( test ( eq ( class ?gen123 ) is_speeding_on_town_road_lv3_with_accident ) ) ( not ( and ( object ( name ?gen130 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen129 & : ( >= ?gen129 1 ) ) ) ( object ( name ?gen132 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen131 & : ( >= ?gen131 1 ) ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen134 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen136 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "yes" ) ( positive ?gen135 & : ( >= ?gen135 1 ) ) ) ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( negative ~ 2 ) ( positive-overruled $?gen125 & : ( not ( member$ rule8 $?gen125 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( positive 0 ) ) ) ( test ( instance-existp ?gen123 ) ) => ( message-modify-instance ?gen123 ( positive 0 ) ) )
( defrule rule8-defeasibly-gen327 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen130 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen129 & : ( >= ?gen129 1 ) ) ) ( object ( name ?gen132 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen131 & : ( >= ?gen131 1 ) ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen134 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen136 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "yes" ) ( positive ?gen135 & : ( >= ?gen135 1 ) ) ) ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen125 & : ( not ( member$ rule8 $?gen125 ) ) ) ) ( test ( eq ( class ?gen123 ) is_speeding_on_town_road_lv3_with_accident ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( positive 1 ) ( positive-derivator rule8 ?gen130 ?gen132 ?gen134 ?gen136 ) ) ) ( test ( instance-existp ?gen123 ) ) => ( message-modify-instance ?gen123 ( positive 1 ) ( positive-derivator rule8 ?gen130 ?gen132 ?gen134 ?gen136 ) ) )
( defrule rule8-overruled-dot-gen329 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( negative-support $?gen126 ) ( negative-overruled $?gen127 & : ( subseq-pos ( create$ rule8-overruled $?gen126 $$$ $?gen127 ) ) ) ) ( test ( eq ( class ?gen123 ) is_speeding_on_town_road_lv3_with_accident ) ) ( not ( and ( object ( name ?gen130 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen129 & : ( >= ?gen129 1 ) ) ) ( object ( name ?gen132 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen131 & : ( >= ?gen131 1 ) ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen134 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen136 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "yes" ) ( positive ?gen135 & : ( >= ?gen135 1 ) ) ) ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( positive-defeated $?gen125 & : ( not ( member$ rule8 $?gen125 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen126 (create$) ) ) ) ( not ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( negative-overruled $?gen128 & : ( eq $?gen128 ( delete-member$ $?gen127 ( create$ rule8-overruled $?gen126 ) ) ) ) ) ) ( test ( instance-existp ?gen123 ) ) => ( bind $?gen128 ( delete-member$ $?gen127 ( create$ rule8-overruled $?gen126 ) ) ) ( message-modify-instance ?gen123 ( negative-overruled $?gen128 ) ) )
( defrule rule8-overruled-gen331 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen130 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen129 & : ( >= ?gen129 1 ) ) ) ( object ( name ?gen132 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen131 & : ( >= ?gen131 1 ) ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen134 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen136 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "yes" ) ( positive ?gen135 & : ( >= ?gen135 1 ) ) ) ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( negative-support $?gen126 ) ( negative-overruled $?gen127 & : ( not ( subseq-pos ( create$ rule8-overruled $?gen126 $$$ $?gen127 ) ) ) ) ( positive-defeated $?gen125 & : ( not ( member$ rule8 $?gen125 ) ) ) ) ( test ( eq ( class ?gen123 ) is_speeding_on_town_road_lv3_with_accident ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen126 (create$) ) ) ) ( not ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( negative-overruled $?gen128 & : ( eq $?gen128 ( create$ rule8-overruled $?gen126 $?gen127 ) ) ) ) ) ( test ( instance-existp ?gen123 ) ) => ( bind $?gen128 ( create$ rule8-overruled $?gen126 $?gen127 ) ) ( message-modify-instance ?gen123 ( negative-overruled $?gen128 ) ) )
( defrule rule8-support-gen333 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen118 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ) ( object ( name ?gen119 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen121 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ) ( object ( name ?gen122 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "yes" ) ) ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ( positive-support $?gen125 & : ( not ( subseq-pos ( create$ rule8 ?gen118 ?gen119 ?gen121 ?gen122 $$$ $?gen125 ) ) ) ) ) ( test ( eq ( class ?gen123 ) is_speeding_on_town_road_lv3_with_accident ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen123 ) ( is-a is_speeding_on_town_road_lv3_with_accident ) ( positive-support $?gen128 & : ( eq $?gen128 ( create$ rule8 ?gen118 ?gen119 ?gen121 ?gen122 $?gen125 ) ) ) ) ) ( test ( instance-existp ?gen123 ) ) => ( bind $?gen128 ( create$ rule8 ?gen118 ?gen119 ?gen121 ?gen122 $?gen125 ) ) ( message-modify-instance ?gen123 ( positive-support $?gen128 ) ) )
( defrule rule7-defeated-dot-gen335 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-defeated $?gen113 & : ( subseq-pos ( create$ rule7-defeated rule1 $$$ $?gen113 ) ) ) ) ( test ( eq ( class ?gen110 ) is_speeding_on_town_road_lv1 ) ) ( not ( object ( name ?gen117 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-defeated $?gen112 & : ( eq $?gen112 ( delete-member$ $?gen113 ( create$ rule7-defeated rule1 ) ) ) ) ) ) ( test ( instance-existp ?gen110 ) ) => ( bind $?gen112 ( delete-member$ $?gen113 ( create$ rule7-defeated rule1 ) ) ) ( message-modify-instance ?gen110 ( positive-defeated $?gen112 ) ) )
( defrule rule7-defeated-gen337 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen117 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-defeated $?gen113 & : ( not ( subseq-pos ( create$ rule7-defeated rule1 $$$ $?gen113 ) ) ) ) ) ( test ( eq ( class ?gen110 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-defeated $?gen112 & : ( eq $?gen112 ( create$ rule7-defeated rule1 $?gen113 ) ) ) ) ) ( test ( instance-existp ?gen110 ) ) => ( bind $?gen112 ( create$ rule7-defeated rule1 $?gen113 ) ) ( message-modify-instance ?gen110 ( positive-defeated $?gen112 ) ) )
( defrule rule7-defeasibly-dot-gen339 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule7 $? ) ) ( test ( eq ( class ?gen110 ) is_speeding_on_town_road_lv1 ) ) ( not ( and ( object ( name ?gen117 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive ~ 2 ) ( negative-overruled $?gen112 & : ( not ( member$ rule7 $?gen112 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative 0 ) ) ) ( test ( instance-existp ?gen110 ) ) => ( message-modify-instance ?gen110 ( negative 0 ) ) )
( defrule rule7-defeasibly-gen341 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen117 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen112 & : ( not ( member$ rule7 $?gen112 ) ) ) ) ( test ( eq ( class ?gen110 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative 1 ) ( negative-derivator rule7 ?gen117 ) ) ) ( test ( instance-existp ?gen110 ) ) => ( message-modify-instance ?gen110 ( negative 1 ) ( negative-derivator rule7 ?gen117 ) ) )
( defrule rule7-overruled-dot-gen343 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen113 ) ( positive-overruled $?gen114 & : ( subseq-pos ( create$ rule7-overruled $?gen113 $$$ $?gen114 ) ) ) ) ( test ( eq ( class ?gen110 ) is_speeding_on_town_road_lv1 ) ) ( not ( and ( object ( name ?gen117 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative-defeated $?gen112 & : ( not ( member$ rule7 $?gen112 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen113 (create$) ) ) ) ( not ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-overruled $?gen115 & : ( eq $?gen115 ( delete-member$ $?gen114 ( create$ rule7-overruled $?gen113 ) ) ) ) ) ) ( test ( instance-existp ?gen110 ) ) => ( bind $?gen115 ( delete-member$ $?gen114 ( create$ rule7-overruled $?gen113 ) ) ) ( message-modify-instance ?gen110 ( positive-overruled $?gen115 ) ) )
( defrule rule7-overruled-gen345 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen117 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen113 ) ( positive-overruled $?gen114 & : ( not ( subseq-pos ( create$ rule7-overruled $?gen113 $$$ $?gen114 ) ) ) ) ( negative-defeated $?gen112 & : ( not ( member$ rule7 $?gen112 ) ) ) ) ( test ( eq ( class ?gen110 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen113 (create$) ) ) ) ( not ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-overruled $?gen115 & : ( eq $?gen115 ( create$ rule7-overruled $?gen113 $?gen114 ) ) ) ) ) ( test ( instance-existp ?gen110 ) ) => ( bind $?gen115 ( create$ rule7-overruled $?gen113 $?gen114 ) ) ( message-modify-instance ?gen110 ( positive-overruled $?gen115 ) ) )
( defrule rule7-support-gen347 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen109 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen112 & : ( not ( subseq-pos ( create$ rule7 ?gen109 $$$ $?gen112 ) ) ) ) ) ( test ( eq ( class ?gen110 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen110 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative-support $?gen115 & : ( eq $?gen115 ( create$ rule7 ?gen109 $?gen112 ) ) ) ) ) ( test ( instance-existp ?gen110 ) ) => ( bind $?gen115 ( create$ rule7 ?gen109 $?gen112 ) ) ( message-modify-instance ?gen110 ( negative-support $?gen115 ) ) )
( defrule rule6-defeated-dot-gen349 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive-defeated $?gen104 & : ( subseq-pos ( create$ rule6-defeated rule3 $$$ $?gen104 ) ) ) ) ( test ( eq ( class ?gen101 ) is_speeding_on_town_road_lv2 ) ) ( not ( object ( name ?gen108 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen107 & : ( >= ?gen107 1 ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( positive-defeated $?gen103 & : ( eq $?gen103 ( delete-member$ $?gen104 ( create$ rule6-defeated rule3 ) ) ) ) ) ) ( test ( instance-existp ?gen101 ) ) => ( bind $?gen103 ( delete-member$ $?gen104 ( create$ rule6-defeated rule3 ) ) ) ( message-modify-instance ?gen101 ( positive-defeated $?gen103 ) ) )
( defrule rule6-defeated-gen351 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen108 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen107 & : ( >= ?gen107 1 ) ) ) ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive-defeated $?gen104 & : ( not ( subseq-pos ( create$ rule6-defeated rule3 $$$ $?gen104 ) ) ) ) ) ( test ( eq ( class ?gen101 ) is_speeding_on_town_road_lv2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( positive-defeated $?gen103 & : ( eq $?gen103 ( create$ rule6-defeated rule3 $?gen104 ) ) ) ) ) ( test ( instance-existp ?gen101 ) ) => ( bind $?gen103 ( create$ rule6-defeated rule3 $?gen104 ) ) ( message-modify-instance ?gen101 ( positive-defeated $?gen103 ) ) )
( defrule rule6-defeasibly-dot-gen353 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule6 $? ) ) ( test ( eq ( class ?gen101 ) is_speeding_on_town_road_lv2 ) ) ( not ( and ( object ( name ?gen108 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen107 & : ( >= ?gen107 1 ) ) ) ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( positive ~ 2 ) ( negative-overruled $?gen103 & : ( not ( member$ rule6 $?gen103 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( negative 0 ) ) ) ( test ( instance-existp ?gen101 ) ) => ( message-modify-instance ?gen101 ( negative 0 ) ) )
( defrule rule6-defeasibly-gen355 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen108 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen107 & : ( >= ?gen107 1 ) ) ) ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen103 & : ( not ( member$ rule6 $?gen103 ) ) ) ) ( test ( eq ( class ?gen101 ) is_speeding_on_town_road_lv2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( negative 1 ) ( negative-derivator rule6 ?gen108 ) ) ) ( test ( instance-existp ?gen101 ) ) => ( message-modify-instance ?gen101 ( negative 1 ) ( negative-derivator rule6 ?gen108 ) ) )
( defrule rule6-overruled-dot-gen357 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive-support $?gen104 ) ( positive-overruled $?gen105 & : ( subseq-pos ( create$ rule6-overruled $?gen104 $$$ $?gen105 ) ) ) ) ( test ( eq ( class ?gen101 ) is_speeding_on_town_road_lv2 ) ) ( not ( and ( object ( name ?gen108 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen107 & : ( >= ?gen107 1 ) ) ) ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( negative-defeated $?gen103 & : ( not ( member$ rule6 $?gen103 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen104 (create$) ) ) ) ( not ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( positive-overruled $?gen106 & : ( eq $?gen106 ( delete-member$ $?gen105 ( create$ rule6-overruled $?gen104 ) ) ) ) ) ) ( test ( instance-existp ?gen101 ) ) => ( bind $?gen106 ( delete-member$ $?gen105 ( create$ rule6-overruled $?gen104 ) ) ) ( message-modify-instance ?gen101 ( positive-overruled $?gen106 ) ) )
( defrule rule6-overruled-gen359 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen108 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive ?gen107 & : ( >= ?gen107 1 ) ) ) ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive-support $?gen104 ) ( positive-overruled $?gen105 & : ( not ( subseq-pos ( create$ rule6-overruled $?gen104 $$$ $?gen105 ) ) ) ) ( negative-defeated $?gen103 & : ( not ( member$ rule6 $?gen103 ) ) ) ) ( test ( eq ( class ?gen101 ) is_speeding_on_town_road_lv2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen104 (create$) ) ) ) ( not ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( positive-overruled $?gen106 & : ( eq $?gen106 ( create$ rule6-overruled $?gen104 $?gen105 ) ) ) ) ) ( test ( instance-existp ?gen101 ) ) => ( bind $?gen106 ( create$ rule6-overruled $?gen104 $?gen105 ) ) ( message-modify-instance ?gen101 ( positive-overruled $?gen106 ) ) )
( defrule rule6-support-gen361 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen100 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( negative-support $?gen103 & : ( not ( subseq-pos ( create$ rule6 ?gen100 $$$ $?gen103 ) ) ) ) ) ( test ( eq ( class ?gen101 ) is_speeding_on_town_road_lv2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen101 ) ( is-a is_speeding_on_town_road_lv2 ) ( negative-support $?gen106 & : ( eq $?gen106 ( create$ rule6 ?gen100 $?gen103 ) ) ) ) ) ( test ( instance-existp ?gen101 ) ) => ( bind $?gen106 ( create$ rule6 ?gen100 $?gen103 ) ) ( message-modify-instance ?gen101 ( negative-support $?gen106 ) ) )
( defrule rule5-defeasibly-dot-gen363 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule5 $? ) ) ( test ( eq ( class ?gen86 ) is_speeding_on_town_road_lv3 ) ) ( not ( and ( object ( name ?gen93 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen92 & : ( >= ?gen92 1 ) ) ) ( object ( name ?gen95 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen94 & : ( >= ?gen94 1 ) ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen97 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen96 & : ( >= ?gen96 1 ) ) ) ( object ( name ?gen99 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen98 & : ( >= ?gen98 1 ) ) ) ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( negative ~ 2 ) ( positive-overruled $?gen88 & : ( not ( member$ rule5 $?gen88 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen86 ) ) => ( message-modify-instance ?gen86 ( positive 0 ) ) )
( defrule rule5-defeasibly-gen365 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen93 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen92 & : ( >= ?gen92 1 ) ) ) ( object ( name ?gen95 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen94 & : ( >= ?gen94 1 ) ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen97 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen96 & : ( >= ?gen96 1 ) ) ) ( object ( name ?gen99 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen98 & : ( >= ?gen98 1 ) ) ) ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen88 & : ( not ( member$ rule5 $?gen88 ) ) ) ) ( test ( eq ( class ?gen86 ) is_speeding_on_town_road_lv3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( positive 1 ) ( positive-derivator rule5 ?gen93 ?gen95 ?gen97 ?gen99 ) ) ) ( test ( instance-existp ?gen86 ) ) => ( message-modify-instance ?gen86 ( positive 1 ) ( positive-derivator rule5 ?gen93 ?gen95 ?gen97 ?gen99 ) ) )
( defrule rule5-overruled-dot-gen367 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( negative-support $?gen89 ) ( negative-overruled $?gen90 & : ( subseq-pos ( create$ rule5-overruled $?gen89 $$$ $?gen90 ) ) ) ) ( test ( eq ( class ?gen86 ) is_speeding_on_town_road_lv3 ) ) ( not ( and ( object ( name ?gen93 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen92 & : ( >= ?gen92 1 ) ) ) ( object ( name ?gen95 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen94 & : ( >= ?gen94 1 ) ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen97 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen96 & : ( >= ?gen96 1 ) ) ) ( object ( name ?gen99 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen98 & : ( >= ?gen98 1 ) ) ) ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( positive-defeated $?gen88 & : ( not ( member$ rule5 $?gen88 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen89 (create$) ) ) ) ( not ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( negative-overruled $?gen91 & : ( eq $?gen91 ( delete-member$ $?gen90 ( create$ rule5-overruled $?gen89 ) ) ) ) ) ) ( test ( instance-existp ?gen86 ) ) => ( bind $?gen91 ( delete-member$ $?gen90 ( create$ rule5-overruled $?gen89 ) ) ) ( message-modify-instance ?gen86 ( negative-overruled $?gen91 ) ) )
( defrule rule5-overruled-gen369 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen93 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen92 & : ( >= ?gen92 1 ) ) ) ( object ( name ?gen95 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen94 & : ( >= ?gen94 1 ) ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen97 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen96 & : ( >= ?gen96 1 ) ) ) ( object ( name ?gen99 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen98 & : ( >= ?gen98 1 ) ) ) ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( negative-support $?gen89 ) ( negative-overruled $?gen90 & : ( not ( subseq-pos ( create$ rule5-overruled $?gen89 $$$ $?gen90 ) ) ) ) ( positive-defeated $?gen88 & : ( not ( member$ rule5 $?gen88 ) ) ) ) ( test ( eq ( class ?gen86 ) is_speeding_on_town_road_lv3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen89 (create$) ) ) ) ( not ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( negative-overruled $?gen91 & : ( eq $?gen91 ( create$ rule5-overruled $?gen89 $?gen90 ) ) ) ) ) ( test ( instance-existp ?gen86 ) ) => ( bind $?gen91 ( create$ rule5-overruled $?gen89 $?gen90 ) ) ( message-modify-instance ?gen86 ( negative-overruled $?gen91 ) ) )
( defrule rule5-support-gen371 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen81 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ) ( object ( name ?gen82 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen84 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ) ( object ( name ?gen85 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ) ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ( positive-support $?gen88 & : ( not ( subseq-pos ( create$ rule5 ?gen81 ?gen82 ?gen84 ?gen85 $$$ $?gen88 ) ) ) ) ) ( test ( eq ( class ?gen86 ) is_speeding_on_town_road_lv3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen86 ) ( is-a is_speeding_on_town_road_lv3 ) ( positive-support $?gen91 & : ( eq $?gen91 ( create$ rule5 ?gen81 ?gen82 ?gen84 ?gen85 $?gen88 ) ) ) ) ) ( test ( instance-existp ?gen86 ) ) => ( bind $?gen91 ( create$ rule5 ?gen81 ?gen82 ?gen84 ?gen85 $?gen88 ) ) ( message-modify-instance ?gen86 ( positive-support $?gen91 ) ) )
( defrule rule4-defeated-dot-gen373 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-defeated $?gen76 & : ( subseq-pos ( create$ rule4-defeated rule1 $$$ $?gen76 ) ) ) ) ( test ( eq ( class ?gen73 ) is_speeding_on_town_road_lv1 ) ) ( not ( object ( name ?gen80 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen79 & : ( >= ?gen79 1 ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-defeated $?gen75 & : ( eq $?gen75 ( delete-member$ $?gen76 ( create$ rule4-defeated rule1 ) ) ) ) ) ) ( test ( instance-existp ?gen73 ) ) => ( bind $?gen75 ( delete-member$ $?gen76 ( create$ rule4-defeated rule1 ) ) ) ( message-modify-instance ?gen73 ( positive-defeated $?gen75 ) ) )
( defrule rule4-defeated-gen375 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen80 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen79 & : ( >= ?gen79 1 ) ) ) ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-defeated $?gen76 & : ( not ( subseq-pos ( create$ rule4-defeated rule1 $$$ $?gen76 ) ) ) ) ) ( test ( eq ( class ?gen73 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-defeated $?gen75 & : ( eq $?gen75 ( create$ rule4-defeated rule1 $?gen76 ) ) ) ) ) ( test ( instance-existp ?gen73 ) ) => ( bind $?gen75 ( create$ rule4-defeated rule1 $?gen76 ) ) ( message-modify-instance ?gen73 ( positive-defeated $?gen75 ) ) )
( defrule rule4-defeasibly-dot-gen377 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule4 $? ) ) ( test ( eq ( class ?gen73 ) is_speeding_on_town_road_lv1 ) ) ( not ( and ( object ( name ?gen80 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen79 & : ( >= ?gen79 1 ) ) ) ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive ~ 2 ) ( negative-overruled $?gen75 & : ( not ( member$ rule4 $?gen75 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative 0 ) ) ) ( test ( instance-existp ?gen73 ) ) => ( message-modify-instance ?gen73 ( negative 0 ) ) )
( defrule rule4-defeasibly-gen379 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen80 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen79 & : ( >= ?gen79 1 ) ) ) ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen75 & : ( not ( member$ rule4 $?gen75 ) ) ) ) ( test ( eq ( class ?gen73 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative 1 ) ( negative-derivator rule4 ?gen80 ) ) ) ( test ( instance-existp ?gen73 ) ) => ( message-modify-instance ?gen73 ( negative 1 ) ( negative-derivator rule4 ?gen80 ) ) )
( defrule rule4-overruled-dot-gen381 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen76 ) ( positive-overruled $?gen77 & : ( subseq-pos ( create$ rule4-overruled $?gen76 $$$ $?gen77 ) ) ) ) ( test ( eq ( class ?gen73 ) is_speeding_on_town_road_lv1 ) ) ( not ( and ( object ( name ?gen80 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen79 & : ( >= ?gen79 1 ) ) ) ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative-defeated $?gen75 & : ( not ( member$ rule4 $?gen75 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen76 (create$) ) ) ) ( not ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-overruled $?gen78 & : ( eq $?gen78 ( delete-member$ $?gen77 ( create$ rule4-overruled $?gen76 ) ) ) ) ) ) ( test ( instance-existp ?gen73 ) ) => ( bind $?gen78 ( delete-member$ $?gen77 ( create$ rule4-overruled $?gen76 ) ) ) ( message-modify-instance ?gen73 ( positive-overruled $?gen78 ) ) )
( defrule rule4-overruled-gen383 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen80 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive ?gen79 & : ( >= ?gen79 1 ) ) ) ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen76 ) ( positive-overruled $?gen77 & : ( not ( subseq-pos ( create$ rule4-overruled $?gen76 $$$ $?gen77 ) ) ) ) ( negative-defeated $?gen75 & : ( not ( member$ rule4 $?gen75 ) ) ) ) ( test ( eq ( class ?gen73 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen76 (create$) ) ) ) ( not ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-overruled $?gen78 & : ( eq $?gen78 ( create$ rule4-overruled $?gen76 $?gen77 ) ) ) ) ) ( test ( instance-existp ?gen73 ) ) => ( bind $?gen78 ( create$ rule4-overruled $?gen76 $?gen77 ) ) ( message-modify-instance ?gen73 ( positive-overruled $?gen78 ) ) )
( defrule rule4-support-gen385 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen72 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ) ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen75 & : ( not ( subseq-pos ( create$ rule4 ?gen72 $$$ $?gen75 ) ) ) ) ) ( test ( eq ( class ?gen73 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen73 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative-support $?gen78 & : ( eq $?gen78 ( create$ rule4 ?gen72 $?gen75 ) ) ) ) ) ( test ( instance-existp ?gen73 ) ) => ( bind $?gen78 ( create$ rule4 ?gen72 $?gen75 ) ) ( message-modify-instance ?gen73 ( negative-support $?gen78 ) ) )
( defrule rule3-defeated-dot-gen387 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( negative-defeated $?gen61 & : ( subseq-pos ( create$ rule3-defeated rule2 rule1 $$$ $?gen61 ) ) ) ) ( test ( eq ( class ?gen58 ) is_speeding_on_town_road_lv2 ) ) ( not ( and ( object ( name ?gen65 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen64 & : ( >= ?gen64 1 ) ) ) ( object ( name ?gen67 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen66 & : ( >= ?gen66 1 ) ) ) ( test ( > ?Speed 80 ) ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( negative-defeated $?gen60 & : ( eq $?gen60 ( delete-member$ $?gen61 ( create$ rule3-defeated rule2 rule1 ) ) ) ) ) ) ( test ( instance-existp ?gen58 ) ) => ( bind $?gen60 ( delete-member$ $?gen61 ( create$ rule3-defeated rule2 rule1 ) ) ) ( message-modify-instance ?gen58 ( negative-defeated $?gen60 ) ) )
( defrule rule3-defeated-gen389 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen65 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen64 & : ( >= ?gen64 1 ) ) ) ( object ( name ?gen67 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen66 & : ( >= ?gen66 1 ) ) ) ( test ( > ?Speed 80 ) ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( negative-defeated $?gen61 & : ( not ( subseq-pos ( create$ rule3-defeated rule2 rule1 $$$ $?gen61 ) ) ) ) ) ( test ( eq ( class ?gen58 ) is_speeding_on_town_road_lv2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( negative-defeated $?gen60 & : ( eq $?gen60 ( create$ rule3-defeated rule2 rule1 $?gen61 ) ) ) ) ) ( test ( instance-existp ?gen58 ) ) => ( bind $?gen60 ( create$ rule3-defeated rule2 rule1 $?gen61 ) ) ( message-modify-instance ?gen58 ( negative-defeated $?gen60 ) ) )
( defrule rule3-defeasibly-dot-gen391 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule3 $? ) ) ( test ( eq ( class ?gen58 ) is_speeding_on_town_road_lv2 ) ) ( not ( and ( object ( name ?gen65 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen64 & : ( >= ?gen64 1 ) ) ) ( object ( name ?gen67 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen66 & : ( >= ?gen66 1 ) ) ) ( test ( > ?Speed 80 ) ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( negative ~ 2 ) ( positive-overruled $?gen60 & : ( not ( member$ rule3 $?gen60 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen58 ) ) => ( message-modify-instance ?gen58 ( positive 0 ) ) )
( defrule rule3-defeasibly-gen393 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen65 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen64 & : ( >= ?gen64 1 ) ) ) ( object ( name ?gen67 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen66 & : ( >= ?gen66 1 ) ) ) ( test ( > ?Speed 80 ) ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen60 & : ( not ( member$ rule3 $?gen60 ) ) ) ) ( test ( eq ( class ?gen58 ) is_speeding_on_town_road_lv2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( positive 1 ) ( positive-derivator rule3 ?gen65 ?gen67 ?gen69 ?gen71 ) ) ) ( test ( instance-existp ?gen58 ) ) => ( message-modify-instance ?gen58 ( positive 1 ) ( positive-derivator rule3 ?gen65 ?gen67 ?gen69 ?gen71 ) ) )
( defrule rule3-overruled-dot-gen395 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( negative-support $?gen61 ) ( negative-overruled $?gen62 & : ( subseq-pos ( create$ rule3-overruled $?gen61 $$$ $?gen62 ) ) ) ) ( test ( eq ( class ?gen58 ) is_speeding_on_town_road_lv2 ) ) ( not ( and ( object ( name ?gen65 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen64 & : ( >= ?gen64 1 ) ) ) ( object ( name ?gen67 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen66 & : ( >= ?gen66 1 ) ) ) ( test ( > ?Speed 80 ) ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( positive-defeated $?gen60 & : ( not ( member$ rule3 $?gen60 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen61 (create$) ) ) ) ( not ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( negative-overruled $?gen63 & : ( eq $?gen63 ( delete-member$ $?gen62 ( create$ rule3-overruled $?gen61 ) ) ) ) ) ) ( test ( instance-existp ?gen58 ) ) => ( bind $?gen63 ( delete-member$ $?gen62 ( create$ rule3-overruled $?gen61 ) ) ) ( message-modify-instance ?gen58 ( negative-overruled $?gen63 ) ) )
( defrule rule3-overruled-gen397 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen65 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen64 & : ( >= ?gen64 1 ) ) ) ( object ( name ?gen67 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen66 & : ( >= ?gen66 1 ) ) ) ( test ( > ?Speed 80 ) ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( negative-support $?gen61 ) ( negative-overruled $?gen62 & : ( not ( subseq-pos ( create$ rule3-overruled $?gen61 $$$ $?gen62 ) ) ) ) ( positive-defeated $?gen60 & : ( not ( member$ rule3 $?gen60 ) ) ) ) ( test ( eq ( class ?gen58 ) is_speeding_on_town_road_lv2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen61 (create$) ) ) ) ( not ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( negative-overruled $?gen63 & : ( eq $?gen63 ( create$ rule3-overruled $?gen61 $?gen62 ) ) ) ) ) ( test ( instance-existp ?gen58 ) ) => ( bind $?gen63 ( create$ rule3-overruled $?gen61 $?gen62 ) ) ( message-modify-instance ?gen58 ( negative-overruled $?gen63 ) ) )
( defrule rule3-support-gen399 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen53 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ) ( object ( name ?gen54 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ) ( test ( > ?Speed 80 ) ) ( object ( name ?gen56 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ) ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ) ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ( positive-support $?gen60 & : ( not ( subseq-pos ( create$ rule3 ?gen53 ?gen54 ?gen56 ?gen57 $$$ $?gen60 ) ) ) ) ) ( test ( eq ( class ?gen58 ) is_speeding_on_town_road_lv2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen58 ) ( is-a is_speeding_on_town_road_lv2 ) ( positive-support $?gen63 & : ( eq $?gen63 ( create$ rule3 ?gen53 ?gen54 ?gen56 ?gen57 $?gen60 ) ) ) ) ) ( test ( instance-existp ?gen58 ) ) => ( bind $?gen63 ( create$ rule3 ?gen53 ?gen54 ?gen56 ?gen57 $?gen60 ) ) ( message-modify-instance ?gen58 ( positive-support $?gen63 ) ) )
( defrule rule2-defeasibly-dot-gen401 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule2 $? ) ) ( test ( eq ( class ?gen39 ) is_speeding_on_town_road_lv1 ) ) ( not ( and ( object ( name ?gen46 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen45 & : ( >= ?gen45 1 ) ) ) ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen47 & : ( >= ?gen47 1 ) ) ) ( test ( <= ?Speed 50 ) ) ( object ( name ?gen50 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen49 & : ( >= ?gen49 1 ) ) ) ( object ( name ?gen52 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen51 & : ( >= ?gen51 1 ) ) ) ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive ~ 2 ) ( negative-overruled $?gen41 & : ( not ( member$ rule2 $?gen41 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative 0 ) ) ) ( test ( instance-existp ?gen39 ) ) => ( message-modify-instance ?gen39 ( negative 0 ) ) )
( defrule rule2-defeasibly-gen403 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen46 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen45 & : ( >= ?gen45 1 ) ) ) ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen47 & : ( >= ?gen47 1 ) ) ) ( test ( <= ?Speed 50 ) ) ( object ( name ?gen50 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen49 & : ( >= ?gen49 1 ) ) ) ( object ( name ?gen52 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen51 & : ( >= ?gen51 1 ) ) ) ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen41 & : ( not ( member$ rule2 $?gen41 ) ) ) ) ( test ( eq ( class ?gen39 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative 1 ) ( negative-derivator rule2 ?gen46 ?gen48 ?gen50 ?gen52 ) ) ) ( test ( instance-existp ?gen39 ) ) => ( message-modify-instance ?gen39 ( negative 1 ) ( negative-derivator rule2 ?gen46 ?gen48 ?gen50 ?gen52 ) ) )
( defrule rule2-overruled-dot-gen405 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen42 ) ( positive-overruled $?gen43 & : ( subseq-pos ( create$ rule2-overruled $?gen42 $$$ $?gen43 ) ) ) ) ( test ( eq ( class ?gen39 ) is_speeding_on_town_road_lv1 ) ) ( not ( and ( object ( name ?gen46 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen45 & : ( >= ?gen45 1 ) ) ) ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen47 & : ( >= ?gen47 1 ) ) ) ( test ( <= ?Speed 50 ) ) ( object ( name ?gen50 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen49 & : ( >= ?gen49 1 ) ) ) ( object ( name ?gen52 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen51 & : ( >= ?gen51 1 ) ) ) ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative-defeated $?gen41 & : ( not ( member$ rule2 $?gen41 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen42 (create$) ) ) ) ( not ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-overruled $?gen44 & : ( eq $?gen44 ( delete-member$ $?gen43 ( create$ rule2-overruled $?gen42 ) ) ) ) ) ) ( test ( instance-existp ?gen39 ) ) => ( bind $?gen44 ( delete-member$ $?gen43 ( create$ rule2-overruled $?gen42 ) ) ) ( message-modify-instance ?gen39 ( positive-overruled $?gen44 ) ) )
( defrule rule2-overruled-gen407 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen46 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen45 & : ( >= ?gen45 1 ) ) ) ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen47 & : ( >= ?gen47 1 ) ) ) ( test ( <= ?Speed 50 ) ) ( object ( name ?gen50 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen49 & : ( >= ?gen49 1 ) ) ) ( object ( name ?gen52 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen51 & : ( >= ?gen51 1 ) ) ) ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen42 ) ( positive-overruled $?gen43 & : ( not ( subseq-pos ( create$ rule2-overruled $?gen42 $$$ $?gen43 ) ) ) ) ( negative-defeated $?gen41 & : ( not ( member$ rule2 $?gen41 ) ) ) ) ( test ( eq ( class ?gen39 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen42 (create$) ) ) ) ( not ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-overruled $?gen44 & : ( eq $?gen44 ( create$ rule2-overruled $?gen42 $?gen43 ) ) ) ) ) ( test ( instance-existp ?gen39 ) ) => ( bind $?gen44 ( create$ rule2-overruled $?gen42 $?gen43 ) ) ( message-modify-instance ?gen39 ( positive-overruled $?gen44 ) ) )
( defrule rule2-support-gen409 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen34 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ) ( object ( name ?gen35 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ) ( test ( <= ?Speed 50 ) ) ( object ( name ?gen37 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ) ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ) ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen41 & : ( not ( subseq-pos ( create$ rule2 ?gen34 ?gen35 ?gen37 ?gen38 $$$ $?gen41 ) ) ) ) ) ( test ( eq ( class ?gen39 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen39 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative-support $?gen44 & : ( eq $?gen44 ( create$ rule2 ?gen34 ?gen35 ?gen37 ?gen38 $?gen41 ) ) ) ) ) ( test ( instance-existp ?gen39 ) ) => ( bind $?gen44 ( create$ rule2 ?gen34 ?gen35 ?gen37 ?gen38 $?gen41 ) ) ( message-modify-instance ?gen39 ( negative-support $?gen44 ) ) )
( defrule rule1-defeasibly-dot-gen411 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule1 $? ) ) ( test ( eq ( class ?gen20 ) is_speeding_on_town_road_lv1 ) ) ( not ( and ( object ( name ?gen27 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen26 & : ( >= ?gen26 1 ) ) ) ( object ( name ?gen29 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen28 & : ( >= ?gen28 1 ) ) ) ( test ( > ?Speed 70 ) ) ( object ( name ?gen31 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen30 & : ( >= ?gen30 1 ) ) ) ( object ( name ?gen33 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative ~ 2 ) ( positive-overruled $?gen22 & : ( not ( member$ rule1 $?gen22 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen20 ) ) => ( message-modify-instance ?gen20 ( positive 0 ) ) )
( defrule rule1-defeasibly-gen413 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen27 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen26 & : ( >= ?gen26 1 ) ) ) ( object ( name ?gen29 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen28 & : ( >= ?gen28 1 ) ) ) ( test ( > ?Speed 70 ) ) ( object ( name ?gen31 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen30 & : ( >= ?gen30 1 ) ) ) ( object ( name ?gen33 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen22 & : ( not ( member$ rule1 $?gen22 ) ) ) ) ( test ( eq ( class ?gen20 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive 1 ) ( positive-derivator rule1 ?gen27 ?gen29 ?gen31 ?gen33 ) ) ) ( test ( instance-existp ?gen20 ) ) => ( message-modify-instance ?gen20 ( positive 1 ) ( positive-derivator rule1 ?gen27 ?gen29 ?gen31 ?gen33 ) ) )
( defrule rule1-overruled-dot-gen415 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen23 ) ( negative-overruled $?gen24 & : ( subseq-pos ( create$ rule1-overruled $?gen23 $$$ $?gen24 ) ) ) ) ( test ( eq ( class ?gen20 ) is_speeding_on_town_road_lv1 ) ) ( not ( and ( object ( name ?gen27 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen26 & : ( >= ?gen26 1 ) ) ) ( object ( name ?gen29 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen28 & : ( >= ?gen28 1 ) ) ) ( test ( > ?Speed 70 ) ) ( object ( name ?gen31 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen30 & : ( >= ?gen30 1 ) ) ) ( object ( name ?gen33 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-defeated $?gen22 & : ( not ( member$ rule1 $?gen22 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen23 (create$) ) ) ) ( not ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative-overruled $?gen25 & : ( eq $?gen25 ( delete-member$ $?gen24 ( create$ rule1-overruled $?gen23 ) ) ) ) ) ) ( test ( instance-existp ?gen20 ) ) => ( bind $?gen25 ( delete-member$ $?gen24 ( create$ rule1-overruled $?gen23 ) ) ) ( message-modify-instance ?gen20 ( negative-overruled $?gen25 ) ) )
( defrule rule1-overruled-gen417 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen27 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ( positive ?gen26 & : ( >= ?gen26 1 ) ) ) ( object ( name ?gen29 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ( positive ?gen28 & : ( >= ?gen28 1 ) ) ) ( test ( > ?Speed 70 ) ) ( object ( name ?gen31 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ( positive ?gen30 & : ( >= ?gen30 1 ) ) ) ( object ( name ?gen33 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen23 ) ( negative-overruled $?gen24 & : ( not ( subseq-pos ( create$ rule1-overruled $?gen23 $$$ $?gen24 ) ) ) ) ( positive-defeated $?gen22 & : ( not ( member$ rule1 $?gen22 ) ) ) ) ( test ( eq ( class ?gen20 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen23 (create$) ) ) ) ( not ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( negative-overruled $?gen25 & : ( eq $?gen25 ( create$ rule1-overruled $?gen23 $?gen24 ) ) ) ) ) ( test ( instance-existp ?gen20 ) ) => ( bind $?gen25 ( create$ rule1-overruled $?gen23 $?gen24 ) ) ( message-modify-instance ?gen20 ( negative-overruled $?gen25 ) ) )
( defrule rule1-support-gen419 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen15 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ) ( object ( name ?gen16 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ) ( test ( > ?Speed 70 ) ) ( object ( name ?gen18 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ) ( object ( name ?gen19 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ) ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen22 & : ( not ( subseq-pos ( create$ rule1 ?gen15 ?gen16 ?gen18 ?gen19 $$$ $?gen22 ) ) ) ) ) ( test ( eq ( class ?gen20 ) is_speeding_on_town_road_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Speed (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen20 ) ( is-a is_speeding_on_town_road_lv1 ) ( positive-support $?gen25 & : ( eq $?gen25 ( create$ rule1 ?gen15 ?gen16 ?gen18 ?gen19 $?gen22 ) ) ) ) ) ( test ( instance-existp ?gen20 ) ) => ( bind $?gen25 ( create$ rule1 ?gen15 ?gen16 ?gen18 ?gen19 $?gen22 ) ) ( message-modify-instance ?gen20 ( positive-support $?gen25 ) ) )
( defrule pen6-deductive-gen231 ( declare ( salience ( calc-salience max_imprisonment ) ) ) ( run-deductive-rules ) ( object ( name ?gen182 ) ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment ) ( value 30 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment 30 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment 30 ) ) ) ( make-instance ?oid of max_imprisonment ( value 30 ) ) )
( defrule pen3-deductive-gen228 ( declare ( salience ( calc-salience to_pay_max ) ) ) ( run-deductive-rules ) ( object ( name ?gen155 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_max ) ( value 20000 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_max 20000 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_max 20000 ) ) ) ( make-instance ?oid of to_pay_max ( value 20000 ) ) )
( defrule pen2-deductive-gen227 ( declare ( salience ( calc-salience to_pay_min ) ) ) ( run-deductive-rules ) ( object ( name ?gen146 ) ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_min ) ( value 10000 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_min 10000 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_min 10000 ) ) ) ( make-instance ?oid of to_pay_min ( value 10000 ) ) )
( defrule pen1-deductive-gen226 ( declare ( salience ( calc-salience to_pay ) ) ) ( run-deductive-rules ) ( object ( name ?gen137 ) ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay ) ( value 10000 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay 10000 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay 10000 ) ) ) ( make-instance ?oid of to_pay ( value 10000 ) ) )
( defrule rule8-deductive-gen225 ( declare ( salience ( calc-salience is_speeding_on_town_road_lv3_with_accident ) ) ) ( run-deductive-rules ) ( object ( name ?gen118 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ) ( object ( name ?gen119 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen121 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ) ( object ( name ?gen122 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "yes" ) ) ( not ( object ( is-a is_speeding_on_town_road_lv3_with_accident ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv3_with_accident ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv3_with_accident ?Defendant ) ) ) ( make-instance ?oid of is_speeding_on_town_road_lv3_with_accident ( defendant ?Defendant ) ) )
( defrule rule5-deductive-gen222 ( declare ( salience ( calc-salience is_speeding_on_town_road_lv3 ) ) ) ( run-deductive-rules ) ( object ( name ?gen81 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ) ( object ( name ?gen82 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ) ( test ( > ?Speed 100 ) ) ( object ( name ?gen84 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ) ( object ( name ?gen85 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ) ( not ( object ( is-a is_speeding_on_town_road_lv3 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv3 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv3 ?Defendant ) ) ) ( make-instance ?oid of is_speeding_on_town_road_lv3 ( defendant ?Defendant ) ) )
( defrule rule3-deductive-gen220 ( declare ( salience ( calc-salience is_speeding_on_town_road_lv2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen53 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ) ( object ( name ?gen54 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ) ( test ( > ?Speed 80 ) ) ( object ( name ?gen56 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ) ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ) ( not ( object ( is-a is_speeding_on_town_road_lv2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv2 ?Defendant ) ) ) ( make-instance ?oid of is_speeding_on_town_road_lv2 ( defendant ?Defendant ) ) )
( defrule rule1-deductive-gen218 ( declare ( salience ( calc-salience is_speeding_on_town_road_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen15 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:speed ?Speed ) ) ( object ( name ?gen16 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:allowed_speed 50 ) ) ( test ( > ?Speed 70 ) ) ( object ( name ?gen18 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:driving_on "town_road" ) ) ( object ( name ?gen19 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:caused_accident "no" ) ) ( not ( object ( is-a is_speeding_on_town_road_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat is_speeding_on_town_road_lv1 ?Defendant ) ) ) ( make-instance ?oid of is_speeding_on_town_road_lv1 ( defendant ?Defendant ) ) )
