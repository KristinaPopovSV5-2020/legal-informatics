( defrule pen18-defeasibly-dot-gen205 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen18] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( value 30 ) ( positive 1 ) ( positive-derivator pen18 $? ) ) ( test ( eq ( class ?gen178 ) to_pay_min3 ) ) ( not ( and ( object ( name ?gen185 ) ( is-a fine ) ( defendant ?Defendant ) ( positive ?gen184 & : ( >= ?gen184 1 ) ) ) ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( negative ~ 2 ) ( positive-overruled $?gen180 & : ( not ( member$ pen18 $?gen180 ) ) ) ) ) )  ( not ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen178 ) ) => ( message-modify-instance ?gen178 ( positive 0 ) ) )
( defrule pen18-defeasibly-gen207 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen18] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen185 ) ( is-a fine ) ( defendant ?Defendant ) ( positive ?gen184 & : ( >= ?gen184 1 ) ) ) ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( value 30 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen180 & : ( not ( member$ pen18 $?gen180 ) ) ) ) ( test ( eq ( class ?gen178 ) to_pay_min3 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( positive 1 ) ( positive-derivator pen18 ?gen185 ) ) ) ( test ( instance-existp ?gen178 ) ) => ( message-modify-instance ?gen178 ( positive 1 ) ( positive-derivator pen18 ?gen185 ) ) )
( defrule pen18-overruled-dot-gen209 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen18] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( value 30 ) ( negative-support $?gen181 ) ( negative-overruled $?gen182 & : ( subseq-pos ( create$ pen18-overruled $?gen181 $$$ $?gen182 ) ) ) ) ( test ( eq ( class ?gen178 ) to_pay_min3 ) ) ( not ( and ( object ( name ?gen185 ) ( is-a fine ) ( defendant ?Defendant ) ( positive ?gen184 & : ( >= ?gen184 1 ) ) ) ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( positive-defeated $?gen180 & : ( not ( member$ pen18 $?gen180 ) ) ) ) ) ) ( test ( neq $?gen181 (create$) ) ) ( not ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( negative-overruled $?gen183 & : ( eq $?gen183 ( delete-member$ $?gen182 ( create$ pen18-overruled $?gen181 ) ) ) ) ) ) ( test ( instance-existp ?gen178 ) ) => ( bind $?gen183 ( delete-member$ $?gen182 ( create$ pen18-overruled $?gen181 ) ) ) ( message-modify-instance ?gen178 ( negative-overruled $?gen183 ) ) )
( defrule pen18-overruled-gen211 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen18] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen185 ) ( is-a fine ) ( defendant ?Defendant ) ( positive ?gen184 & : ( >= ?gen184 1 ) ) ) ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( value 30 ) ( negative-support $?gen181 ) ( negative-overruled $?gen182 & : ( not ( subseq-pos ( create$ pen18-overruled $?gen181 $$$ $?gen182 ) ) ) ) ( positive-defeated $?gen180 & : ( not ( member$ pen18 $?gen180 ) ) ) ) ( test ( eq ( class ?gen178 ) to_pay_min3 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen181 (create$) ) ) ) ( not ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( negative-overruled $?gen183 & : ( eq $?gen183 ( create$ pen18-overruled $?gen181 $?gen182 ) ) ) ) ) ( test ( instance-existp ?gen178 ) ) => ( bind $?gen183 ( create$ pen18-overruled $?gen181 $?gen182 ) ) ( message-modify-instance ?gen178 ( negative-overruled $?gen183 ) ) )
( defrule pen18-support-gen213 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen18] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen177 ) ( is-a fine ) ( defendant ?Defendant ) ) ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( value 30 ) ( positive-support $?gen180 & : ( not ( subseq-pos ( create$ pen18 ?gen177 $$$ $?gen180 ) ) ) ) ) ( test ( eq ( class ?gen178 ) to_pay_min3 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen178 ) ( is-a to_pay_min3 ) ( positive-support $?gen183 & : ( eq $?gen183 ( create$ pen18 ?gen177 $?gen180 ) ) ) ) ) ( test ( instance-existp ?gen178 ) ) => ( bind $?gen183 ( create$ pen18 ?gen177 $?gen180 ) ) ( message-modify-instance ?gen178 ( positive-support $?gen183 ) ) )
( defrule pen17-defeasibly-dot-gen215 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen17] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( value 500 ) ( positive 1 ) ( positive-derivator pen17 $? ) ) ( test ( eq ( class ?gen169 ) to_pay_max3 ) ) ( not ( and ( object ( name ?gen176 ) ( is-a fine ) ( defendant ?Defendant ) ( positive ?gen175 & : ( >= ?gen175 1 ) ) ) ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( negative ~ 2 ) ( positive-overruled $?gen171 & : ( not ( member$ pen17 $?gen171 ) ) ) ) ) )  ( not ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen169 ) ) => ( message-modify-instance ?gen169 ( positive 0 ) ) )
( defrule pen17-defeasibly-gen217 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen17] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen176 ) ( is-a fine ) ( defendant ?Defendant ) ( positive ?gen175 & : ( >= ?gen175 1 ) ) ) ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( value 500 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen171 & : ( not ( member$ pen17 $?gen171 ) ) ) ) ( test ( eq ( class ?gen169 ) to_pay_max3 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( positive 1 ) ( positive-derivator pen17 ?gen176 ) ) ) ( test ( instance-existp ?gen169 ) ) => ( message-modify-instance ?gen169 ( positive 1 ) ( positive-derivator pen17 ?gen176 ) ) )
( defrule pen17-overruled-dot-gen219 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen17] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( value 500 ) ( negative-support $?gen172 ) ( negative-overruled $?gen173 & : ( subseq-pos ( create$ pen17-overruled $?gen172 $$$ $?gen173 ) ) ) ) ( test ( eq ( class ?gen169 ) to_pay_max3 ) ) ( not ( and ( object ( name ?gen176 ) ( is-a fine ) ( defendant ?Defendant ) ( positive ?gen175 & : ( >= ?gen175 1 ) ) ) ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( positive-defeated $?gen171 & : ( not ( member$ pen17 $?gen171 ) ) ) ) ) ) ( test ( neq $?gen172 (create$) ) ) ( not ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( negative-overruled $?gen174 & : ( eq $?gen174 ( delete-member$ $?gen173 ( create$ pen17-overruled $?gen172 ) ) ) ) ) ) ( test ( instance-existp ?gen169 ) ) => ( bind $?gen174 ( delete-member$ $?gen173 ( create$ pen17-overruled $?gen172 ) ) ) ( message-modify-instance ?gen169 ( negative-overruled $?gen174 ) ) )
( defrule pen17-overruled-gen221 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen17] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen176 ) ( is-a fine ) ( defendant ?Defendant ) ( positive ?gen175 & : ( >= ?gen175 1 ) ) ) ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( value 500 ) ( negative-support $?gen172 ) ( negative-overruled $?gen173 & : ( not ( subseq-pos ( create$ pen17-overruled $?gen172 $$$ $?gen173 ) ) ) ) ( positive-defeated $?gen171 & : ( not ( member$ pen17 $?gen171 ) ) ) ) ( test ( eq ( class ?gen169 ) to_pay_max3 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen172 (create$) ) ) ) ( not ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( negative-overruled $?gen174 & : ( eq $?gen174 ( create$ pen17-overruled $?gen172 $?gen173 ) ) ) ) ) ( test ( instance-existp ?gen169 ) ) => ( bind $?gen174 ( create$ pen17-overruled $?gen172 $?gen173 ) ) ( message-modify-instance ?gen169 ( negative-overruled $?gen174 ) ) )
( defrule pen17-support-gen223 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen17] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen168 ) ( is-a fine ) ( defendant ?Defendant ) ) ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( value 500 ) ( positive-support $?gen171 & : ( not ( subseq-pos ( create$ pen17 ?gen168 $$$ $?gen171 ) ) ) ) ) ( test ( eq ( class ?gen169 ) to_pay_max3 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen169 ) ( is-a to_pay_max3 ) ( positive-support $?gen174 & : ( eq $?gen174 ( create$ pen17 ?gen168 $?gen171 ) ) ) ) ) ( test ( instance-existp ?gen169 ) ) => ( bind $?gen174 ( create$ pen17 ?gen168 $?gen171 ) ) ( message-modify-instance ?gen169 ( positive-support $?gen174 ) ) )
( defrule pen16-defeasibly-dot-gen225 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen16] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen160 ) ( is-a jail_3_year ) ( value 3 ) ( positive 1 ) ( positive-derivator pen16 $? ) ) ( test ( eq ( class ?gen160 ) jail_3_year ) ) ( not ( and ( object ( name ?gen167 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ( positive ?gen166 & : ( >= ?gen166 1 ) ) ) ( object ( name ?gen160 ) ( is-a jail_3_year ) ( negative ~ 2 ) ( positive-overruled $?gen162 & : ( not ( member$ pen16 $?gen162 ) ) ) ) ) )  ( not ( object ( name ?gen160 ) ( is-a jail_3_year ) ( positive 0 ) ) ) ( test ( instance-existp ?gen160 ) ) => ( message-modify-instance ?gen160 ( positive 0 ) ) )
( defrule pen16-defeasibly-gen227 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen16] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen167 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ( positive ?gen166 & : ( >= ?gen166 1 ) ) ) ( object ( name ?gen160 ) ( is-a jail_3_year ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen162 & : ( not ( member$ pen16 $?gen162 ) ) ) ) ( test ( eq ( class ?gen160 ) jail_3_year ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen160 ) ( is-a jail_3_year ) ( positive 1 ) ( positive-derivator pen16 ?gen167 ) ) ) ( test ( instance-existp ?gen160 ) ) => ( message-modify-instance ?gen160 ( positive 1 ) ( positive-derivator pen16 ?gen167 ) ) )
( defrule pen16-overruled-dot-gen229 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen16] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen160 ) ( is-a jail_3_year ) ( value 3 ) ( negative-support $?gen163 ) ( negative-overruled $?gen164 & : ( subseq-pos ( create$ pen16-overruled $?gen163 $$$ $?gen164 ) ) ) ) ( test ( eq ( class ?gen160 ) jail_3_year ) ) ( not ( and ( object ( name ?gen167 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ( positive ?gen166 & : ( >= ?gen166 1 ) ) ) ( object ( name ?gen160 ) ( is-a jail_3_year ) ( positive-defeated $?gen162 & : ( not ( member$ pen16 $?gen162 ) ) ) ) ) ) ( test ( neq $?gen163 (create$) ) ) ( not ( object ( name ?gen160 ) ( is-a jail_3_year ) ( negative-overruled $?gen165 & : ( eq $?gen165 ( delete-member$ $?gen164 ( create$ pen16-overruled $?gen163 ) ) ) ) ) ) ( test ( instance-existp ?gen160 ) ) => ( bind $?gen165 ( delete-member$ $?gen164 ( create$ pen16-overruled $?gen163 ) ) ) ( message-modify-instance ?gen160 ( negative-overruled $?gen165 ) ) )
( defrule pen16-overruled-gen231 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen16] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen167 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ( positive ?gen166 & : ( >= ?gen166 1 ) ) ) ( object ( name ?gen160 ) ( is-a jail_3_year ) ( value 3 ) ( negative-support $?gen163 ) ( negative-overruled $?gen164 & : ( not ( subseq-pos ( create$ pen16-overruled $?gen163 $$$ $?gen164 ) ) ) ) ( positive-defeated $?gen162 & : ( not ( member$ pen16 $?gen162 ) ) ) ) ( test ( eq ( class ?gen160 ) jail_3_year ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen163 (create$) ) ) ) ( not ( object ( name ?gen160 ) ( is-a jail_3_year ) ( negative-overruled $?gen165 & : ( eq $?gen165 ( create$ pen16-overruled $?gen163 $?gen164 ) ) ) ) ) ( test ( instance-existp ?gen160 ) ) => ( bind $?gen165 ( create$ pen16-overruled $?gen163 $?gen164 ) ) ( message-modify-instance ?gen160 ( negative-overruled $?gen165 ) ) )
( defrule pen16-support-gen233 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen16] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen159 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ) ( object ( name ?gen160 ) ( is-a jail_3_year ) ( value 3 ) ( positive-support $?gen162 & : ( not ( subseq-pos ( create$ pen16 ?gen159 $$$ $?gen162 ) ) ) ) ) ( test ( eq ( class ?gen160 ) jail_3_year ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen160 ) ( is-a jail_3_year ) ( positive-support $?gen165 & : ( eq $?gen165 ( create$ pen16 ?gen159 $?gen162 ) ) ) ) ) ( test ( instance-existp ?gen160 ) ) => ( bind $?gen165 ( create$ pen16 ?gen159 $?gen162 ) ) ( message-modify-instance ?gen160 ( positive-support $?gen165 ) ) )
( defrule pen15-defeasibly-dot-gen235 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( value 30 ) ( positive 1 ) ( positive-derivator pen15 $? ) ) ( test ( eq ( class ?gen151 ) to_pay_min2 ) ) ( not ( and ( object ( name ?gen158 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen157 & : ( >= ?gen157 1 ) ) ) ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( negative ~ 2 ) ( positive-overruled $?gen153 & : ( not ( member$ pen15 $?gen153 ) ) ) ) ) )  ( not ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen151 ) ) => ( message-modify-instance ?gen151 ( positive 0 ) ) )
( defrule pen15-defeasibly-gen237 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen158 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen157 & : ( >= ?gen157 1 ) ) ) ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( value 30 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen153 & : ( not ( member$ pen15 $?gen153 ) ) ) ) ( test ( eq ( class ?gen151 ) to_pay_min2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( positive 1 ) ( positive-derivator pen15 ?gen158 ) ) ) ( test ( instance-existp ?gen151 ) ) => ( message-modify-instance ?gen151 ( positive 1 ) ( positive-derivator pen15 ?gen158 ) ) )
( defrule pen15-overruled-dot-gen239 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( value 30 ) ( negative-support $?gen154 ) ( negative-overruled $?gen155 & : ( subseq-pos ( create$ pen15-overruled $?gen154 $$$ $?gen155 ) ) ) ) ( test ( eq ( class ?gen151 ) to_pay_min2 ) ) ( not ( and ( object ( name ?gen158 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen157 & : ( >= ?gen157 1 ) ) ) ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( positive-defeated $?gen153 & : ( not ( member$ pen15 $?gen153 ) ) ) ) ) ) ( test ( neq $?gen154 (create$) ) ) ( not ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( negative-overruled $?gen156 & : ( eq $?gen156 ( delete-member$ $?gen155 ( create$ pen15-overruled $?gen154 ) ) ) ) ) ) ( test ( instance-existp ?gen151 ) ) => ( bind $?gen156 ( delete-member$ $?gen155 ( create$ pen15-overruled $?gen154 ) ) ) ( message-modify-instance ?gen151 ( negative-overruled $?gen156 ) ) )
( defrule pen15-overruled-gen241 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen158 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen157 & : ( >= ?gen157 1 ) ) ) ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( value 30 ) ( negative-support $?gen154 ) ( negative-overruled $?gen155 & : ( not ( subseq-pos ( create$ pen15-overruled $?gen154 $$$ $?gen155 ) ) ) ) ( positive-defeated $?gen153 & : ( not ( member$ pen15 $?gen153 ) ) ) ) ( test ( eq ( class ?gen151 ) to_pay_min2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen154 (create$) ) ) ) ( not ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( negative-overruled $?gen156 & : ( eq $?gen156 ( create$ pen15-overruled $?gen154 $?gen155 ) ) ) ) ) ( test ( instance-existp ?gen151 ) ) => ( bind $?gen156 ( create$ pen15-overruled $?gen154 $?gen155 ) ) ( message-modify-instance ?gen151 ( negative-overruled $?gen156 ) ) )
( defrule pen15-support-gen243 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen150 ) ( is-a money ) ( defendant ?Defendant ) ) ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( value 30 ) ( positive-support $?gen153 & : ( not ( subseq-pos ( create$ pen15 ?gen150 $$$ $?gen153 ) ) ) ) ) ( test ( eq ( class ?gen151 ) to_pay_min2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen151 ) ( is-a to_pay_min2 ) ( positive-support $?gen156 & : ( eq $?gen156 ( create$ pen15 ?gen150 $?gen153 ) ) ) ) ) ( test ( instance-existp ?gen151 ) ) => ( bind $?gen156 ( create$ pen15 ?gen150 $?gen153 ) ) ( message-modify-instance ?gen151 ( positive-support $?gen156 ) ) )
( defrule pen14-defeasibly-dot-gen245 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( value 500 ) ( positive 1 ) ( positive-derivator pen14 $? ) ) ( test ( eq ( class ?gen142 ) to_pay_max2 ) ) ( not ( and ( object ( name ?gen149 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen148 & : ( >= ?gen148 1 ) ) ) ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( negative ~ 2 ) ( positive-overruled $?gen144 & : ( not ( member$ pen14 $?gen144 ) ) ) ) ) )  ( not ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen142 ) ) => ( message-modify-instance ?gen142 ( positive 0 ) ) )
( defrule pen14-defeasibly-gen247 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen149 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen148 & : ( >= ?gen148 1 ) ) ) ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( value 500 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen144 & : ( not ( member$ pen14 $?gen144 ) ) ) ) ( test ( eq ( class ?gen142 ) to_pay_max2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( positive 1 ) ( positive-derivator pen14 ?gen149 ) ) ) ( test ( instance-existp ?gen142 ) ) => ( message-modify-instance ?gen142 ( positive 1 ) ( positive-derivator pen14 ?gen149 ) ) )
( defrule pen14-overruled-dot-gen249 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( value 500 ) ( negative-support $?gen145 ) ( negative-overruled $?gen146 & : ( subseq-pos ( create$ pen14-overruled $?gen145 $$$ $?gen146 ) ) ) ) ( test ( eq ( class ?gen142 ) to_pay_max2 ) ) ( not ( and ( object ( name ?gen149 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen148 & : ( >= ?gen148 1 ) ) ) ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( positive-defeated $?gen144 & : ( not ( member$ pen14 $?gen144 ) ) ) ) ) ) ( test ( neq $?gen145 (create$) ) ) ( not ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( negative-overruled $?gen147 & : ( eq $?gen147 ( delete-member$ $?gen146 ( create$ pen14-overruled $?gen145 ) ) ) ) ) ) ( test ( instance-existp ?gen142 ) ) => ( bind $?gen147 ( delete-member$ $?gen146 ( create$ pen14-overruled $?gen145 ) ) ) ( message-modify-instance ?gen142 ( negative-overruled $?gen147 ) ) )
( defrule pen14-overruled-gen251 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen149 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen148 & : ( >= ?gen148 1 ) ) ) ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( value 500 ) ( negative-support $?gen145 ) ( negative-overruled $?gen146 & : ( not ( subseq-pos ( create$ pen14-overruled $?gen145 $$$ $?gen146 ) ) ) ) ( positive-defeated $?gen144 & : ( not ( member$ pen14 $?gen144 ) ) ) ) ( test ( eq ( class ?gen142 ) to_pay_max2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen145 (create$) ) ) ) ( not ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( negative-overruled $?gen147 & : ( eq $?gen147 ( create$ pen14-overruled $?gen145 $?gen146 ) ) ) ) ) ( test ( instance-existp ?gen142 ) ) => ( bind $?gen147 ( create$ pen14-overruled $?gen145 $?gen146 ) ) ( message-modify-instance ?gen142 ( negative-overruled $?gen147 ) ) )
( defrule pen14-support-gen253 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen141 ) ( is-a money ) ( defendant ?Defendant ) ) ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( value 500 ) ( positive-support $?gen144 & : ( not ( subseq-pos ( create$ pen14 ?gen141 $$$ $?gen144 ) ) ) ) ) ( test ( eq ( class ?gen142 ) to_pay_max2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen142 ) ( is-a to_pay_max2 ) ( positive-support $?gen147 & : ( eq $?gen147 ( create$ pen14 ?gen141 $?gen144 ) ) ) ) ) ( test ( instance-existp ?gen142 ) ) => ( bind $?gen147 ( create$ pen14 ?gen141 $?gen144 ) ) ( message-modify-instance ?gen142 ( positive-support $?gen147 ) ) )
( defrule pen13-defeasibly-dot-gen255 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen133 ) ( is-a to_pay_min ) ( value 30 ) ( positive 1 ) ( positive-derivator pen13 $? ) ) ( test ( eq ( class ?gen133 ) to_pay_min ) ) ( not ( and ( object ( name ?gen140 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen139 & : ( >= ?gen139 1 ) ) ) ( object ( name ?gen133 ) ( is-a to_pay_min ) ( negative ~ 2 ) ( positive-overruled $?gen135 & : ( not ( member$ pen13 $?gen135 ) ) ) ) ) )  ( not ( object ( name ?gen133 ) ( is-a to_pay_min ) ( positive 0 ) ) ) ( test ( instance-existp ?gen133 ) ) => ( message-modify-instance ?gen133 ( positive 0 ) ) )
( defrule pen13-defeasibly-gen257 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen140 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen139 & : ( >= ?gen139 1 ) ) ) ( object ( name ?gen133 ) ( is-a to_pay_min ) ( value 30 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen135 & : ( not ( member$ pen13 $?gen135 ) ) ) ) ( test ( eq ( class ?gen133 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen133 ) ( is-a to_pay_min ) ( positive 1 ) ( positive-derivator pen13 ?gen140 ) ) ) ( test ( instance-existp ?gen133 ) ) => ( message-modify-instance ?gen133 ( positive 1 ) ( positive-derivator pen13 ?gen140 ) ) )
( defrule pen13-overruled-dot-gen259 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen133 ) ( is-a to_pay_min ) ( value 30 ) ( negative-support $?gen136 ) ( negative-overruled $?gen137 & : ( subseq-pos ( create$ pen13-overruled $?gen136 $$$ $?gen137 ) ) ) ) ( test ( eq ( class ?gen133 ) to_pay_min ) ) ( not ( and ( object ( name ?gen140 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen139 & : ( >= ?gen139 1 ) ) ) ( object ( name ?gen133 ) ( is-a to_pay_min ) ( positive-defeated $?gen135 & : ( not ( member$ pen13 $?gen135 ) ) ) ) ) ) ( test ( neq $?gen136 (create$) ) ) ( not ( object ( name ?gen133 ) ( is-a to_pay_min ) ( negative-overruled $?gen138 & : ( eq $?gen138 ( delete-member$ $?gen137 ( create$ pen13-overruled $?gen136 ) ) ) ) ) ) ( test ( instance-existp ?gen133 ) ) => ( bind $?gen138 ( delete-member$ $?gen137 ( create$ pen13-overruled $?gen136 ) ) ) ( message-modify-instance ?gen133 ( negative-overruled $?gen138 ) ) )
( defrule pen13-overruled-gen261 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen140 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen139 & : ( >= ?gen139 1 ) ) ) ( object ( name ?gen133 ) ( is-a to_pay_min ) ( value 30 ) ( negative-support $?gen136 ) ( negative-overruled $?gen137 & : ( not ( subseq-pos ( create$ pen13-overruled $?gen136 $$$ $?gen137 ) ) ) ) ( positive-defeated $?gen135 & : ( not ( member$ pen13 $?gen135 ) ) ) ) ( test ( eq ( class ?gen133 ) to_pay_min ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen136 (create$) ) ) ) ( not ( object ( name ?gen133 ) ( is-a to_pay_min ) ( negative-overruled $?gen138 & : ( eq $?gen138 ( create$ pen13-overruled $?gen136 $?gen137 ) ) ) ) ) ( test ( instance-existp ?gen133 ) ) => ( bind $?gen138 ( create$ pen13-overruled $?gen136 $?gen137 ) ) ( message-modify-instance ?gen133 ( negative-overruled $?gen138 ) ) )
( defrule pen13-support-gen263 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen132 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ) ( object ( name ?gen133 ) ( is-a to_pay_min ) ( value 30 ) ( positive-support $?gen135 & : ( not ( subseq-pos ( create$ pen13 ?gen132 $$$ $?gen135 ) ) ) ) ) ( test ( eq ( class ?gen133 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen133 ) ( is-a to_pay_min ) ( positive-support $?gen138 & : ( eq $?gen138 ( create$ pen13 ?gen132 $?gen135 ) ) ) ) ) ( test ( instance-existp ?gen133 ) ) => ( bind $?gen138 ( create$ pen13 ?gen132 $?gen135 ) ) ( message-modify-instance ?gen133 ( positive-support $?gen138 ) ) )
( defrule pen12-defeasibly-dot-gen265 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen124 ) ( is-a to_pay_max ) ( value 500 ) ( positive 1 ) ( positive-derivator pen12 $? ) ) ( test ( eq ( class ?gen124 ) to_pay_max ) ) ( not ( and ( object ( name ?gen131 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen130 & : ( >= ?gen130 1 ) ) ) ( object ( name ?gen124 ) ( is-a to_pay_max ) ( negative ~ 2 ) ( positive-overruled $?gen126 & : ( not ( member$ pen12 $?gen126 ) ) ) ) ) )  ( not ( object ( name ?gen124 ) ( is-a to_pay_max ) ( positive 0 ) ) ) ( test ( instance-existp ?gen124 ) ) => ( message-modify-instance ?gen124 ( positive 0 ) ) )
( defrule pen12-defeasibly-gen267 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen131 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen130 & : ( >= ?gen130 1 ) ) ) ( object ( name ?gen124 ) ( is-a to_pay_max ) ( value 500 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen126 & : ( not ( member$ pen12 $?gen126 ) ) ) ) ( test ( eq ( class ?gen124 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen124 ) ( is-a to_pay_max ) ( positive 1 ) ( positive-derivator pen12 ?gen131 ) ) ) ( test ( instance-existp ?gen124 ) ) => ( message-modify-instance ?gen124 ( positive 1 ) ( positive-derivator pen12 ?gen131 ) ) )
( defrule pen12-overruled-dot-gen269 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen124 ) ( is-a to_pay_max ) ( value 500 ) ( negative-support $?gen127 ) ( negative-overruled $?gen128 & : ( subseq-pos ( create$ pen12-overruled $?gen127 $$$ $?gen128 ) ) ) ) ( test ( eq ( class ?gen124 ) to_pay_max ) ) ( not ( and ( object ( name ?gen131 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen130 & : ( >= ?gen130 1 ) ) ) ( object ( name ?gen124 ) ( is-a to_pay_max ) ( positive-defeated $?gen126 & : ( not ( member$ pen12 $?gen126 ) ) ) ) ) ) ( test ( neq $?gen127 (create$) ) ) ( not ( object ( name ?gen124 ) ( is-a to_pay_max ) ( negative-overruled $?gen129 & : ( eq $?gen129 ( delete-member$ $?gen128 ( create$ pen12-overruled $?gen127 ) ) ) ) ) ) ( test ( instance-existp ?gen124 ) ) => ( bind $?gen129 ( delete-member$ $?gen128 ( create$ pen12-overruled $?gen127 ) ) ) ( message-modify-instance ?gen124 ( negative-overruled $?gen129 ) ) )
( defrule pen12-overruled-gen271 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen131 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen130 & : ( >= ?gen130 1 ) ) ) ( object ( name ?gen124 ) ( is-a to_pay_max ) ( value 500 ) ( negative-support $?gen127 ) ( negative-overruled $?gen128 & : ( not ( subseq-pos ( create$ pen12-overruled $?gen127 $$$ $?gen128 ) ) ) ) ( positive-defeated $?gen126 & : ( not ( member$ pen12 $?gen126 ) ) ) ) ( test ( eq ( class ?gen124 ) to_pay_max ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen127 (create$) ) ) ) ( not ( object ( name ?gen124 ) ( is-a to_pay_max ) ( negative-overruled $?gen129 & : ( eq $?gen129 ( create$ pen12-overruled $?gen127 $?gen128 ) ) ) ) ) ( test ( instance-existp ?gen124 ) ) => ( bind $?gen129 ( create$ pen12-overruled $?gen127 $?gen128 ) ) ( message-modify-instance ?gen124 ( negative-overruled $?gen129 ) ) )
( defrule pen12-support-gen273 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen123 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ) ( object ( name ?gen124 ) ( is-a to_pay_max ) ( value 500 ) ( positive-support $?gen126 & : ( not ( subseq-pos ( create$ pen12 ?gen123 $$$ $?gen126 ) ) ) ) ) ( test ( eq ( class ?gen124 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen124 ) ( is-a to_pay_max ) ( positive-support $?gen129 & : ( eq $?gen129 ( create$ pen12 ?gen123 $?gen126 ) ) ) ) ) ( test ( instance-existp ?gen124 ) ) => ( bind $?gen129 ( create$ pen12 ?gen123 $?gen126 ) ) ( message-modify-instance ?gen124 ( positive-support $?gen129 ) ) )
( defrule pen11-defeasibly-dot-gen275 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( value true ) ( positive 1 ) ( positive-derivator pen11 $? ) ) ( test ( eq ( class ?gen115 ) to_increase_penalty ) ) ( not ( and ( object ( name ?gen122 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive ?gen121 & : ( >= ?gen121 1 ) ) ) ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( negative ~ 2 ) ( positive-overruled $?gen117 & : ( not ( member$ pen11 $?gen117 ) ) ) ) ) )  ( not ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( positive 0 ) ) ) ( test ( instance-existp ?gen115 ) ) => ( message-modify-instance ?gen115 ( positive 0 ) ) )
( defrule pen11-defeasibly-gen277 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen122 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive ?gen121 & : ( >= ?gen121 1 ) ) ) ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( value true ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen117 & : ( not ( member$ pen11 $?gen117 ) ) ) ) ( test ( eq ( class ?gen115 ) to_increase_penalty ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( positive 1 ) ( positive-derivator pen11 ?gen122 ) ) ) ( test ( instance-existp ?gen115 ) ) => ( message-modify-instance ?gen115 ( positive 1 ) ( positive-derivator pen11 ?gen122 ) ) )
( defrule pen11-overruled-dot-gen279 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( value true ) ( negative-support $?gen118 ) ( negative-overruled $?gen119 & : ( subseq-pos ( create$ pen11-overruled $?gen118 $$$ $?gen119 ) ) ) ) ( test ( eq ( class ?gen115 ) to_increase_penalty ) ) ( not ( and ( object ( name ?gen122 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive ?gen121 & : ( >= ?gen121 1 ) ) ) ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( positive-defeated $?gen117 & : ( not ( member$ pen11 $?gen117 ) ) ) ) ) ) ( test ( neq $?gen118 (create$) ) ) ( not ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( negative-overruled $?gen120 & : ( eq $?gen120 ( delete-member$ $?gen119 ( create$ pen11-overruled $?gen118 ) ) ) ) ) ) ( test ( instance-existp ?gen115 ) ) => ( bind $?gen120 ( delete-member$ $?gen119 ( create$ pen11-overruled $?gen118 ) ) ) ( message-modify-instance ?gen115 ( negative-overruled $?gen120 ) ) )
( defrule pen11-overruled-gen281 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen122 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive ?gen121 & : ( >= ?gen121 1 ) ) ) ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( value true ) ( negative-support $?gen118 ) ( negative-overruled $?gen119 & : ( not ( subseq-pos ( create$ pen11-overruled $?gen118 $$$ $?gen119 ) ) ) ) ( positive-defeated $?gen117 & : ( not ( member$ pen11 $?gen117 ) ) ) ) ( test ( eq ( class ?gen115 ) to_increase_penalty ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen118 (create$) ) ) ) ( not ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( negative-overruled $?gen120 & : ( eq $?gen120 ( create$ pen11-overruled $?gen118 $?gen119 ) ) ) ) ) ( test ( instance-existp ?gen115 ) ) => ( bind $?gen120 ( create$ pen11-overruled $?gen118 $?gen119 ) ) ( message-modify-instance ?gen115 ( negative-overruled $?gen120 ) ) )
( defrule pen11-support-gen283 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen114 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ) ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( value true ) ( positive-support $?gen117 & : ( not ( subseq-pos ( create$ pen11 ?gen114 $$$ $?gen117 ) ) ) ) ) ( test ( eq ( class ?gen115 ) to_increase_penalty ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen115 ) ( is-a to_increase_penalty ) ( positive-support $?gen120 & : ( eq $?gen120 ( create$ pen11 ?gen114 $?gen117 ) ) ) ) ) ( test ( instance-existp ?gen115 ) ) => ( bind $?gen120 ( create$ pen11 ?gen114 $?gen117 ) ) ( message-modify-instance ?gen115 ( positive-support $?gen120 ) ) )
( defrule pen10-defeasibly-dot-gen285 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen106 ) ( is-a to_pay_less ) ( value true ) ( positive 1 ) ( positive-derivator pen10 $? ) ) ( test ( eq ( class ?gen106 ) to_pay_less ) ) ( not ( and ( object ( name ?gen113 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive ?gen112 & : ( >= ?gen112 1 ) ) ) ( object ( name ?gen106 ) ( is-a to_pay_less ) ( negative ~ 2 ) ( positive-overruled $?gen108 & : ( not ( member$ pen10 $?gen108 ) ) ) ) ) )  ( not ( object ( name ?gen106 ) ( is-a to_pay_less ) ( positive 0 ) ) ) ( test ( instance-existp ?gen106 ) ) => ( message-modify-instance ?gen106 ( positive 0 ) ) )
( defrule pen10-defeasibly-gen287 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen113 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive ?gen112 & : ( >= ?gen112 1 ) ) ) ( object ( name ?gen106 ) ( is-a to_pay_less ) ( value true ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen108 & : ( not ( member$ pen10 $?gen108 ) ) ) ) ( test ( eq ( class ?gen106 ) to_pay_less ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen106 ) ( is-a to_pay_less ) ( positive 1 ) ( positive-derivator pen10 ?gen113 ) ) ) ( test ( instance-existp ?gen106 ) ) => ( message-modify-instance ?gen106 ( positive 1 ) ( positive-derivator pen10 ?gen113 ) ) )
( defrule pen10-overruled-dot-gen289 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen106 ) ( is-a to_pay_less ) ( value true ) ( negative-support $?gen109 ) ( negative-overruled $?gen110 & : ( subseq-pos ( create$ pen10-overruled $?gen109 $$$ $?gen110 ) ) ) ) ( test ( eq ( class ?gen106 ) to_pay_less ) ) ( not ( and ( object ( name ?gen113 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive ?gen112 & : ( >= ?gen112 1 ) ) ) ( object ( name ?gen106 ) ( is-a to_pay_less ) ( positive-defeated $?gen108 & : ( not ( member$ pen10 $?gen108 ) ) ) ) ) ) ( test ( neq $?gen109 (create$) ) ) ( not ( object ( name ?gen106 ) ( is-a to_pay_less ) ( negative-overruled $?gen111 & : ( eq $?gen111 ( delete-member$ $?gen110 ( create$ pen10-overruled $?gen109 ) ) ) ) ) ) ( test ( instance-existp ?gen106 ) ) => ( bind $?gen111 ( delete-member$ $?gen110 ( create$ pen10-overruled $?gen109 ) ) ) ( message-modify-instance ?gen106 ( negative-overruled $?gen111 ) ) )
( defrule pen10-overruled-gen291 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen113 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive ?gen112 & : ( >= ?gen112 1 ) ) ) ( object ( name ?gen106 ) ( is-a to_pay_less ) ( value true ) ( negative-support $?gen109 ) ( negative-overruled $?gen110 & : ( not ( subseq-pos ( create$ pen10-overruled $?gen109 $$$ $?gen110 ) ) ) ) ( positive-defeated $?gen108 & : ( not ( member$ pen10 $?gen108 ) ) ) ) ( test ( eq ( class ?gen106 ) to_pay_less ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen109 (create$) ) ) ) ( not ( object ( name ?gen106 ) ( is-a to_pay_less ) ( negative-overruled $?gen111 & : ( eq $?gen111 ( create$ pen10-overruled $?gen109 $?gen110 ) ) ) ) ) ( test ( instance-existp ?gen106 ) ) => ( bind $?gen111 ( create$ pen10-overruled $?gen109 $?gen110 ) ) ( message-modify-instance ?gen106 ( negative-overruled $?gen111 ) ) )
( defrule pen10-support-gen293 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen105 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ) ( object ( name ?gen106 ) ( is-a to_pay_less ) ( value true ) ( positive-support $?gen108 & : ( not ( subseq-pos ( create$ pen10 ?gen105 $$$ $?gen108 ) ) ) ) ) ( test ( eq ( class ?gen106 ) to_pay_less ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen106 ) ( is-a to_pay_less ) ( positive-support $?gen111 & : ( eq $?gen111 ( create$ pen10 ?gen105 $?gen108 ) ) ) ) ) ( test ( instance-existp ?gen106 ) ) => ( bind $?gen111 ( create$ pen10 ?gen105 $?gen108 ) ) ( message-modify-instance ?gen106 ( positive-support $?gen111 ) ) )
( defrule pen7-defeasibly-dot-gen295 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( value true ) ( positive 1 ) ( positive-derivator pen7 $? ) ) ( test ( eq ( class ?gen97 ) confiscate_weapon ) ) ( not ( and ( object ( name ?gen104 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive ?gen103 & : ( >= ?gen103 1 ) ) ) ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( negative ~ 2 ) ( positive-overruled $?gen99 & : ( not ( member$ pen7 $?gen99 ) ) ) ) ) )  ( not ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( positive 0 ) ) ) ( test ( instance-existp ?gen97 ) ) => ( message-modify-instance ?gen97 ( positive 0 ) ) )
( defrule pen7-defeasibly-gen297 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen104 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive ?gen103 & : ( >= ?gen103 1 ) ) ) ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( value true ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen99 & : ( not ( member$ pen7 $?gen99 ) ) ) ) ( test ( eq ( class ?gen97 ) confiscate_weapon ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( positive 1 ) ( positive-derivator pen7 ?gen104 ) ) ) ( test ( instance-existp ?gen97 ) ) => ( message-modify-instance ?gen97 ( positive 1 ) ( positive-derivator pen7 ?gen104 ) ) )
( defrule pen7-overruled-dot-gen299 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( value true ) ( negative-support $?gen100 ) ( negative-overruled $?gen101 & : ( subseq-pos ( create$ pen7-overruled $?gen100 $$$ $?gen101 ) ) ) ) ( test ( eq ( class ?gen97 ) confiscate_weapon ) ) ( not ( and ( object ( name ?gen104 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive ?gen103 & : ( >= ?gen103 1 ) ) ) ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( positive-defeated $?gen99 & : ( not ( member$ pen7 $?gen99 ) ) ) ) ) ) ( test ( neq $?gen100 (create$) ) ) ( not ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( negative-overruled $?gen102 & : ( eq $?gen102 ( delete-member$ $?gen101 ( create$ pen7-overruled $?gen100 ) ) ) ) ) ) ( test ( instance-existp ?gen97 ) ) => ( bind $?gen102 ( delete-member$ $?gen101 ( create$ pen7-overruled $?gen100 ) ) ) ( message-modify-instance ?gen97 ( negative-overruled $?gen102 ) ) )
( defrule pen7-overruled-gen301 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen104 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive ?gen103 & : ( >= ?gen103 1 ) ) ) ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( value true ) ( negative-support $?gen100 ) ( negative-overruled $?gen101 & : ( not ( subseq-pos ( create$ pen7-overruled $?gen100 $$$ $?gen101 ) ) ) ) ( positive-defeated $?gen99 & : ( not ( member$ pen7 $?gen99 ) ) ) ) ( test ( eq ( class ?gen97 ) confiscate_weapon ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen100 (create$) ) ) ) ( not ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( negative-overruled $?gen102 & : ( eq $?gen102 ( create$ pen7-overruled $?gen100 $?gen101 ) ) ) ) ) ( test ( instance-existp ?gen97 ) ) => ( bind $?gen102 ( create$ pen7-overruled $?gen100 $?gen101 ) ) ( message-modify-instance ?gen97 ( negative-overruled $?gen102 ) ) )
( defrule pen7-support-gen303 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen96 ) ( is-a confiscation ) ( defendant ?Defendant ) ) ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( value true ) ( positive-support $?gen99 & : ( not ( subseq-pos ( create$ pen7 ?gen96 $$$ $?gen99 ) ) ) ) ) ( test ( eq ( class ?gen97 ) confiscate_weapon ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen97 ) ( is-a confiscate_weapon ) ( positive-support $?gen102 & : ( eq $?gen102 ( create$ pen7 ?gen96 $?gen99 ) ) ) ) ) ( test ( instance-existp ?gen97 ) ) => ( bind $?gen102 ( create$ pen7 ?gen96 $?gen99 ) ) ( message-modify-instance ?gen97 ( positive-support $?gen102 ) ) )
( defrule pen1-defeasibly-dot-gen305 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( value 30 ) ( positive 1 ) ( positive-derivator pen1 $? ) ) ( test ( eq ( class ?gen88 ) 30_imprisonment ) ) ( not ( and ( object ( name ?gen95 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive ?gen94 & : ( >= ?gen94 1 ) ) ) ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( negative ~ 2 ) ( positive-overruled $?gen90 & : ( not ( member$ pen1 $?gen90 ) ) ) ) ) )  ( not ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( positive 0 ) ) ) ( test ( instance-existp ?gen88 ) ) => ( message-modify-instance ?gen88 ( positive 0 ) ) )
( defrule pen1-defeasibly-gen307 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen95 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive ?gen94 & : ( >= ?gen94 1 ) ) ) ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( value 30 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen90 & : ( not ( member$ pen1 $?gen90 ) ) ) ) ( test ( eq ( class ?gen88 ) 30_imprisonment ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( positive 1 ) ( positive-derivator pen1 ?gen95 ) ) ) ( test ( instance-existp ?gen88 ) ) => ( message-modify-instance ?gen88 ( positive 1 ) ( positive-derivator pen1 ?gen95 ) ) )
( defrule pen1-overruled-dot-gen309 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( value 30 ) ( negative-support $?gen91 ) ( negative-overruled $?gen92 & : ( subseq-pos ( create$ pen1-overruled $?gen91 $$$ $?gen92 ) ) ) ) ( test ( eq ( class ?gen88 ) 30_imprisonment ) ) ( not ( and ( object ( name ?gen95 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive ?gen94 & : ( >= ?gen94 1 ) ) ) ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( positive-defeated $?gen90 & : ( not ( member$ pen1 $?gen90 ) ) ) ) ) ) ( test ( neq $?gen91 (create$) ) ) ( not ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( negative-overruled $?gen93 & : ( eq $?gen93 ( delete-member$ $?gen92 ( create$ pen1-overruled $?gen91 ) ) ) ) ) ) ( test ( instance-existp ?gen88 ) ) => ( bind $?gen93 ( delete-member$ $?gen92 ( create$ pen1-overruled $?gen91 ) ) ) ( message-modify-instance ?gen88 ( negative-overruled $?gen93 ) ) )
( defrule pen1-overruled-gen311 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen95 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive ?gen94 & : ( >= ?gen94 1 ) ) ) ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( value 30 ) ( negative-support $?gen91 ) ( negative-overruled $?gen92 & : ( not ( subseq-pos ( create$ pen1-overruled $?gen91 $$$ $?gen92 ) ) ) ) ( positive-defeated $?gen90 & : ( not ( member$ pen1 $?gen90 ) ) ) ) ( test ( eq ( class ?gen88 ) 30_imprisonment ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen91 (create$) ) ) ) ( not ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( negative-overruled $?gen93 & : ( eq $?gen93 ( create$ pen1-overruled $?gen91 $?gen92 ) ) ) ) ) ( test ( instance-existp ?gen88 ) ) => ( bind $?gen93 ( create$ pen1-overruled $?gen91 $?gen92 ) ) ( message-modify-instance ?gen88 ( negative-overruled $?gen93 ) ) )
( defrule pen1-support-gen313 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen87 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ) ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( value 30 ) ( positive-support $?gen90 & : ( not ( subseq-pos ( create$ pen1 ?gen87 $$$ $?gen90 ) ) ) ) ) ( test ( eq ( class ?gen88 ) 30_imprisonment ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen88 ) ( is-a 30_imprisonment ) ( positive-support $?gen93 & : ( eq $?gen93 ( create$ pen1 ?gen87 $?gen90 ) ) ) ) ) ( test ( instance-existp ?gen88 ) ) => ( bind $?gen93 ( create$ pen1 ?gen87 $?gen90 ) ) ( message-modify-instance ?gen88 ( positive-support $?gen93 ) ) )
( defrule rule11-defeasibly-dot-gen315 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule11 $? ) ) ( test ( eq ( class ?gen79 ) is_high_category_weapon_in_public ) ) ( not ( and ( object ( name ?gen86 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ( positive ?gen85 & : ( >= ?gen85 1 ) ) ) ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( negative ~ 2 ) ( positive-overruled $?gen81 & : ( not ( member$ rule11 $?gen81 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( positive 0 ) ) ) ( test ( instance-existp ?gen79 ) ) => ( message-modify-instance ?gen79 ( positive 0 ) ) )
( defrule rule11-defeasibly-gen317 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen86 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ( positive ?gen85 & : ( >= ?gen85 1 ) ) ) ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen81 & : ( not ( member$ rule11 $?gen81 ) ) ) ) ( test ( eq ( class ?gen79 ) is_high_category_weapon_in_public ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( positive 1 ) ( positive-derivator rule11 ?gen86 ) ) ) ( test ( instance-existp ?gen79 ) ) => ( message-modify-instance ?gen79 ( positive 1 ) ( positive-derivator rule11 ?gen86 ) ) )
( defrule rule11-overruled-dot-gen319 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( negative-support $?gen82 ) ( negative-overruled $?gen83 & : ( subseq-pos ( create$ rule11-overruled $?gen82 $$$ $?gen83 ) ) ) ) ( test ( eq ( class ?gen79 ) is_high_category_weapon_in_public ) ) ( not ( and ( object ( name ?gen86 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ( positive ?gen85 & : ( >= ?gen85 1 ) ) ) ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( positive-defeated $?gen81 & : ( not ( member$ rule11 $?gen81 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen82 (create$) ) ) ) ( not ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( negative-overruled $?gen84 & : ( eq $?gen84 ( delete-member$ $?gen83 ( create$ rule11-overruled $?gen82 ) ) ) ) ) ) ( test ( instance-existp ?gen79 ) ) => ( bind $?gen84 ( delete-member$ $?gen83 ( create$ rule11-overruled $?gen82 ) ) ) ( message-modify-instance ?gen79 ( negative-overruled $?gen84 ) ) )
( defrule rule11-overruled-gen321 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen86 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ( positive ?gen85 & : ( >= ?gen85 1 ) ) ) ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( negative-support $?gen82 ) ( negative-overruled $?gen83 & : ( not ( subseq-pos ( create$ rule11-overruled $?gen82 $$$ $?gen83 ) ) ) ) ( positive-defeated $?gen81 & : ( not ( member$ rule11 $?gen81 ) ) ) ) ( test ( eq ( class ?gen79 ) is_high_category_weapon_in_public ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen82 (create$) ) ) ) ( not ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( negative-overruled $?gen84 & : ( eq $?gen84 ( create$ rule11-overruled $?gen82 $?gen83 ) ) ) ) ) ( test ( instance-existp ?gen79 ) ) => ( bind $?gen84 ( create$ rule11-overruled $?gen82 $?gen83 ) ) ( message-modify-instance ?gen79 ( negative-overruled $?gen84 ) ) )
( defrule rule11-support-gen323 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen78 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ) ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive-support $?gen81 & : ( not ( subseq-pos ( create$ rule11 ?gen78 $$$ $?gen81 ) ) ) ) ) ( test ( eq ( class ?gen79 ) is_high_category_weapon_in_public ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen79 ) ( is-a is_high_category_weapon_in_public ) ( positive-support $?gen84 & : ( eq $?gen84 ( create$ rule11 ?gen78 $?gen81 ) ) ) ) ) ( test ( instance-existp ?gen79 ) ) => ( bind $?gen84 ( create$ rule11 ?gen78 $?gen81 ) ) ( message-modify-instance ?gen79 ( positive-support $?gen84 ) ) )
( defrule rule10-defeasibly-dot-gen325 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule10 $? ) ) ( test ( eq ( class ?gen70 ) recommend_increased_penalty ) ) ( not ( and ( object ( name ?gen77 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ( positive ?gen76 & : ( >= ?gen76 1 ) ) ) ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( negative ~ 2 ) ( positive-overruled $?gen72 & : ( not ( member$ rule10 $?gen72 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( positive 0 ) ) ) ( test ( instance-existp ?gen70 ) ) => ( message-modify-instance ?gen70 ( positive 0 ) ) )
( defrule rule10-defeasibly-gen327 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen77 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ( positive ?gen76 & : ( >= ?gen76 1 ) ) ) ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen72 & : ( not ( member$ rule10 $?gen72 ) ) ) ) ( test ( eq ( class ?gen70 ) recommend_increased_penalty ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( positive 1 ) ( positive-derivator rule10 ?gen77 ) ) ) ( test ( instance-existp ?gen70 ) ) => ( message-modify-instance ?gen70 ( positive 1 ) ( positive-derivator rule10 ?gen77 ) ) )
( defrule rule10-overruled-dot-gen329 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( negative-support $?gen73 ) ( negative-overruled $?gen74 & : ( subseq-pos ( create$ rule10-overruled $?gen73 $$$ $?gen74 ) ) ) ) ( test ( eq ( class ?gen70 ) recommend_increased_penalty ) ) ( not ( and ( object ( name ?gen77 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ( positive ?gen76 & : ( >= ?gen76 1 ) ) ) ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( positive-defeated $?gen72 & : ( not ( member$ rule10 $?gen72 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen73 (create$) ) ) ) ( not ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( negative-overruled $?gen75 & : ( eq $?gen75 ( delete-member$ $?gen74 ( create$ rule10-overruled $?gen73 ) ) ) ) ) ) ( test ( instance-existp ?gen70 ) ) => ( bind $?gen75 ( delete-member$ $?gen74 ( create$ rule10-overruled $?gen73 ) ) ) ( message-modify-instance ?gen70 ( negative-overruled $?gen75 ) ) )
( defrule rule10-overruled-gen331 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen77 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ( positive ?gen76 & : ( >= ?gen76 1 ) ) ) ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( negative-support $?gen73 ) ( negative-overruled $?gen74 & : ( not ( subseq-pos ( create$ rule10-overruled $?gen73 $$$ $?gen74 ) ) ) ) ( positive-defeated $?gen72 & : ( not ( member$ rule10 $?gen72 ) ) ) ) ( test ( eq ( class ?gen70 ) recommend_increased_penalty ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen73 (create$) ) ) ) ( not ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( negative-overruled $?gen75 & : ( eq $?gen75 ( create$ rule10-overruled $?gen73 $?gen74 ) ) ) ) ) ( test ( instance-existp ?gen70 ) ) => ( bind $?gen75 ( create$ rule10-overruled $?gen73 $?gen74 ) ) ( message-modify-instance ?gen70 ( negative-overruled $?gen75 ) ) )
( defrule rule10-support-gen333 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ) ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive-support $?gen72 & : ( not ( subseq-pos ( create$ rule10 ?gen69 $$$ $?gen72 ) ) ) ) ) ( test ( eq ( class ?gen70 ) recommend_increased_penalty ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen70 ) ( is-a recommend_increased_penalty ) ( positive-support $?gen75 & : ( eq $?gen75 ( create$ rule10 ?gen69 $?gen72 ) ) ) ) ) ( test ( instance-existp ?gen70 ) ) => ( bind $?gen75 ( create$ rule10 ?gen69 $?gen72 ) ) ( message-modify-instance ?gen70 ( positive-support $?gen75 ) ) )
( defrule rule9-defeasibly-dot-gen335 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule9 $? ) ) ( test ( eq ( class ?gen61 ) recommend_fine_reduction ) ) ( not ( and ( object ( name ?gen68 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ( positive ?gen67 & : ( >= ?gen67 1 ) ) ) ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( negative ~ 2 ) ( positive-overruled $?gen63 & : ( not ( member$ rule9 $?gen63 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( positive 0 ) ) ) ( test ( instance-existp ?gen61 ) ) => ( message-modify-instance ?gen61 ( positive 0 ) ) )
( defrule rule9-defeasibly-gen337 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen68 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ( positive ?gen67 & : ( >= ?gen67 1 ) ) ) ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen63 & : ( not ( member$ rule9 $?gen63 ) ) ) ) ( test ( eq ( class ?gen61 ) recommend_fine_reduction ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( positive 1 ) ( positive-derivator rule9 ?gen68 ) ) ) ( test ( instance-existp ?gen61 ) ) => ( message-modify-instance ?gen61 ( positive 1 ) ( positive-derivator rule9 ?gen68 ) ) )
( defrule rule9-overruled-dot-gen339 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( negative-support $?gen64 ) ( negative-overruled $?gen65 & : ( subseq-pos ( create$ rule9-overruled $?gen64 $$$ $?gen65 ) ) ) ) ( test ( eq ( class ?gen61 ) recommend_fine_reduction ) ) ( not ( and ( object ( name ?gen68 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ( positive ?gen67 & : ( >= ?gen67 1 ) ) ) ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( positive-defeated $?gen63 & : ( not ( member$ rule9 $?gen63 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen64 (create$) ) ) ) ( not ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( negative-overruled $?gen66 & : ( eq $?gen66 ( delete-member$ $?gen65 ( create$ rule9-overruled $?gen64 ) ) ) ) ) ) ( test ( instance-existp ?gen61 ) ) => ( bind $?gen66 ( delete-member$ $?gen65 ( create$ rule9-overruled $?gen64 ) ) ) ( message-modify-instance ?gen61 ( negative-overruled $?gen66 ) ) )
( defrule rule9-overruled-gen341 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen68 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ( positive ?gen67 & : ( >= ?gen67 1 ) ) ) ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( negative-support $?gen64 ) ( negative-overruled $?gen65 & : ( not ( subseq-pos ( create$ rule9-overruled $?gen64 $$$ $?gen65 ) ) ) ) ( positive-defeated $?gen63 & : ( not ( member$ rule9 $?gen63 ) ) ) ) ( test ( eq ( class ?gen61 ) recommend_fine_reduction ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen64 (create$) ) ) ) ( not ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( negative-overruled $?gen66 & : ( eq $?gen66 ( create$ rule9-overruled $?gen64 $?gen65 ) ) ) ) ) ( test ( instance-existp ?gen61 ) ) => ( bind $?gen66 ( create$ rule9-overruled $?gen64 $?gen65 ) ) ( message-modify-instance ?gen61 ( negative-overruled $?gen66 ) ) )
( defrule rule9-support-gen343 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen60 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ) ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive-support $?gen63 & : ( not ( subseq-pos ( create$ rule9 ?gen60 $$$ $?gen63 ) ) ) ) ) ( test ( eq ( class ?gen61 ) recommend_fine_reduction ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen61 ) ( is-a recommend_fine_reduction ) ( positive-support $?gen66 & : ( eq $?gen66 ( create$ rule9 ?gen60 $?gen63 ) ) ) ) ) ( test ( instance-existp ?gen61 ) ) => ( bind $?gen66 ( create$ rule9 ?gen60 $?gen63 ) ) ( message-modify-instance ?gen61 ( positive-support $?gen66 ) ) )
( defrule rule8-defeasibly-dot-gen345 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen50 ) ( is-a money ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule8 $? ) ) ( test ( eq ( class ?gen50 ) money ) ) ( not ( and ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen56 & : ( >= ?gen56 1 ) ) ) ( object ( name ?gen59 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ( positive ?gen58 & : ( >= ?gen58 1 ) ) ) ( object ( name ?gen50 ) ( is-a money ) ( negative ~ 2 ) ( positive-overruled $?gen52 & : ( not ( member$ rule8 $?gen52 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen50 ) ( is-a money ) ( positive 0 ) ) ) ( test ( instance-existp ?gen50 ) ) => ( message-modify-instance ?gen50 ( positive 0 ) ) )
( defrule rule8-defeasibly-gen347 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen56 & : ( >= ?gen56 1 ) ) ) ( object ( name ?gen59 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ( positive ?gen58 & : ( >= ?gen58 1 ) ) ) ( object ( name ?gen50 ) ( is-a money ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen52 & : ( not ( member$ rule8 $?gen52 ) ) ) ) ( test ( eq ( class ?gen50 ) money ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen50 ) ( is-a money ) ( positive 1 ) ( positive-derivator rule8 ?gen57 ?gen59 ) ) ) ( test ( instance-existp ?gen50 ) ) => ( message-modify-instance ?gen50 ( positive 1 ) ( positive-derivator rule8 ?gen57 ?gen59 ) ) )
( defrule rule8-overruled-dot-gen349 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen50 ) ( is-a money ) ( defendant ?Defendant ) ( negative-support $?gen53 ) ( negative-overruled $?gen54 & : ( subseq-pos ( create$ rule8-overruled $?gen53 $$$ $?gen54 ) ) ) ) ( test ( eq ( class ?gen50 ) money ) ) ( not ( and ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen56 & : ( >= ?gen56 1 ) ) ) ( object ( name ?gen59 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ( positive ?gen58 & : ( >= ?gen58 1 ) ) ) ( object ( name ?gen50 ) ( is-a money ) ( positive-defeated $?gen52 & : ( not ( member$ rule8 $?gen52 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen53 (create$) ) ) ) ( not ( object ( name ?gen50 ) ( is-a money ) ( negative-overruled $?gen55 & : ( eq $?gen55 ( delete-member$ $?gen54 ( create$ rule8-overruled $?gen53 ) ) ) ) ) ) ( test ( instance-existp ?gen50 ) ) => ( bind $?gen55 ( delete-member$ $?gen54 ( create$ rule8-overruled $?gen53 ) ) ) ( message-modify-instance ?gen50 ( negative-overruled $?gen55 ) ) )
( defrule rule8-overruled-gen351 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen56 & : ( >= ?gen56 1 ) ) ) ( object ( name ?gen59 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ( positive ?gen58 & : ( >= ?gen58 1 ) ) ) ( object ( name ?gen50 ) ( is-a money ) ( defendant ?Defendant ) ( negative-support $?gen53 ) ( negative-overruled $?gen54 & : ( not ( subseq-pos ( create$ rule8-overruled $?gen53 $$$ $?gen54 ) ) ) ) ( positive-defeated $?gen52 & : ( not ( member$ rule8 $?gen52 ) ) ) ) ( test ( eq ( class ?gen50 ) money ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen53 (create$) ) ) ) ( not ( object ( name ?gen50 ) ( is-a money ) ( negative-overruled $?gen55 & : ( eq $?gen55 ( create$ rule8-overruled $?gen53 $?gen54 ) ) ) ) ) ( test ( instance-existp ?gen50 ) ) => ( bind $?gen55 ( create$ rule8-overruled $?gen53 $?gen54 ) ) ( message-modify-instance ?gen50 ( negative-overruled $?gen55 ) ) )
( defrule rule8-support-gen353 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( object ( name ?gen49 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ) ( object ( name ?gen50 ) ( is-a money ) ( defendant ?Defendant ) ( positive-support $?gen52 & : ( not ( subseq-pos ( create$ rule8 ?gen48 ?gen49 $$$ $?gen52 ) ) ) ) ) ( test ( eq ( class ?gen50 ) money ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen50 ) ( is-a money ) ( positive-support $?gen55 & : ( eq $?gen55 ( create$ rule8 ?gen48 ?gen49 $?gen52 ) ) ) ) ) ( test ( instance-existp ?gen50 ) ) => ( bind $?gen55 ( create$ rule8 ?gen48 ?gen49 $?gen52 ) ) ( message-modify-instance ?gen50 ( positive-support $?gen55 ) ) )
( defrule rule7-defeasibly-dot-gen355 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen40 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule7 $? ) ) ( test ( eq ( class ?gen40 ) confiscation ) ) ( not ( and ( object ( name ?gen47 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen46 & : ( >= ?gen46 1 ) ) ) ( object ( name ?gen40 ) ( is-a confiscation ) ( negative ~ 2 ) ( positive-overruled $?gen42 & : ( not ( member$ rule7 $?gen42 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen40 ) ( is-a confiscation ) ( positive 0 ) ) ) ( test ( instance-existp ?gen40 ) ) => ( message-modify-instance ?gen40 ( positive 0 ) ) )
( defrule rule7-defeasibly-gen357 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen47 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen46 & : ( >= ?gen46 1 ) ) ) ( object ( name ?gen40 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen42 & : ( not ( member$ rule7 $?gen42 ) ) ) ) ( test ( eq ( class ?gen40 ) confiscation ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen40 ) ( is-a confiscation ) ( positive 1 ) ( positive-derivator rule7 ?gen47 ) ) ) ( test ( instance-existp ?gen40 ) ) => ( message-modify-instance ?gen40 ( positive 1 ) ( positive-derivator rule7 ?gen47 ) ) )
( defrule rule7-overruled-dot-gen359 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen40 ) ( is-a confiscation ) ( defendant ?Defendant ) ( negative-support $?gen43 ) ( negative-overruled $?gen44 & : ( subseq-pos ( create$ rule7-overruled $?gen43 $$$ $?gen44 ) ) ) ) ( test ( eq ( class ?gen40 ) confiscation ) ) ( not ( and ( object ( name ?gen47 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen46 & : ( >= ?gen46 1 ) ) ) ( object ( name ?gen40 ) ( is-a confiscation ) ( positive-defeated $?gen42 & : ( not ( member$ rule7 $?gen42 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen43 (create$) ) ) ) ( not ( object ( name ?gen40 ) ( is-a confiscation ) ( negative-overruled $?gen45 & : ( eq $?gen45 ( delete-member$ $?gen44 ( create$ rule7-overruled $?gen43 ) ) ) ) ) ) ( test ( instance-existp ?gen40 ) ) => ( bind $?gen45 ( delete-member$ $?gen44 ( create$ rule7-overruled $?gen43 ) ) ) ( message-modify-instance ?gen40 ( negative-overruled $?gen45 ) ) )
( defrule rule7-overruled-gen361 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen47 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen46 & : ( >= ?gen46 1 ) ) ) ( object ( name ?gen40 ) ( is-a confiscation ) ( defendant ?Defendant ) ( negative-support $?gen43 ) ( negative-overruled $?gen44 & : ( not ( subseq-pos ( create$ rule7-overruled $?gen43 $$$ $?gen44 ) ) ) ) ( positive-defeated $?gen42 & : ( not ( member$ rule7 $?gen42 ) ) ) ) ( test ( eq ( class ?gen40 ) confiscation ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen43 (create$) ) ) ) ( not ( object ( name ?gen40 ) ( is-a confiscation ) ( negative-overruled $?gen45 & : ( eq $?gen45 ( create$ rule7-overruled $?gen43 $?gen44 ) ) ) ) ) ( test ( instance-existp ?gen40 ) ) => ( bind $?gen45 ( create$ rule7-overruled $?gen43 $?gen44 ) ) ( message-modify-instance ?gen40 ( negative-overruled $?gen45 ) ) )
( defrule rule7-support-gen363 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen39 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( object ( name ?gen40 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive-support $?gen42 & : ( not ( subseq-pos ( create$ rule7 ?gen39 $$$ $?gen42 ) ) ) ) ) ( test ( eq ( class ?gen40 ) confiscation ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen40 ) ( is-a confiscation ) ( positive-support $?gen45 & : ( eq $?gen45 ( create$ rule7 ?gen39 $?gen42 ) ) ) ) ) ( test ( instance-existp ?gen40 ) ) => ( bind $?gen45 ( create$ rule7 ?gen39 $?gen42 ) ) ( message-modify-instance ?gen40 ( positive-support $?gen45 ) ) )
( defrule rule2-defeasibly-dot-gen365 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule2 $? ) ) ( test ( eq ( class ?gen31 ) harm_done_with_weapon ) ) ( not ( and ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:harm_done "yes" ) ( positive ?gen37 & : ( >= ?gen37 1 ) ) ) ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( negative ~ 2 ) ( positive-overruled $?gen33 & : ( not ( member$ rule2 $?gen33 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( positive 0 ) ) ) ( test ( instance-existp ?gen31 ) ) => ( message-modify-instance ?gen31 ( positive 0 ) ) )
( defrule rule2-defeasibly-gen367 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:harm_done "yes" ) ( positive ?gen37 & : ( >= ?gen37 1 ) ) ) ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen33 & : ( not ( member$ rule2 $?gen33 ) ) ) ) ( test ( eq ( class ?gen31 ) harm_done_with_weapon ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( positive 1 ) ( positive-derivator rule2 ?gen38 ) ) ) ( test ( instance-existp ?gen31 ) ) => ( message-modify-instance ?gen31 ( positive 1 ) ( positive-derivator rule2 ?gen38 ) ) )
( defrule rule2-overruled-dot-gen369 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ( negative-support $?gen34 ) ( negative-overruled $?gen35 & : ( subseq-pos ( create$ rule2-overruled $?gen34 $$$ $?gen35 ) ) ) ) ( test ( eq ( class ?gen31 ) harm_done_with_weapon ) ) ( not ( and ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:harm_done "yes" ) ( positive ?gen37 & : ( >= ?gen37 1 ) ) ) ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( positive-defeated $?gen33 & : ( not ( member$ rule2 $?gen33 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen34 (create$) ) ) ) ( not ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( negative-overruled $?gen36 & : ( eq $?gen36 ( delete-member$ $?gen35 ( create$ rule2-overruled $?gen34 ) ) ) ) ) ) ( test ( instance-existp ?gen31 ) ) => ( bind $?gen36 ( delete-member$ $?gen35 ( create$ rule2-overruled $?gen34 ) ) ) ( message-modify-instance ?gen31 ( negative-overruled $?gen36 ) ) )
( defrule rule2-overruled-gen371 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:harm_done "yes" ) ( positive ?gen37 & : ( >= ?gen37 1 ) ) ) ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ( negative-support $?gen34 ) ( negative-overruled $?gen35 & : ( not ( subseq-pos ( create$ rule2-overruled $?gen34 $$$ $?gen35 ) ) ) ) ( positive-defeated $?gen33 & : ( not ( member$ rule2 $?gen33 ) ) ) ) ( test ( eq ( class ?gen31 ) harm_done_with_weapon ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen34 (create$) ) ) ) ( not ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( negative-overruled $?gen36 & : ( eq $?gen36 ( create$ rule2-overruled $?gen34 $?gen35 ) ) ) ) ) ( test ( instance-existp ?gen31 ) ) => ( bind $?gen36 ( create$ rule2-overruled $?gen34 $?gen35 ) ) ( message-modify-instance ?gen31 ( negative-overruled $?gen36 ) ) )
( defrule rule2-support-gen373 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen30 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:harm_done "yes" ) ) ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ( positive-support $?gen33 & : ( not ( subseq-pos ( create$ rule2 ?gen30 $$$ $?gen33 ) ) ) ) ) ( test ( eq ( class ?gen31 ) harm_done_with_weapon ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen31 ) ( is-a harm_done_with_weapon ) ( positive-support $?gen36 & : ( eq $?gen36 ( create$ rule2 ?gen30 $?gen33 ) ) ) ) ) ( test ( instance-existp ?gen31 ) ) => ( bind $?gen36 ( create$ rule2 ?gen30 $?gen33 ) ) ( message-modify-instance ?gen31 ( positive-support $?gen36 ) ) )
( defrule rule111-defeasibly-dot-gen375 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule111] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen24 ) ( is-a fine ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule111 $? ) ) ( test ( eq ( class ?gen24 ) fine ) ) ( not ( object ( name ?gen24 ) ( is-a fine ) ( negative ~ 2 ) ( positive-overruled $?gen26 & : ( not ( member$ rule111 $?gen26 ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen24 ) ( is-a fine ) ( positive 0 ) ) ) ( test ( instance-existp ?gen24 ) ) => ( message-modify-instance ?gen24 ( positive 0 ) ) )
( defrule rule111-defeasibly-gen377 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule111] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen24 ) ( is-a fine ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen26 & : ( not ( member$ rule111 $?gen26 ) ) ) ) ( test ( eq ( class ?gen24 ) fine ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen24 ) ( is-a fine ) ( positive 1 ) ( positive-derivator rule111 ) ) ) ( test ( instance-existp ?gen24 ) ) => ( message-modify-instance ?gen24 ( positive 1 ) ( positive-derivator rule111 ) ) )
( defrule rule111-overruled-dot-gen379 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule111] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen24 ) ( is-a fine ) ( defendant ?Defendant ) ( negative-support $?gen27 ) ( negative-overruled $?gen28 & : ( subseq-pos ( create$ rule111-overruled $?gen27 $$$ $?gen28 ) ) ) ) ( test ( eq ( class ?gen24 ) fine ) ) ( not ( object ( name ?gen24 ) ( is-a fine ) ( positive-defeated $?gen26 & : ( not ( member$ rule111 $?gen26 ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen27 (create$) ) ) ) ( not ( object ( name ?gen24 ) ( is-a fine ) ( negative-overruled $?gen29 & : ( eq $?gen29 ( delete-member$ $?gen28 ( create$ rule111-overruled $?gen27 ) ) ) ) ) ) ( test ( instance-existp ?gen24 ) ) => ( bind $?gen29 ( delete-member$ $?gen28 ( create$ rule111-overruled $?gen27 ) ) ) ( message-modify-instance ?gen24 ( negative-overruled $?gen29 ) ) )
( defrule rule111-overruled-gen381 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule111] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen24 ) ( is-a fine ) ( defendant ?Defendant ) ( negative-support $?gen27 ) ( negative-overruled $?gen28 & : ( not ( subseq-pos ( create$ rule111-overruled $?gen27 $$$ $?gen28 ) ) ) ) ( positive-defeated $?gen26 & : ( not ( member$ rule111 $?gen26 ) ) ) ) ( test ( eq ( class ?gen24 ) fine ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen27 (create$) ) ) ) ( not ( object ( name ?gen24 ) ( is-a fine ) ( negative-overruled $?gen29 & : ( eq $?gen29 ( create$ rule111-overruled $?gen27 $?gen28 ) ) ) ) ) ( test ( instance-existp ?gen24 ) ) => ( bind $?gen29 ( create$ rule111-overruled $?gen27 $?gen28 ) ) ( message-modify-instance ?gen24 ( negative-overruled $?gen29 ) ) )
( defrule rule111-support-gen383 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule111] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen24 ) ( is-a fine ) ( defendant ?Defendant ) ( positive-support $?gen26 & : ( not ( subseq-pos ( create$ rule111 $$$ $?gen26 ) ) ) ) ) ( test ( eq ( class ?gen24 ) fine ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen24 ) ( is-a fine ) ( positive-support $?gen29 & : ( eq $?gen29 ( create$ rule111 $?gen26 ) ) ) ) ) ( test ( instance-existp ?gen24 ) ) => ( bind $?gen29 ( create$ rule111 $?gen26 ) ) ( message-modify-instance ?gen24 ( positive-support $?gen29 ) ) )
( defrule rule1-defeasibly-dot-gen385 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule1 $? ) ) ( test ( eq ( class ?gen16 ) jail_3_months ) ) ( not ( and ( object ( name ?gen23 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen22 & : ( >= ?gen22 1 ) ) ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( negative ~ 2 ) ( positive-overruled $?gen18 & : ( not ( member$ rule1 $?gen18 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen16 ) ( is-a jail_3_months ) ( positive 0 ) ) ) ( test ( instance-existp ?gen16 ) ) => ( message-modify-instance ?gen16 ( positive 0 ) ) )
( defrule rule1-defeasibly-gen387 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen23 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen22 & : ( >= ?gen22 1 ) ) ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen18 & : ( not ( member$ rule1 $?gen18 ) ) ) ) ( test ( eq ( class ?gen16 ) jail_3_months ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen16 ) ( is-a jail_3_months ) ( positive 1 ) ( positive-derivator rule1 ?gen23 ) ) ) ( test ( instance-existp ?gen16 ) ) => ( message-modify-instance ?gen16 ( positive 1 ) ( positive-derivator rule1 ?gen23 ) ) )
( defrule rule1-overruled-dot-gen389 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( negative-support $?gen19 ) ( negative-overruled $?gen20 & : ( subseq-pos ( create$ rule1-overruled $?gen19 $$$ $?gen20 ) ) ) ) ( test ( eq ( class ?gen16 ) jail_3_months ) ) ( not ( and ( object ( name ?gen23 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen22 & : ( >= ?gen22 1 ) ) ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( positive-defeated $?gen18 & : ( not ( member$ rule1 $?gen18 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen19 (create$) ) ) ) ( not ( object ( name ?gen16 ) ( is-a jail_3_months ) ( negative-overruled $?gen21 & : ( eq $?gen21 ( delete-member$ $?gen20 ( create$ rule1-overruled $?gen19 ) ) ) ) ) ) ( test ( instance-existp ?gen16 ) ) => ( bind $?gen21 ( delete-member$ $?gen20 ( create$ rule1-overruled $?gen19 ) ) ) ( message-modify-instance ?gen16 ( negative-overruled $?gen21 ) ) )
( defrule rule1-overruled-gen391 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen23 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen22 & : ( >= ?gen22 1 ) ) ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( negative-support $?gen19 ) ( negative-overruled $?gen20 & : ( not ( subseq-pos ( create$ rule1-overruled $?gen19 $$$ $?gen20 ) ) ) ) ( positive-defeated $?gen18 & : ( not ( member$ rule1 $?gen18 ) ) ) ) ( test ( eq ( class ?gen16 ) jail_3_months ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen19 (create$) ) ) ) ( not ( object ( name ?gen16 ) ( is-a jail_3_months ) ( negative-overruled $?gen21 & : ( eq $?gen21 ( create$ rule1-overruled $?gen19 $?gen20 ) ) ) ) ) ( test ( instance-existp ?gen16 ) ) => ( bind $?gen21 ( create$ rule1-overruled $?gen19 $?gen20 ) ) ( message-modify-instance ?gen16 ( negative-overruled $?gen21 ) ) )
( defrule rule1-support-gen393 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen15 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive-support $?gen18 & : ( not ( subseq-pos ( create$ rule1 ?gen15 $$$ $?gen18 ) ) ) ) ) ( test ( eq ( class ?gen16 ) jail_3_months ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen16 ) ( is-a jail_3_months ) ( positive-support $?gen21 & : ( eq $?gen21 ( create$ rule1 ?gen15 $?gen18 ) ) ) ) ) ( test ( instance-existp ?gen16 ) ) => ( bind $?gen21 ( create$ rule1 ?gen15 $?gen18 ) ) ( message-modify-instance ?gen16 ( positive-support $?gen21 ) ) )
( defrule pen18-deductive-gen204 ( declare ( salience ( calc-salience to_pay_min3 ) ) ) ( run-deductive-rules ) ( object ( name ?gen177 ) ( is-a fine ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_min3 ) ( value 30 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_min3 30 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_min3 30 ) ) ) ( make-instance ?oid of to_pay_min3 ( value 30 ) ) )
( defrule pen17-deductive-gen203 ( declare ( salience ( calc-salience to_pay_max3 ) ) ) ( run-deductive-rules ) ( object ( name ?gen168 ) ( is-a fine ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_max3 ) ( value 500 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_max3 500 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_max3 500 ) ) ) ( make-instance ?oid of to_pay_max3 ( value 500 ) ) )
( defrule pen16-deductive-gen202 ( declare ( salience ( calc-salience jail_3_year ) ) ) ( run-deductive-rules ) ( object ( name ?gen159 ) ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ) ( not ( object ( is-a jail_3_year ) ( value 3 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat jail_3_year 3 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat jail_3_year 3 ) ) ) ( make-instance ?oid of jail_3_year ( value 3 ) ) )
( defrule pen15-deductive-gen201 ( declare ( salience ( calc-salience to_pay_min2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen150 ) ( is-a money ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_min2 ) ( value 30 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_min2 30 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_min2 30 ) ) ) ( make-instance ?oid of to_pay_min2 ( value 30 ) ) )
( defrule pen14-deductive-gen200 ( declare ( salience ( calc-salience to_pay_max2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen141 ) ( is-a money ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_max2 ) ( value 500 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_max2 500 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_max2 500 ) ) ) ( make-instance ?oid of to_pay_max2 ( value 500 ) ) )
( defrule pen13-deductive-gen199 ( declare ( salience ( calc-salience to_pay_min ) ) ) ( run-deductive-rules ) ( object ( name ?gen132 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_min ) ( value 30 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_min 30 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_min 30 ) ) ) ( make-instance ?oid of to_pay_min ( value 30 ) ) )
( defrule pen12-deductive-gen198 ( declare ( salience ( calc-salience to_pay_max ) ) ) ( run-deductive-rules ) ( object ( name ?gen123 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_max ) ( value 500 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_max 500 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_max 500 ) ) ) ( make-instance ?oid of to_pay_max ( value 500 ) ) )
( defrule pen11-deductive-gen197 ( declare ( salience ( calc-salience to_increase_penalty ) ) ) ( run-deductive-rules ) ( object ( name ?gen114 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_increase_penalty ) ( value true ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_increase_penalty true ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_increase_penalty true ) ) ) ( make-instance ?oid of to_increase_penalty ( value true ) ) )
( defrule pen10-deductive-gen196 ( declare ( salience ( calc-salience to_pay_less ) ) ) ( run-deductive-rules ) ( object ( name ?gen105 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_less ) ( value true ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_less true ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_less true ) ) ) ( make-instance ?oid of to_pay_less ( value true ) ) )
( defrule pen7-deductive-gen195 ( declare ( salience ( calc-salience confiscate_weapon ) ) ) ( run-deductive-rules ) ( object ( name ?gen96 ) ( is-a confiscation ) ( defendant ?Defendant ) ) ( not ( object ( is-a confiscate_weapon ) ( value true ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat confiscate_weapon true ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat confiscate_weapon true ) ) ) ( make-instance ?oid of confiscate_weapon ( value true ) ) )
( defrule pen1-deductive-gen194 ( declare ( salience ( calc-salience 30_imprisonment ) ) ) ( run-deductive-rules ) ( object ( name ?gen87 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ) ( not ( object ( is-a 30_imprisonment ) ( value 30 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat 30_imprisonment 30 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat 30_imprisonment 30 ) ) ) ( make-instance ?oid of 30_imprisonment ( value 30 ) ) )
( defrule rule11-deductive-gen193 ( declare ( salience ( calc-salience is_high_category_weapon_in_public ) ) ) ( run-deductive-rules ) ( object ( name ?gen78 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ) ( not ( object ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat is_high_category_weapon_in_public ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat is_high_category_weapon_in_public ?Defendant ) ) ) ( make-instance ?oid of is_high_category_weapon_in_public ( defendant ?Defendant ) ) )
( defrule rule10-deductive-gen192 ( declare ( salience ( calc-salience recommend_increased_penalty ) ) ) ( run-deductive-rules ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ) ( not ( object ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat recommend_increased_penalty ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat recommend_increased_penalty ?Defendant ) ) ) ( make-instance ?oid of recommend_increased_penalty ( defendant ?Defendant ) ) )
( defrule rule9-deductive-gen191 ( declare ( salience ( calc-salience recommend_fine_reduction ) ) ) ( run-deductive-rules ) ( object ( name ?gen60 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ) ( not ( object ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat recommend_fine_reduction ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat recommend_fine_reduction ?Defendant ) ) ) ( make-instance ?oid of recommend_fine_reduction ( defendant ?Defendant ) ) )
( defrule rule8-deductive-gen190 ( declare ( salience ( calc-salience money ) ) ) ( run-deductive-rules ) ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( object ( name ?gen49 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ) ( not ( object ( is-a money ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat money ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat money ?Defendant ) ) ) ( make-instance ?oid of money ( defendant ?Defendant ) ) )
( defrule rule7-deductive-gen189 ( declare ( salience ( calc-salience confiscation ) ) ) ( run-deductive-rules ) ( object ( name ?gen39 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( not ( object ( is-a confiscation ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat confiscation ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat confiscation ?Defendant ) ) ) ( make-instance ?oid of confiscation ( defendant ?Defendant ) ) )
( defrule rule2-deductive-gen188 ( declare ( salience ( calc-salience harm_done_with_weapon ) ) ) ( run-deductive-rules ) ( object ( name ?gen30 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:harm_done "yes" ) ) ( not ( object ( is-a harm_done_with_weapon ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat harm_done_with_weapon ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat harm_done_with_weapon ?Defendant ) ) ) ( make-instance ?oid of harm_done_with_weapon ( defendant ?Defendant ) ) )
( defrule rule111-deductive-gen187 ( declare ( salience ( calc-salience fine ) ) ) ( run-deductive-rules ) ( not ( object ( is-a fine ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat fine ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat fine ?Defendant ) ) ) ( make-instance ?oid of fine ( defendant ?Defendant ) ) )
( defrule rule1-deductive-gen186 ( declare ( salience ( calc-salience jail_3_months ) ) ) ( run-deductive-rules ) ( object ( name ?gen15 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( not ( object ( is-a jail_3_months ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat jail_3_months ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat jail_3_months ?Defendant ) ) ) ( make-instance ?oid of jail_3_months ( defendant ?Defendant ) ) )
