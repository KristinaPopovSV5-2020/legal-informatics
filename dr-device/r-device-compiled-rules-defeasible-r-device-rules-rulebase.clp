( defrule pen15-defeasibly-dot-gen158 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( value 30 ) ( positive 1 ) ( positive-derivator pen15 $? ) ) ( test ( eq ( class ?gen136 ) to_pay_min2 ) ) ( not ( and ( object ( name ?gen143 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen142 & : ( >= ?gen142 1 ) ) ) ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( negative ~ 2 ) ( positive-overruled $?gen138 & : ( not ( member$ pen15 $?gen138 ) ) ) ) ) )  ( not ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen136 ) ) => ( message-modify-instance ?gen136 ( positive 0 ) ) )
( defrule pen15-defeasibly-gen160 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen143 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen142 & : ( >= ?gen142 1 ) ) ) ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( value 30 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen138 & : ( not ( member$ pen15 $?gen138 ) ) ) ) ( test ( eq ( class ?gen136 ) to_pay_min2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( positive 1 ) ( positive-derivator pen15 ?gen143 ) ) ) ( test ( instance-existp ?gen136 ) ) => ( message-modify-instance ?gen136 ( positive 1 ) ( positive-derivator pen15 ?gen143 ) ) )
( defrule pen15-overruled-dot-gen162 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( value 30 ) ( negative-support $?gen139 ) ( negative-overruled $?gen140 & : ( subseq-pos ( create$ pen15-overruled $?gen139 $$$ $?gen140 ) ) ) ) ( test ( eq ( class ?gen136 ) to_pay_min2 ) ) ( not ( and ( object ( name ?gen143 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen142 & : ( >= ?gen142 1 ) ) ) ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( positive-defeated $?gen138 & : ( not ( member$ pen15 $?gen138 ) ) ) ) ) ) ( test ( neq $?gen139 (create$) ) ) ( not ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( negative-overruled $?gen141 & : ( eq $?gen141 ( delete-member$ $?gen140 ( create$ pen15-overruled $?gen139 ) ) ) ) ) ) ( test ( instance-existp ?gen136 ) ) => ( bind $?gen141 ( delete-member$ $?gen140 ( create$ pen15-overruled $?gen139 ) ) ) ( message-modify-instance ?gen136 ( negative-overruled $?gen141 ) ) )
( defrule pen15-overruled-gen164 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen143 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen142 & : ( >= ?gen142 1 ) ) ) ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( value 30 ) ( negative-support $?gen139 ) ( negative-overruled $?gen140 & : ( not ( subseq-pos ( create$ pen15-overruled $?gen139 $$$ $?gen140 ) ) ) ) ( positive-defeated $?gen138 & : ( not ( member$ pen15 $?gen138 ) ) ) ) ( test ( eq ( class ?gen136 ) to_pay_min2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen139 (create$) ) ) ) ( not ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( negative-overruled $?gen141 & : ( eq $?gen141 ( create$ pen15-overruled $?gen139 $?gen140 ) ) ) ) ) ( test ( instance-existp ?gen136 ) ) => ( bind $?gen141 ( create$ pen15-overruled $?gen139 $?gen140 ) ) ( message-modify-instance ?gen136 ( negative-overruled $?gen141 ) ) )
( defrule pen15-support-gen166 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen135 ) ( is-a money ) ( defendant ?Defendant ) ) ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( value 30 ) ( positive-support $?gen138 & : ( not ( subseq-pos ( create$ pen15 ?gen135 $$$ $?gen138 ) ) ) ) ) ( test ( eq ( class ?gen136 ) to_pay_min2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen136 ) ( is-a to_pay_min2 ) ( positive-support $?gen141 & : ( eq $?gen141 ( create$ pen15 ?gen135 $?gen138 ) ) ) ) ) ( test ( instance-existp ?gen136 ) ) => ( bind $?gen141 ( create$ pen15 ?gen135 $?gen138 ) ) ( message-modify-instance ?gen136 ( positive-support $?gen141 ) ) )
( defrule pen14-defeasibly-dot-gen168 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( value 500 ) ( positive 1 ) ( positive-derivator pen14 $? ) ) ( test ( eq ( class ?gen127 ) to_pay_max2 ) ) ( not ( and ( object ( name ?gen134 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( negative ~ 2 ) ( positive-overruled $?gen129 & : ( not ( member$ pen14 $?gen129 ) ) ) ) ) )  ( not ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen127 ) ) => ( message-modify-instance ?gen127 ( positive 0 ) ) )
( defrule pen14-defeasibly-gen170 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen134 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( value 500 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen129 & : ( not ( member$ pen14 $?gen129 ) ) ) ) ( test ( eq ( class ?gen127 ) to_pay_max2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( positive 1 ) ( positive-derivator pen14 ?gen134 ) ) ) ( test ( instance-existp ?gen127 ) ) => ( message-modify-instance ?gen127 ( positive 1 ) ( positive-derivator pen14 ?gen134 ) ) )
( defrule pen14-overruled-dot-gen172 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( value 500 ) ( negative-support $?gen130 ) ( negative-overruled $?gen131 & : ( subseq-pos ( create$ pen14-overruled $?gen130 $$$ $?gen131 ) ) ) ) ( test ( eq ( class ?gen127 ) to_pay_max2 ) ) ( not ( and ( object ( name ?gen134 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( positive-defeated $?gen129 & : ( not ( member$ pen14 $?gen129 ) ) ) ) ) ) ( test ( neq $?gen130 (create$) ) ) ( not ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( negative-overruled $?gen132 & : ( eq $?gen132 ( delete-member$ $?gen131 ( create$ pen14-overruled $?gen130 ) ) ) ) ) ) ( test ( instance-existp ?gen127 ) ) => ( bind $?gen132 ( delete-member$ $?gen131 ( create$ pen14-overruled $?gen130 ) ) ) ( message-modify-instance ?gen127 ( negative-overruled $?gen132 ) ) )
( defrule pen14-overruled-gen174 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen134 ) ( is-a money ) ( defendant ?Defendant ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( value 500 ) ( negative-support $?gen130 ) ( negative-overruled $?gen131 & : ( not ( subseq-pos ( create$ pen14-overruled $?gen130 $$$ $?gen131 ) ) ) ) ( positive-defeated $?gen129 & : ( not ( member$ pen14 $?gen129 ) ) ) ) ( test ( eq ( class ?gen127 ) to_pay_max2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen130 (create$) ) ) ) ( not ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( negative-overruled $?gen132 & : ( eq $?gen132 ( create$ pen14-overruled $?gen130 $?gen131 ) ) ) ) ) ( test ( instance-existp ?gen127 ) ) => ( bind $?gen132 ( create$ pen14-overruled $?gen130 $?gen131 ) ) ( message-modify-instance ?gen127 ( negative-overruled $?gen132 ) ) )
( defrule pen14-support-gen176 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen126 ) ( is-a money ) ( defendant ?Defendant ) ) ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( value 500 ) ( positive-support $?gen129 & : ( not ( subseq-pos ( create$ pen14 ?gen126 $$$ $?gen129 ) ) ) ) ) ( test ( eq ( class ?gen127 ) to_pay_max2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen127 ) ( is-a to_pay_max2 ) ( positive-support $?gen132 & : ( eq $?gen132 ( create$ pen14 ?gen126 $?gen129 ) ) ) ) ) ( test ( instance-existp ?gen127 ) ) => ( bind $?gen132 ( create$ pen14 ?gen126 $?gen129 ) ) ( message-modify-instance ?gen127 ( positive-support $?gen132 ) ) )
( defrule pen13-defeasibly-dot-gen178 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen118 ) ( is-a to_pay_min ) ( value 30 ) ( positive 1 ) ( positive-derivator pen13 $? ) ) ( test ( eq ( class ?gen118 ) to_pay_min ) ) ( not ( and ( object ( name ?gen125 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen124 & : ( >= ?gen124 1 ) ) ) ( object ( name ?gen118 ) ( is-a to_pay_min ) ( negative ~ 2 ) ( positive-overruled $?gen120 & : ( not ( member$ pen13 $?gen120 ) ) ) ) ) )  ( not ( object ( name ?gen118 ) ( is-a to_pay_min ) ( positive 0 ) ) ) ( test ( instance-existp ?gen118 ) ) => ( message-modify-instance ?gen118 ( positive 0 ) ) )
( defrule pen13-defeasibly-gen180 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen125 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen124 & : ( >= ?gen124 1 ) ) ) ( object ( name ?gen118 ) ( is-a to_pay_min ) ( value 30 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen120 & : ( not ( member$ pen13 $?gen120 ) ) ) ) ( test ( eq ( class ?gen118 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen118 ) ( is-a to_pay_min ) ( positive 1 ) ( positive-derivator pen13 ?gen125 ) ) ) ( test ( instance-existp ?gen118 ) ) => ( message-modify-instance ?gen118 ( positive 1 ) ( positive-derivator pen13 ?gen125 ) ) )
( defrule pen13-overruled-dot-gen182 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen118 ) ( is-a to_pay_min ) ( value 30 ) ( negative-support $?gen121 ) ( negative-overruled $?gen122 & : ( subseq-pos ( create$ pen13-overruled $?gen121 $$$ $?gen122 ) ) ) ) ( test ( eq ( class ?gen118 ) to_pay_min ) ) ( not ( and ( object ( name ?gen125 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen124 & : ( >= ?gen124 1 ) ) ) ( object ( name ?gen118 ) ( is-a to_pay_min ) ( positive-defeated $?gen120 & : ( not ( member$ pen13 $?gen120 ) ) ) ) ) ) ( test ( neq $?gen121 (create$) ) ) ( not ( object ( name ?gen118 ) ( is-a to_pay_min ) ( negative-overruled $?gen123 & : ( eq $?gen123 ( delete-member$ $?gen122 ( create$ pen13-overruled $?gen121 ) ) ) ) ) ) ( test ( instance-existp ?gen118 ) ) => ( bind $?gen123 ( delete-member$ $?gen122 ( create$ pen13-overruled $?gen121 ) ) ) ( message-modify-instance ?gen118 ( negative-overruled $?gen123 ) ) )
( defrule pen13-overruled-gen184 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen125 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen124 & : ( >= ?gen124 1 ) ) ) ( object ( name ?gen118 ) ( is-a to_pay_min ) ( value 30 ) ( negative-support $?gen121 ) ( negative-overruled $?gen122 & : ( not ( subseq-pos ( create$ pen13-overruled $?gen121 $$$ $?gen122 ) ) ) ) ( positive-defeated $?gen120 & : ( not ( member$ pen13 $?gen120 ) ) ) ) ( test ( eq ( class ?gen118 ) to_pay_min ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen121 (create$) ) ) ) ( not ( object ( name ?gen118 ) ( is-a to_pay_min ) ( negative-overruled $?gen123 & : ( eq $?gen123 ( create$ pen13-overruled $?gen121 $?gen122 ) ) ) ) ) ( test ( instance-existp ?gen118 ) ) => ( bind $?gen123 ( create$ pen13-overruled $?gen121 $?gen122 ) ) ( message-modify-instance ?gen118 ( negative-overruled $?gen123 ) ) )
( defrule pen13-support-gen186 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen117 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ) ( object ( name ?gen118 ) ( is-a to_pay_min ) ( value 30 ) ( positive-support $?gen120 & : ( not ( subseq-pos ( create$ pen13 ?gen117 $$$ $?gen120 ) ) ) ) ) ( test ( eq ( class ?gen118 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen118 ) ( is-a to_pay_min ) ( positive-support $?gen123 & : ( eq $?gen123 ( create$ pen13 ?gen117 $?gen120 ) ) ) ) ) ( test ( instance-existp ?gen118 ) ) => ( bind $?gen123 ( create$ pen13 ?gen117 $?gen120 ) ) ( message-modify-instance ?gen118 ( positive-support $?gen123 ) ) )
( defrule pen12-defeasibly-dot-gen188 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen109 ) ( is-a to_pay_max ) ( value 500 ) ( positive 1 ) ( positive-derivator pen12 $? ) ) ( test ( eq ( class ?gen109 ) to_pay_max ) ) ( not ( and ( object ( name ?gen116 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen115 & : ( >= ?gen115 1 ) ) ) ( object ( name ?gen109 ) ( is-a to_pay_max ) ( negative ~ 2 ) ( positive-overruled $?gen111 & : ( not ( member$ pen12 $?gen111 ) ) ) ) ) )  ( not ( object ( name ?gen109 ) ( is-a to_pay_max ) ( positive 0 ) ) ) ( test ( instance-existp ?gen109 ) ) => ( message-modify-instance ?gen109 ( positive 0 ) ) )
( defrule pen12-defeasibly-gen190 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen116 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen115 & : ( >= ?gen115 1 ) ) ) ( object ( name ?gen109 ) ( is-a to_pay_max ) ( value 500 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen111 & : ( not ( member$ pen12 $?gen111 ) ) ) ) ( test ( eq ( class ?gen109 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen109 ) ( is-a to_pay_max ) ( positive 1 ) ( positive-derivator pen12 ?gen116 ) ) ) ( test ( instance-existp ?gen109 ) ) => ( message-modify-instance ?gen109 ( positive 1 ) ( positive-derivator pen12 ?gen116 ) ) )
( defrule pen12-overruled-dot-gen192 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen109 ) ( is-a to_pay_max ) ( value 500 ) ( negative-support $?gen112 ) ( negative-overruled $?gen113 & : ( subseq-pos ( create$ pen12-overruled $?gen112 $$$ $?gen113 ) ) ) ) ( test ( eq ( class ?gen109 ) to_pay_max ) ) ( not ( and ( object ( name ?gen116 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen115 & : ( >= ?gen115 1 ) ) ) ( object ( name ?gen109 ) ( is-a to_pay_max ) ( positive-defeated $?gen111 & : ( not ( member$ pen12 $?gen111 ) ) ) ) ) ) ( test ( neq $?gen112 (create$) ) ) ( not ( object ( name ?gen109 ) ( is-a to_pay_max ) ( negative-overruled $?gen114 & : ( eq $?gen114 ( delete-member$ $?gen113 ( create$ pen12-overruled $?gen112 ) ) ) ) ) ) ( test ( instance-existp ?gen109 ) ) => ( bind $?gen114 ( delete-member$ $?gen113 ( create$ pen12-overruled $?gen112 ) ) ) ( message-modify-instance ?gen109 ( negative-overruled $?gen114 ) ) )
( defrule pen12-overruled-gen194 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen116 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive ?gen115 & : ( >= ?gen115 1 ) ) ) ( object ( name ?gen109 ) ( is-a to_pay_max ) ( value 500 ) ( negative-support $?gen112 ) ( negative-overruled $?gen113 & : ( not ( subseq-pos ( create$ pen12-overruled $?gen112 $$$ $?gen113 ) ) ) ) ( positive-defeated $?gen111 & : ( not ( member$ pen12 $?gen111 ) ) ) ) ( test ( eq ( class ?gen109 ) to_pay_max ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen112 (create$) ) ) ) ( not ( object ( name ?gen109 ) ( is-a to_pay_max ) ( negative-overruled $?gen114 & : ( eq $?gen114 ( create$ pen12-overruled $?gen112 $?gen113 ) ) ) ) ) ( test ( instance-existp ?gen109 ) ) => ( bind $?gen114 ( create$ pen12-overruled $?gen112 $?gen113 ) ) ( message-modify-instance ?gen109 ( negative-overruled $?gen114 ) ) )
( defrule pen12-support-gen196 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen108 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ) ( object ( name ?gen109 ) ( is-a to_pay_max ) ( value 500 ) ( positive-support $?gen111 & : ( not ( subseq-pos ( create$ pen12 ?gen108 $$$ $?gen111 ) ) ) ) ) ( test ( eq ( class ?gen109 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen109 ) ( is-a to_pay_max ) ( positive-support $?gen114 & : ( eq $?gen114 ( create$ pen12 ?gen108 $?gen111 ) ) ) ) ) ( test ( instance-existp ?gen109 ) ) => ( bind $?gen114 ( create$ pen12 ?gen108 $?gen111 ) ) ( message-modify-instance ?gen109 ( positive-support $?gen114 ) ) )
( defrule pen11-defeasibly-dot-gen198 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( value 1 ) ( positive 1 ) ( positive-derivator pen11 $? ) ) ( test ( eq ( class ?gen100 ) to_increase_penalty ) ) ( not ( and ( object ( name ?gen107 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive ?gen106 & : ( >= ?gen106 1 ) ) ) ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( negative ~ 2 ) ( positive-overruled $?gen102 & : ( not ( member$ pen11 $?gen102 ) ) ) ) ) )  ( not ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( positive 0 ) ) ) ( test ( instance-existp ?gen100 ) ) => ( message-modify-instance ?gen100 ( positive 0 ) ) )
( defrule pen11-defeasibly-gen200 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen107 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive ?gen106 & : ( >= ?gen106 1 ) ) ) ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( value 1 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen102 & : ( not ( member$ pen11 $?gen102 ) ) ) ) ( test ( eq ( class ?gen100 ) to_increase_penalty ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( positive 1 ) ( positive-derivator pen11 ?gen107 ) ) ) ( test ( instance-existp ?gen100 ) ) => ( message-modify-instance ?gen100 ( positive 1 ) ( positive-derivator pen11 ?gen107 ) ) )
( defrule pen11-overruled-dot-gen202 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( value 1 ) ( negative-support $?gen103 ) ( negative-overruled $?gen104 & : ( subseq-pos ( create$ pen11-overruled $?gen103 $$$ $?gen104 ) ) ) ) ( test ( eq ( class ?gen100 ) to_increase_penalty ) ) ( not ( and ( object ( name ?gen107 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive ?gen106 & : ( >= ?gen106 1 ) ) ) ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( positive-defeated $?gen102 & : ( not ( member$ pen11 $?gen102 ) ) ) ) ) ) ( test ( neq $?gen103 (create$) ) ) ( not ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( negative-overruled $?gen105 & : ( eq $?gen105 ( delete-member$ $?gen104 ( create$ pen11-overruled $?gen103 ) ) ) ) ) ) ( test ( instance-existp ?gen100 ) ) => ( bind $?gen105 ( delete-member$ $?gen104 ( create$ pen11-overruled $?gen103 ) ) ) ( message-modify-instance ?gen100 ( negative-overruled $?gen105 ) ) )
( defrule pen11-overruled-gen204 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen107 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive ?gen106 & : ( >= ?gen106 1 ) ) ) ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( value 1 ) ( negative-support $?gen103 ) ( negative-overruled $?gen104 & : ( not ( subseq-pos ( create$ pen11-overruled $?gen103 $$$ $?gen104 ) ) ) ) ( positive-defeated $?gen102 & : ( not ( member$ pen11 $?gen102 ) ) ) ) ( test ( eq ( class ?gen100 ) to_increase_penalty ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen103 (create$) ) ) ) ( not ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( negative-overruled $?gen105 & : ( eq $?gen105 ( create$ pen11-overruled $?gen103 $?gen104 ) ) ) ) ) ( test ( instance-existp ?gen100 ) ) => ( bind $?gen105 ( create$ pen11-overruled $?gen103 $?gen104 ) ) ( message-modify-instance ?gen100 ( negative-overruled $?gen105 ) ) )
( defrule pen11-support-gen206 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen99 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ) ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( value 1 ) ( positive-support $?gen102 & : ( not ( subseq-pos ( create$ pen11 ?gen99 $$$ $?gen102 ) ) ) ) ) ( test ( eq ( class ?gen100 ) to_increase_penalty ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen100 ) ( is-a to_increase_penalty ) ( positive-support $?gen105 & : ( eq $?gen105 ( create$ pen11 ?gen99 $?gen102 ) ) ) ) ) ( test ( instance-existp ?gen100 ) ) => ( bind $?gen105 ( create$ pen11 ?gen99 $?gen102 ) ) ( message-modify-instance ?gen100 ( positive-support $?gen105 ) ) )
( defrule pen10-defeasibly-dot-gen208 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen91 ) ( is-a to_pay_less ) ( value 1 ) ( positive 1 ) ( positive-derivator pen10 $? ) ) ( test ( eq ( class ?gen91 ) to_pay_less ) ) ( not ( and ( object ( name ?gen98 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive ?gen97 & : ( >= ?gen97 1 ) ) ) ( object ( name ?gen91 ) ( is-a to_pay_less ) ( negative ~ 2 ) ( positive-overruled $?gen93 & : ( not ( member$ pen10 $?gen93 ) ) ) ) ) )  ( not ( object ( name ?gen91 ) ( is-a to_pay_less ) ( positive 0 ) ) ) ( test ( instance-existp ?gen91 ) ) => ( message-modify-instance ?gen91 ( positive 0 ) ) )
( defrule pen10-defeasibly-gen210 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen98 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive ?gen97 & : ( >= ?gen97 1 ) ) ) ( object ( name ?gen91 ) ( is-a to_pay_less ) ( value 1 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen93 & : ( not ( member$ pen10 $?gen93 ) ) ) ) ( test ( eq ( class ?gen91 ) to_pay_less ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen91 ) ( is-a to_pay_less ) ( positive 1 ) ( positive-derivator pen10 ?gen98 ) ) ) ( test ( instance-existp ?gen91 ) ) => ( message-modify-instance ?gen91 ( positive 1 ) ( positive-derivator pen10 ?gen98 ) ) )
( defrule pen10-overruled-dot-gen212 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen91 ) ( is-a to_pay_less ) ( value 1 ) ( negative-support $?gen94 ) ( negative-overruled $?gen95 & : ( subseq-pos ( create$ pen10-overruled $?gen94 $$$ $?gen95 ) ) ) ) ( test ( eq ( class ?gen91 ) to_pay_less ) ) ( not ( and ( object ( name ?gen98 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive ?gen97 & : ( >= ?gen97 1 ) ) ) ( object ( name ?gen91 ) ( is-a to_pay_less ) ( positive-defeated $?gen93 & : ( not ( member$ pen10 $?gen93 ) ) ) ) ) ) ( test ( neq $?gen94 (create$) ) ) ( not ( object ( name ?gen91 ) ( is-a to_pay_less ) ( negative-overruled $?gen96 & : ( eq $?gen96 ( delete-member$ $?gen95 ( create$ pen10-overruled $?gen94 ) ) ) ) ) ) ( test ( instance-existp ?gen91 ) ) => ( bind $?gen96 ( delete-member$ $?gen95 ( create$ pen10-overruled $?gen94 ) ) ) ( message-modify-instance ?gen91 ( negative-overruled $?gen96 ) ) )
( defrule pen10-overruled-gen214 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen98 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive ?gen97 & : ( >= ?gen97 1 ) ) ) ( object ( name ?gen91 ) ( is-a to_pay_less ) ( value 1 ) ( negative-support $?gen94 ) ( negative-overruled $?gen95 & : ( not ( subseq-pos ( create$ pen10-overruled $?gen94 $$$ $?gen95 ) ) ) ) ( positive-defeated $?gen93 & : ( not ( member$ pen10 $?gen93 ) ) ) ) ( test ( eq ( class ?gen91 ) to_pay_less ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen94 (create$) ) ) ) ( not ( object ( name ?gen91 ) ( is-a to_pay_less ) ( negative-overruled $?gen96 & : ( eq $?gen96 ( create$ pen10-overruled $?gen94 $?gen95 ) ) ) ) ) ( test ( instance-existp ?gen91 ) ) => ( bind $?gen96 ( create$ pen10-overruled $?gen94 $?gen95 ) ) ( message-modify-instance ?gen91 ( negative-overruled $?gen96 ) ) )
( defrule pen10-support-gen216 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen90 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ) ( object ( name ?gen91 ) ( is-a to_pay_less ) ( value 1 ) ( positive-support $?gen93 & : ( not ( subseq-pos ( create$ pen10 ?gen90 $$$ $?gen93 ) ) ) ) ) ( test ( eq ( class ?gen91 ) to_pay_less ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen91 ) ( is-a to_pay_less ) ( positive-support $?gen96 & : ( eq $?gen96 ( create$ pen10 ?gen90 $?gen93 ) ) ) ) ) ( test ( instance-existp ?gen91 ) ) => ( bind $?gen96 ( create$ pen10 ?gen90 $?gen93 ) ) ( message-modify-instance ?gen91 ( positive-support $?gen96 ) ) )
( defrule pen7-defeasibly-dot-gen218 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( value 1 ) ( positive 1 ) ( positive-derivator pen7 $? ) ) ( test ( eq ( class ?gen82 ) confiscate_weapon ) ) ( not ( and ( object ( name ?gen89 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive ?gen88 & : ( >= ?gen88 1 ) ) ) ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( negative ~ 2 ) ( positive-overruled $?gen84 & : ( not ( member$ pen7 $?gen84 ) ) ) ) ) )  ( not ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( positive 0 ) ) ) ( test ( instance-existp ?gen82 ) ) => ( message-modify-instance ?gen82 ( positive 0 ) ) )
( defrule pen7-defeasibly-gen220 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen89 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive ?gen88 & : ( >= ?gen88 1 ) ) ) ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( value 1 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen84 & : ( not ( member$ pen7 $?gen84 ) ) ) ) ( test ( eq ( class ?gen82 ) confiscate_weapon ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( positive 1 ) ( positive-derivator pen7 ?gen89 ) ) ) ( test ( instance-existp ?gen82 ) ) => ( message-modify-instance ?gen82 ( positive 1 ) ( positive-derivator pen7 ?gen89 ) ) )
( defrule pen7-overruled-dot-gen222 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( value 1 ) ( negative-support $?gen85 ) ( negative-overruled $?gen86 & : ( subseq-pos ( create$ pen7-overruled $?gen85 $$$ $?gen86 ) ) ) ) ( test ( eq ( class ?gen82 ) confiscate_weapon ) ) ( not ( and ( object ( name ?gen89 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive ?gen88 & : ( >= ?gen88 1 ) ) ) ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( positive-defeated $?gen84 & : ( not ( member$ pen7 $?gen84 ) ) ) ) ) ) ( test ( neq $?gen85 (create$) ) ) ( not ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( negative-overruled $?gen87 & : ( eq $?gen87 ( delete-member$ $?gen86 ( create$ pen7-overruled $?gen85 ) ) ) ) ) ) ( test ( instance-existp ?gen82 ) ) => ( bind $?gen87 ( delete-member$ $?gen86 ( create$ pen7-overruled $?gen85 ) ) ) ( message-modify-instance ?gen82 ( negative-overruled $?gen87 ) ) )
( defrule pen7-overruled-gen224 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen89 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive ?gen88 & : ( >= ?gen88 1 ) ) ) ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( value 1 ) ( negative-support $?gen85 ) ( negative-overruled $?gen86 & : ( not ( subseq-pos ( create$ pen7-overruled $?gen85 $$$ $?gen86 ) ) ) ) ( positive-defeated $?gen84 & : ( not ( member$ pen7 $?gen84 ) ) ) ) ( test ( eq ( class ?gen82 ) confiscate_weapon ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen85 (create$) ) ) ) ( not ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( negative-overruled $?gen87 & : ( eq $?gen87 ( create$ pen7-overruled $?gen85 $?gen86 ) ) ) ) ) ( test ( instance-existp ?gen82 ) ) => ( bind $?gen87 ( create$ pen7-overruled $?gen85 $?gen86 ) ) ( message-modify-instance ?gen82 ( negative-overruled $?gen87 ) ) )
( defrule pen7-support-gen226 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen81 ) ( is-a confiscation ) ( defendant ?Defendant ) ) ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( value 1 ) ( positive-support $?gen84 & : ( not ( subseq-pos ( create$ pen7 ?gen81 $$$ $?gen84 ) ) ) ) ) ( test ( eq ( class ?gen82 ) confiscate_weapon ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen82 ) ( is-a confiscate_weapon ) ( positive-support $?gen87 & : ( eq $?gen87 ( create$ pen7 ?gen81 $?gen84 ) ) ) ) ) ( test ( instance-existp ?gen82 ) ) => ( bind $?gen87 ( create$ pen7 ?gen81 $?gen84 ) ) ( message-modify-instance ?gen82 ( positive-support $?gen87 ) ) )
( defrule pen1-defeasibly-dot-gen228 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( value 30 ) ( positive 1 ) ( positive-derivator pen1 $? ) ) ( test ( eq ( class ?gen73 ) 30_imprisonment ) ) ( not ( and ( object ( name ?gen80 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive ?gen79 & : ( >= ?gen79 1 ) ) ) ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( negative ~ 2 ) ( positive-overruled $?gen75 & : ( not ( member$ pen1 $?gen75 ) ) ) ) ) )  ( not ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( positive 0 ) ) ) ( test ( instance-existp ?gen73 ) ) => ( message-modify-instance ?gen73 ( positive 0 ) ) )
( defrule pen1-defeasibly-gen230 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen80 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive ?gen79 & : ( >= ?gen79 1 ) ) ) ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( value 30 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen75 & : ( not ( member$ pen1 $?gen75 ) ) ) ) ( test ( eq ( class ?gen73 ) 30_imprisonment ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( positive 1 ) ( positive-derivator pen1 ?gen80 ) ) ) ( test ( instance-existp ?gen73 ) ) => ( message-modify-instance ?gen73 ( positive 1 ) ( positive-derivator pen1 ?gen80 ) ) )
( defrule pen1-overruled-dot-gen232 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( value 30 ) ( negative-support $?gen76 ) ( negative-overruled $?gen77 & : ( subseq-pos ( create$ pen1-overruled $?gen76 $$$ $?gen77 ) ) ) ) ( test ( eq ( class ?gen73 ) 30_imprisonment ) ) ( not ( and ( object ( name ?gen80 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive ?gen79 & : ( >= ?gen79 1 ) ) ) ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( positive-defeated $?gen75 & : ( not ( member$ pen1 $?gen75 ) ) ) ) ) ) ( test ( neq $?gen76 (create$) ) ) ( not ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( negative-overruled $?gen78 & : ( eq $?gen78 ( delete-member$ $?gen77 ( create$ pen1-overruled $?gen76 ) ) ) ) ) ) ( test ( instance-existp ?gen73 ) ) => ( bind $?gen78 ( delete-member$ $?gen77 ( create$ pen1-overruled $?gen76 ) ) ) ( message-modify-instance ?gen73 ( negative-overruled $?gen78 ) ) )
( defrule pen1-overruled-gen234 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen80 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive ?gen79 & : ( >= ?gen79 1 ) ) ) ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( value 30 ) ( negative-support $?gen76 ) ( negative-overruled $?gen77 & : ( not ( subseq-pos ( create$ pen1-overruled $?gen76 $$$ $?gen77 ) ) ) ) ( positive-defeated $?gen75 & : ( not ( member$ pen1 $?gen75 ) ) ) ) ( test ( eq ( class ?gen73 ) 30_imprisonment ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen76 (create$) ) ) ) ( not ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( negative-overruled $?gen78 & : ( eq $?gen78 ( create$ pen1-overruled $?gen76 $?gen77 ) ) ) ) ) ( test ( instance-existp ?gen73 ) ) => ( bind $?gen78 ( create$ pen1-overruled $?gen76 $?gen77 ) ) ( message-modify-instance ?gen73 ( negative-overruled $?gen78 ) ) )
( defrule pen1-support-gen236 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen72 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ) ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( value 30 ) ( positive-support $?gen75 & : ( not ( subseq-pos ( create$ pen1 ?gen72 $$$ $?gen75 ) ) ) ) ) ( test ( eq ( class ?gen73 ) 30_imprisonment ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen73 ) ( is-a 30_imprisonment ) ( positive-support $?gen78 & : ( eq $?gen78 ( create$ pen1 ?gen72 $?gen75 ) ) ) ) ) ( test ( instance-existp ?gen73 ) ) => ( bind $?gen78 ( create$ pen1 ?gen72 $?gen75 ) ) ( message-modify-instance ?gen73 ( positive-support $?gen78 ) ) )
( defrule rule11-defeasibly-dot-gen238 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule11 $? ) ) ( test ( eq ( class ?gen64 ) is_high_category_weapon_in_public ) ) ( not ( and ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( negative ~ 2 ) ( positive-overruled $?gen66 & : ( not ( member$ rule11 $?gen66 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( positive 0 ) ) ) ( test ( instance-existp ?gen64 ) ) => ( message-modify-instance ?gen64 ( positive 0 ) ) )
( defrule rule11-defeasibly-gen240 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen66 & : ( not ( member$ rule11 $?gen66 ) ) ) ) ( test ( eq ( class ?gen64 ) is_high_category_weapon_in_public ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( positive 1 ) ( positive-derivator rule11 ?gen71 ) ) ) ( test ( instance-existp ?gen64 ) ) => ( message-modify-instance ?gen64 ( positive 1 ) ( positive-derivator rule11 ?gen71 ) ) )
( defrule rule11-overruled-dot-gen242 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( negative-support $?gen67 ) ( negative-overruled $?gen68 & : ( subseq-pos ( create$ rule11-overruled $?gen67 $$$ $?gen68 ) ) ) ) ( test ( eq ( class ?gen64 ) is_high_category_weapon_in_public ) ) ( not ( and ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( positive-defeated $?gen66 & : ( not ( member$ rule11 $?gen66 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen67 (create$) ) ) ) ( not ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( negative-overruled $?gen69 & : ( eq $?gen69 ( delete-member$ $?gen68 ( create$ rule11-overruled $?gen67 ) ) ) ) ) ) ( test ( instance-existp ?gen64 ) ) => ( bind $?gen69 ( delete-member$ $?gen68 ( create$ rule11-overruled $?gen67 ) ) ) ( message-modify-instance ?gen64 ( negative-overruled $?gen69 ) ) )
( defrule rule11-overruled-gen244 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( negative-support $?gen67 ) ( negative-overruled $?gen68 & : ( not ( subseq-pos ( create$ rule11-overruled $?gen67 $$$ $?gen68 ) ) ) ) ( positive-defeated $?gen66 & : ( not ( member$ rule11 $?gen66 ) ) ) ) ( test ( eq ( class ?gen64 ) is_high_category_weapon_in_public ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen67 (create$) ) ) ) ( not ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( negative-overruled $?gen69 & : ( eq $?gen69 ( create$ rule11-overruled $?gen67 $?gen68 ) ) ) ) ) ( test ( instance-existp ?gen64 ) ) => ( bind $?gen69 ( create$ rule11-overruled $?gen67 $?gen68 ) ) ( message-modify-instance ?gen64 ( negative-overruled $?gen69 ) ) )
( defrule rule11-support-gen246 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen63 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ) ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ( positive-support $?gen66 & : ( not ( subseq-pos ( create$ rule11 ?gen63 $$$ $?gen66 ) ) ) ) ) ( test ( eq ( class ?gen64 ) is_high_category_weapon_in_public ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen64 ) ( is-a is_high_category_weapon_in_public ) ( positive-support $?gen69 & : ( eq $?gen69 ( create$ rule11 ?gen63 $?gen66 ) ) ) ) ) ( test ( instance-existp ?gen64 ) ) => ( bind $?gen69 ( create$ rule11 ?gen63 $?gen66 ) ) ( message-modify-instance ?gen64 ( positive-support $?gen69 ) ) )
( defrule rule10-defeasibly-dot-gen248 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule10 $? ) ) ( test ( eq ( class ?gen55 ) recommend_increased_penalty ) ) ( not ( and ( object ( name ?gen62 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ( positive ?gen61 & : ( >= ?gen61 1 ) ) ) ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( negative ~ 2 ) ( positive-overruled $?gen57 & : ( not ( member$ rule10 $?gen57 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( positive 0 ) ) ) ( test ( instance-existp ?gen55 ) ) => ( message-modify-instance ?gen55 ( positive 0 ) ) )
( defrule rule10-defeasibly-gen250 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen62 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ( positive ?gen61 & : ( >= ?gen61 1 ) ) ) ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen57 & : ( not ( member$ rule10 $?gen57 ) ) ) ) ( test ( eq ( class ?gen55 ) recommend_increased_penalty ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( positive 1 ) ( positive-derivator rule10 ?gen62 ) ) ) ( test ( instance-existp ?gen55 ) ) => ( message-modify-instance ?gen55 ( positive 1 ) ( positive-derivator rule10 ?gen62 ) ) )
( defrule rule10-overruled-dot-gen252 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( negative-support $?gen58 ) ( negative-overruled $?gen59 & : ( subseq-pos ( create$ rule10-overruled $?gen58 $$$ $?gen59 ) ) ) ) ( test ( eq ( class ?gen55 ) recommend_increased_penalty ) ) ( not ( and ( object ( name ?gen62 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ( positive ?gen61 & : ( >= ?gen61 1 ) ) ) ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( positive-defeated $?gen57 & : ( not ( member$ rule10 $?gen57 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen58 (create$) ) ) ) ( not ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( negative-overruled $?gen60 & : ( eq $?gen60 ( delete-member$ $?gen59 ( create$ rule10-overruled $?gen58 ) ) ) ) ) ) ( test ( instance-existp ?gen55 ) ) => ( bind $?gen60 ( delete-member$ $?gen59 ( create$ rule10-overruled $?gen58 ) ) ) ( message-modify-instance ?gen55 ( negative-overruled $?gen60 ) ) )
( defrule rule10-overruled-gen254 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen62 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ( positive ?gen61 & : ( >= ?gen61 1 ) ) ) ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( negative-support $?gen58 ) ( negative-overruled $?gen59 & : ( not ( subseq-pos ( create$ rule10-overruled $?gen58 $$$ $?gen59 ) ) ) ) ( positive-defeated $?gen57 & : ( not ( member$ rule10 $?gen57 ) ) ) ) ( test ( eq ( class ?gen55 ) recommend_increased_penalty ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen58 (create$) ) ) ) ( not ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( negative-overruled $?gen60 & : ( eq $?gen60 ( create$ rule10-overruled $?gen58 $?gen59 ) ) ) ) ) ( test ( instance-existp ?gen55 ) ) => ( bind $?gen60 ( create$ rule10-overruled $?gen58 $?gen59 ) ) ( message-modify-instance ?gen55 ( negative-overruled $?gen60 ) ) )
( defrule rule10-support-gen256 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen54 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ) ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ( positive-support $?gen57 & : ( not ( subseq-pos ( create$ rule10 ?gen54 $$$ $?gen57 ) ) ) ) ) ( test ( eq ( class ?gen55 ) recommend_increased_penalty ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen55 ) ( is-a recommend_increased_penalty ) ( positive-support $?gen60 & : ( eq $?gen60 ( create$ rule10 ?gen54 $?gen57 ) ) ) ) ) ( test ( instance-existp ?gen55 ) ) => ( bind $?gen60 ( create$ rule10 ?gen54 $?gen57 ) ) ( message-modify-instance ?gen55 ( positive-support $?gen60 ) ) )
( defrule rule9-defeasibly-dot-gen258 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule9 $? ) ) ( test ( eq ( class ?gen46 ) recommend_fine_reduction ) ) ( not ( and ( object ( name ?gen53 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ( positive ?gen52 & : ( >= ?gen52 1 ) ) ) ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( negative ~ 2 ) ( positive-overruled $?gen48 & : ( not ( member$ rule9 $?gen48 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( positive 0 ) ) ) ( test ( instance-existp ?gen46 ) ) => ( message-modify-instance ?gen46 ( positive 0 ) ) )
( defrule rule9-defeasibly-gen260 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen53 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ( positive ?gen52 & : ( >= ?gen52 1 ) ) ) ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen48 & : ( not ( member$ rule9 $?gen48 ) ) ) ) ( test ( eq ( class ?gen46 ) recommend_fine_reduction ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( positive 1 ) ( positive-derivator rule9 ?gen53 ) ) ) ( test ( instance-existp ?gen46 ) ) => ( message-modify-instance ?gen46 ( positive 1 ) ( positive-derivator rule9 ?gen53 ) ) )
( defrule rule9-overruled-dot-gen262 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( negative-support $?gen49 ) ( negative-overruled $?gen50 & : ( subseq-pos ( create$ rule9-overruled $?gen49 $$$ $?gen50 ) ) ) ) ( test ( eq ( class ?gen46 ) recommend_fine_reduction ) ) ( not ( and ( object ( name ?gen53 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ( positive ?gen52 & : ( >= ?gen52 1 ) ) ) ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( positive-defeated $?gen48 & : ( not ( member$ rule9 $?gen48 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen49 (create$) ) ) ) ( not ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( negative-overruled $?gen51 & : ( eq $?gen51 ( delete-member$ $?gen50 ( create$ rule9-overruled $?gen49 ) ) ) ) ) ) ( test ( instance-existp ?gen46 ) ) => ( bind $?gen51 ( delete-member$ $?gen50 ( create$ rule9-overruled $?gen49 ) ) ) ( message-modify-instance ?gen46 ( negative-overruled $?gen51 ) ) )
( defrule rule9-overruled-gen264 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen53 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ( positive ?gen52 & : ( >= ?gen52 1 ) ) ) ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( negative-support $?gen49 ) ( negative-overruled $?gen50 & : ( not ( subseq-pos ( create$ rule9-overruled $?gen49 $$$ $?gen50 ) ) ) ) ( positive-defeated $?gen48 & : ( not ( member$ rule9 $?gen48 ) ) ) ) ( test ( eq ( class ?gen46 ) recommend_fine_reduction ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen49 (create$) ) ) ) ( not ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( negative-overruled $?gen51 & : ( eq $?gen51 ( create$ rule9-overruled $?gen49 $?gen50 ) ) ) ) ) ( test ( instance-existp ?gen46 ) ) => ( bind $?gen51 ( create$ rule9-overruled $?gen49 $?gen50 ) ) ( message-modify-instance ?gen46 ( negative-overruled $?gen51 ) ) )
( defrule rule9-support-gen266 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen45 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ) ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ( positive-support $?gen48 & : ( not ( subseq-pos ( create$ rule9 ?gen45 $$$ $?gen48 ) ) ) ) ) ( test ( eq ( class ?gen46 ) recommend_fine_reduction ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen46 ) ( is-a recommend_fine_reduction ) ( positive-support $?gen51 & : ( eq $?gen51 ( create$ rule9 ?gen45 $?gen48 ) ) ) ) ) ( test ( instance-existp ?gen46 ) ) => ( bind $?gen51 ( create$ rule9 ?gen45 $?gen48 ) ) ( message-modify-instance ?gen46 ( positive-support $?gen51 ) ) )
( defrule rule8-defeasibly-dot-gen268 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen35 ) ( is-a money ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule8 $? ) ) ( test ( eq ( class ?gen35 ) money ) ) ( not ( and ( object ( name ?gen42 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ( object ( name ?gen44 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ( positive ?gen43 & : ( >= ?gen43 1 ) ) ) ( object ( name ?gen35 ) ( is-a money ) ( negative ~ 2 ) ( positive-overruled $?gen37 & : ( not ( member$ rule8 $?gen37 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen35 ) ( is-a money ) ( positive 0 ) ) ) ( test ( instance-existp ?gen35 ) ) => ( message-modify-instance ?gen35 ( positive 0 ) ) )
( defrule rule8-defeasibly-gen270 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen42 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ( object ( name ?gen44 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ( positive ?gen43 & : ( >= ?gen43 1 ) ) ) ( object ( name ?gen35 ) ( is-a money ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen37 & : ( not ( member$ rule8 $?gen37 ) ) ) ) ( test ( eq ( class ?gen35 ) money ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen35 ) ( is-a money ) ( positive 1 ) ( positive-derivator rule8 ?gen42 ?gen44 ) ) ) ( test ( instance-existp ?gen35 ) ) => ( message-modify-instance ?gen35 ( positive 1 ) ( positive-derivator rule8 ?gen42 ?gen44 ) ) )
( defrule rule8-overruled-dot-gen272 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen35 ) ( is-a money ) ( defendant ?Defendant ) ( negative-support $?gen38 ) ( negative-overruled $?gen39 & : ( subseq-pos ( create$ rule8-overruled $?gen38 $$$ $?gen39 ) ) ) ) ( test ( eq ( class ?gen35 ) money ) ) ( not ( and ( object ( name ?gen42 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ( object ( name ?gen44 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ( positive ?gen43 & : ( >= ?gen43 1 ) ) ) ( object ( name ?gen35 ) ( is-a money ) ( positive-defeated $?gen37 & : ( not ( member$ rule8 $?gen37 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen38 (create$) ) ) ) ( not ( object ( name ?gen35 ) ( is-a money ) ( negative-overruled $?gen40 & : ( eq $?gen40 ( delete-member$ $?gen39 ( create$ rule8-overruled $?gen38 ) ) ) ) ) ) ( test ( instance-existp ?gen35 ) ) => ( bind $?gen40 ( delete-member$ $?gen39 ( create$ rule8-overruled $?gen38 ) ) ) ( message-modify-instance ?gen35 ( negative-overruled $?gen40 ) ) )
( defrule rule8-overruled-gen274 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen42 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ( object ( name ?gen44 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ( positive ?gen43 & : ( >= ?gen43 1 ) ) ) ( object ( name ?gen35 ) ( is-a money ) ( defendant ?Defendant ) ( negative-support $?gen38 ) ( negative-overruled $?gen39 & : ( not ( subseq-pos ( create$ rule8-overruled $?gen38 $$$ $?gen39 ) ) ) ) ( positive-defeated $?gen37 & : ( not ( member$ rule8 $?gen37 ) ) ) ) ( test ( eq ( class ?gen35 ) money ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen38 (create$) ) ) ) ( not ( object ( name ?gen35 ) ( is-a money ) ( negative-overruled $?gen40 & : ( eq $?gen40 ( create$ rule8-overruled $?gen38 $?gen39 ) ) ) ) ) ( test ( instance-existp ?gen35 ) ) => ( bind $?gen40 ( create$ rule8-overruled $?gen38 $?gen39 ) ) ( message-modify-instance ?gen35 ( negative-overruled $?gen40 ) ) )
( defrule rule8-support-gen276 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen33 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( object ( name ?gen34 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ) ( object ( name ?gen35 ) ( is-a money ) ( defendant ?Defendant ) ( positive-support $?gen37 & : ( not ( subseq-pos ( create$ rule8 ?gen33 ?gen34 $$$ $?gen37 ) ) ) ) ) ( test ( eq ( class ?gen35 ) money ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen35 ) ( is-a money ) ( positive-support $?gen40 & : ( eq $?gen40 ( create$ rule8 ?gen33 ?gen34 $?gen37 ) ) ) ) ) ( test ( instance-existp ?gen35 ) ) => ( bind $?gen40 ( create$ rule8 ?gen33 ?gen34 $?gen37 ) ) ( message-modify-instance ?gen35 ( positive-support $?gen40 ) ) )
( defrule rule7-defeasibly-dot-gen278 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen25 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule7 $? ) ) ( test ( eq ( class ?gen25 ) confiscation ) ) ( not ( and ( object ( name ?gen32 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen31 & : ( >= ?gen31 1 ) ) ) ( object ( name ?gen25 ) ( is-a confiscation ) ( negative ~ 2 ) ( positive-overruled $?gen27 & : ( not ( member$ rule7 $?gen27 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen25 ) ( is-a confiscation ) ( positive 0 ) ) ) ( test ( instance-existp ?gen25 ) ) => ( message-modify-instance ?gen25 ( positive 0 ) ) )
( defrule rule7-defeasibly-gen280 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen32 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen31 & : ( >= ?gen31 1 ) ) ) ( object ( name ?gen25 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen27 & : ( not ( member$ rule7 $?gen27 ) ) ) ) ( test ( eq ( class ?gen25 ) confiscation ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen25 ) ( is-a confiscation ) ( positive 1 ) ( positive-derivator rule7 ?gen32 ) ) ) ( test ( instance-existp ?gen25 ) ) => ( message-modify-instance ?gen25 ( positive 1 ) ( positive-derivator rule7 ?gen32 ) ) )
( defrule rule7-overruled-dot-gen282 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen25 ) ( is-a confiscation ) ( defendant ?Defendant ) ( negative-support $?gen28 ) ( negative-overruled $?gen29 & : ( subseq-pos ( create$ rule7-overruled $?gen28 $$$ $?gen29 ) ) ) ) ( test ( eq ( class ?gen25 ) confiscation ) ) ( not ( and ( object ( name ?gen32 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen31 & : ( >= ?gen31 1 ) ) ) ( object ( name ?gen25 ) ( is-a confiscation ) ( positive-defeated $?gen27 & : ( not ( member$ rule7 $?gen27 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen28 (create$) ) ) ) ( not ( object ( name ?gen25 ) ( is-a confiscation ) ( negative-overruled $?gen30 & : ( eq $?gen30 ( delete-member$ $?gen29 ( create$ rule7-overruled $?gen28 ) ) ) ) ) ) ( test ( instance-existp ?gen25 ) ) => ( bind $?gen30 ( delete-member$ $?gen29 ( create$ rule7-overruled $?gen28 ) ) ) ( message-modify-instance ?gen25 ( negative-overruled $?gen30 ) ) )
( defrule rule7-overruled-gen284 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen32 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen31 & : ( >= ?gen31 1 ) ) ) ( object ( name ?gen25 ) ( is-a confiscation ) ( defendant ?Defendant ) ( negative-support $?gen28 ) ( negative-overruled $?gen29 & : ( not ( subseq-pos ( create$ rule7-overruled $?gen28 $$$ $?gen29 ) ) ) ) ( positive-defeated $?gen27 & : ( not ( member$ rule7 $?gen27 ) ) ) ) ( test ( eq ( class ?gen25 ) confiscation ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen28 (create$) ) ) ) ( not ( object ( name ?gen25 ) ( is-a confiscation ) ( negative-overruled $?gen30 & : ( eq $?gen30 ( create$ rule7-overruled $?gen28 $?gen29 ) ) ) ) ) ( test ( instance-existp ?gen25 ) ) => ( bind $?gen30 ( create$ rule7-overruled $?gen28 $?gen29 ) ) ( message-modify-instance ?gen25 ( negative-overruled $?gen30 ) ) )
( defrule rule7-support-gen286 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen24 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( object ( name ?gen25 ) ( is-a confiscation ) ( defendant ?Defendant ) ( positive-support $?gen27 & : ( not ( subseq-pos ( create$ rule7 ?gen24 $$$ $?gen27 ) ) ) ) ) ( test ( eq ( class ?gen25 ) confiscation ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen25 ) ( is-a confiscation ) ( positive-support $?gen30 & : ( eq $?gen30 ( create$ rule7 ?gen24 $?gen27 ) ) ) ) ) ( test ( instance-existp ?gen25 ) ) => ( bind $?gen30 ( create$ rule7 ?gen24 $?gen27 ) ) ( message-modify-instance ?gen25 ( positive-support $?gen30 ) ) )
( defrule rule1-defeasibly-dot-gen288 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule1 $? ) ) ( test ( eq ( class ?gen16 ) jail_3_months ) ) ( not ( and ( object ( name ?gen23 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen22 & : ( >= ?gen22 1 ) ) ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( negative ~ 2 ) ( positive-overruled $?gen18 & : ( not ( member$ rule1 $?gen18 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen16 ) ( is-a jail_3_months ) ( positive 0 ) ) ) ( test ( instance-existp ?gen16 ) ) => ( message-modify-instance ?gen16 ( positive 0 ) ) )
( defrule rule1-defeasibly-gen290 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen23 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen22 & : ( >= ?gen22 1 ) ) ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen18 & : ( not ( member$ rule1 $?gen18 ) ) ) ) ( test ( eq ( class ?gen16 ) jail_3_months ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen16 ) ( is-a jail_3_months ) ( positive 1 ) ( positive-derivator rule1 ?gen23 ) ) ) ( test ( instance-existp ?gen16 ) ) => ( message-modify-instance ?gen16 ( positive 1 ) ( positive-derivator rule1 ?gen23 ) ) )
( defrule rule1-overruled-dot-gen292 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( negative-support $?gen19 ) ( negative-overruled $?gen20 & : ( subseq-pos ( create$ rule1-overruled $?gen19 $$$ $?gen20 ) ) ) ) ( test ( eq ( class ?gen16 ) jail_3_months ) ) ( not ( and ( object ( name ?gen23 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen22 & : ( >= ?gen22 1 ) ) ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( positive-defeated $?gen18 & : ( not ( member$ rule1 $?gen18 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen19 (create$) ) ) ) ( not ( object ( name ?gen16 ) ( is-a jail_3_months ) ( negative-overruled $?gen21 & : ( eq $?gen21 ( delete-member$ $?gen20 ( create$ rule1-overruled $?gen19 ) ) ) ) ) ) ( test ( instance-existp ?gen16 ) ) => ( bind $?gen21 ( delete-member$ $?gen20 ( create$ rule1-overruled $?gen19 ) ) ) ( message-modify-instance ?gen16 ( negative-overruled $?gen21 ) ) )
( defrule rule1-overruled-gen294 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen23 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ( positive ?gen22 & : ( >= ?gen22 1 ) ) ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( negative-support $?gen19 ) ( negative-overruled $?gen20 & : ( not ( subseq-pos ( create$ rule1-overruled $?gen19 $$$ $?gen20 ) ) ) ) ( positive-defeated $?gen18 & : ( not ( member$ rule1 $?gen18 ) ) ) ) ( test ( eq ( class ?gen16 ) jail_3_months ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen19 (create$) ) ) ) ( not ( object ( name ?gen16 ) ( is-a jail_3_months ) ( negative-overruled $?gen21 & : ( eq $?gen21 ( create$ rule1-overruled $?gen19 $?gen20 ) ) ) ) ) ( test ( instance-existp ?gen16 ) ) => ( bind $?gen21 ( create$ rule1-overruled $?gen19 $?gen20 ) ) ( message-modify-instance ?gen16 ( negative-overruled $?gen21 ) ) )
( defrule rule1-support-gen296 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen15 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( object ( name ?gen16 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ( positive-support $?gen18 & : ( not ( subseq-pos ( create$ rule1 ?gen15 $$$ $?gen18 ) ) ) ) ) ( test ( eq ( class ?gen16 ) jail_3_months ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen16 ) ( is-a jail_3_months ) ( positive-support $?gen21 & : ( eq $?gen21 ( create$ rule1 ?gen15 $?gen18 ) ) ) ) ) ( test ( instance-existp ?gen16 ) ) => ( bind $?gen21 ( create$ rule1 ?gen15 $?gen18 ) ) ( message-modify-instance ?gen16 ( positive-support $?gen21 ) ) )
( defrule pen15-deductive-gen157 ( declare ( salience ( calc-salience to_pay_min2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen135 ) ( is-a money ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_min2 ) ( value 30 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_min2 30 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_min2 30 ) ) ) ( make-instance ?oid of to_pay_min2 ( value 30 ) ) )
( defrule pen14-deductive-gen156 ( declare ( salience ( calc-salience to_pay_max2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen126 ) ( is-a money ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_max2 ) ( value 500 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_max2 500 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_max2 500 ) ) ) ( make-instance ?oid of to_pay_max2 ( value 500 ) ) )
( defrule pen13-deductive-gen155 ( declare ( salience ( calc-salience to_pay_min ) ) ) ( run-deductive-rules ) ( object ( name ?gen117 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_min ) ( value 30 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_min 30 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_min 30 ) ) ) ( make-instance ?oid of to_pay_min ( value 30 ) ) )
( defrule pen12-deductive-gen154 ( declare ( salience ( calc-salience to_pay_max ) ) ) ( run-deductive-rules ) ( object ( name ?gen108 ) ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_max ) ( value 500 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_max 500 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_max 500 ) ) ) ( make-instance ?oid of to_pay_max ( value 500 ) ) )
( defrule pen11-deductive-gen153 ( declare ( salience ( calc-salience to_increase_penalty ) ) ) ( run-deductive-rules ) ( object ( name ?gen99 ) ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_increase_penalty ) ( value 1 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_increase_penalty 1 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_increase_penalty 1 ) ) ) ( make-instance ?oid of to_increase_penalty ( value 1 ) ) )
( defrule pen10-deductive-gen152 ( declare ( salience ( calc-salience to_pay_less ) ) ) ( run-deductive-rules ) ( object ( name ?gen90 ) ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_less ) ( value 1 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_less 1 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_less 1 ) ) ) ( make-instance ?oid of to_pay_less ( value 1 ) ) )
( defrule pen7-deductive-gen151 ( declare ( salience ( calc-salience confiscate_weapon ) ) ) ( run-deductive-rules ) ( object ( name ?gen81 ) ( is-a confiscation ) ( defendant ?Defendant ) ) ( not ( object ( is-a confiscate_weapon ) ( value 1 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat confiscate_weapon 1 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat confiscate_weapon 1 ) ) ) ( make-instance ?oid of confiscate_weapon ( value 1 ) ) )
( defrule pen1-deductive-gen150 ( declare ( salience ( calc-salience 30_imprisonment ) ) ) ( run-deductive-rules ) ( object ( name ?gen72 ) ( is-a jail_3_months ) ( defendant ?Defendant ) ) ( not ( object ( is-a 30_imprisonment ) ( value 30 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat 30_imprisonment 30 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat 30_imprisonment 30 ) ) ) ( make-instance ?oid of 30_imprisonment ( value 30 ) ) )
( defrule rule11-deductive-gen149 ( declare ( salience ( calc-salience is_high_category_weapon_in_public ) ) ) ( run-deductive-rules ) ( object ( name ?gen63 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:method_of_weapon_discovery "public" ) ) ( not ( object ( is-a is_high_category_weapon_in_public ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat is_high_category_weapon_in_public ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat is_high_category_weapon_in_public ?Defendant ) ) ) ( make-instance ?oid of is_high_category_weapon_in_public ( defendant ?Defendant ) ) )
( defrule rule10-deductive-gen148 ( declare ( salience ( calc-salience recommend_increased_penalty ) ) ) ( run-deductive-rules ) ( object ( name ?gen54 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:previously_convicted "yes" ) ) ( not ( object ( is-a recommend_increased_penalty ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat recommend_increased_penalty ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat recommend_increased_penalty ?Defendant ) ) ) ( make-instance ?oid of recommend_increased_penalty ( defendant ?Defendant ) ) )
( defrule rule9-deductive-gen147 ( declare ( salience ( calc-salience recommend_fine_reduction ) ) ) ( run-deductive-rules ) ( object ( name ?gen45 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:low_income "yes" ) ) ( not ( object ( is-a recommend_fine_reduction ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat recommend_fine_reduction ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat recommend_fine_reduction ?Defendant ) ) ) ( make-instance ?oid of recommend_fine_reduction ( defendant ?Defendant ) ) )
( defrule rule8-deductive-gen146 ( declare ( salience ( calc-salience money ) ) ) ( run-deductive-rules ) ( object ( name ?gen33 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( object ( name ?gen34 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:weapon_type "B" ) ) ( not ( object ( is-a money ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat money ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat money ?Defendant ) ) ) ( make-instance ?oid of money ( defendant ?Defendant ) ) )
( defrule rule7-deductive-gen145 ( declare ( salience ( calc-salience confiscation ) ) ) ( run-deductive-rules ) ( object ( name ?gen24 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( not ( object ( is-a confiscation ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat confiscation ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat confiscation ?Defendant ) ) ) ( make-instance ?oid of confiscation ( defendant ?Defendant ) ) )
( defrule rule1-deductive-gen144 ( declare ( salience ( calc-salience jail_3_months ) ) ) ( run-deductive-rules ) ( object ( name ?gen15 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:unauthorized_possession_of_a_weapon "yes" ) ) ( not ( object ( is-a jail_3_months ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat jail_3_months ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat jail_3_months ?Defendant ) ) ) ( make-instance ?oid of jail_3_months ( defendant ?Defendant ) ) )
